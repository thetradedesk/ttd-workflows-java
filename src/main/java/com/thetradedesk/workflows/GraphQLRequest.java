/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.thetradedesk.workflows;

import static com.thetradedesk.workflows.operations.Operations.RequestOperation;

import com.thetradedesk.workflows.models.components.GraphQLRequestInput;
import com.thetradedesk.workflows.models.operations.SubmitGraphQlRequestRequestBuilder;
import com.thetradedesk.workflows.models.operations.SubmitGraphQlRequestResponse;
import com.thetradedesk.workflows.operations.SubmitGraphQlRequestOperation;
import com.thetradedesk.workflows.utils.Options;
import java.lang.Exception;
import java.util.List;
import java.util.Optional;


public class GraphQLRequest {
    private final SDKConfiguration sdkConfiguration;

    GraphQLRequest(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Submit a valid GraphQL query or mutation
     * 
     * <p>This generic operation can be used to execute any valid GraphQL request.
     * To explore the available GraphQL operations, see the [GraphQL Schema Explorer](https://partner.thetradedesk.com/v3/portal/api/graphql-schema).
     * 
     * @return The call builder
     */
    public SubmitGraphQlRequestRequestBuilder submitGraphQlRequest() {
        return new SubmitGraphQlRequestRequestBuilder(sdkConfiguration);
    }

    /**
     * Submit a valid GraphQL query or mutation
     * 
     * <p>This generic operation can be used to execute any valid GraphQL request.
     * To explore the available GraphQL operations, see the [GraphQL Schema Explorer](https://partner.thetradedesk.com/v3/portal/api/graphql-schema).
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public SubmitGraphQlRequestResponse submitGraphQlRequestDirect() throws Exception {
        return submitGraphQlRequest(Optional.empty(), Optional.empty());
    }

    /**
     * Submit a valid GraphQL query or mutation
     * 
     * <p>This generic operation can be used to execute any valid GraphQL request.
     * To explore the available GraphQL operations, see the [GraphQL Schema Explorer](https://partner.thetradedesk.com/v3/portal/api/graphql-schema).
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public SubmitGraphQlRequestResponse submitGraphQlRequest(
            Optional<? extends GraphQLRequestInput> request,
            Optional<Options> options) throws Exception {
        RequestOperation<Optional<? extends GraphQLRequestInput>, SubmitGraphQlRequestResponse> operation
              = new SubmitGraphQlRequestOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
