/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.thetradedesk.workflows;

import static com.thetradedesk.workflows.operations.Operations.RequestOperation;

import com.thetradedesk.workflows.models.components.FirstPartyDataInput;
import com.thetradedesk.workflows.models.components.ThirdPartyDataInput;
import com.thetradedesk.workflows.models.operations.GetFirstPartyDataJobRequestBuilder;
import com.thetradedesk.workflows.models.operations.GetFirstPartyDataJobResponse;
import com.thetradedesk.workflows.models.operations.GetThirdPartyDataJobRequestBuilder;
import com.thetradedesk.workflows.models.operations.GetThirdPartyDataJobResponse;
import com.thetradedesk.workflows.operations.GetFirstPartyDataJobOperation;
import com.thetradedesk.workflows.operations.GetThirdPartyDataJobOperation;
import com.thetradedesk.workflows.utils.Options;
import java.lang.Exception;
import java.util.List;
import java.util.Optional;


public class Dmp {
    private final SDKConfiguration sdkConfiguration;

    Dmp(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Submit a job for first-party data retrieval for an advertiser
     * 
     * <p>When a first-party data query is submitted, a job ID is returned.
     * This job ID can be used to poll for the job's status using the associated operation under "Job Status".
     * 
     * @return The call builder
     */
    public GetFirstPartyDataJobRequestBuilder getFirstPartyDataJob() {
        return new GetFirstPartyDataJobRequestBuilder(sdkConfiguration);
    }

    /**
     * Submit a job for first-party data retrieval for an advertiser
     * 
     * <p>When a first-party data query is submitted, a job ID is returned.
     * This job ID can be used to poll for the job's status using the associated operation under "Job Status".
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetFirstPartyDataJobResponse getFirstPartyDataJobDirect() throws Exception {
        return getFirstPartyDataJob(Optional.empty(), Optional.empty());
    }

    /**
     * Submit a job for first-party data retrieval for an advertiser
     * 
     * <p>When a first-party data query is submitted, a job ID is returned.
     * This job ID can be used to poll for the job's status using the associated operation under "Job Status".
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetFirstPartyDataJobResponse getFirstPartyDataJob(
            Optional<? extends FirstPartyDataInput> request,
            Optional<Options> options) throws Exception {
        RequestOperation<Optional<? extends FirstPartyDataInput>, GetFirstPartyDataJobResponse> operation
              = new GetFirstPartyDataJobOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Submit a job for third-party data retrieval for a partner
     * 
     * <p>When a third-party data query is submitted, a job ID is returned.
     * This job ID can be used to poll for the job's status, and when complete, the results download link,
     * using the associated operation under "Job Status".
     * 
     * @return The call builder
     */
    public GetThirdPartyDataJobRequestBuilder getThirdPartyDataJob() {
        return new GetThirdPartyDataJobRequestBuilder(sdkConfiguration);
    }

    /**
     * Submit a job for third-party data retrieval for a partner
     * 
     * <p>When a third-party data query is submitted, a job ID is returned.
     * This job ID can be used to poll for the job's status, and when complete, the results download link,
     * using the associated operation under "Job Status".
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetThirdPartyDataJobResponse getThirdPartyDataJobDirect() throws Exception {
        return getThirdPartyDataJob(Optional.empty(), Optional.empty());
    }

    /**
     * Submit a job for third-party data retrieval for a partner
     * 
     * <p>When a third-party data query is submitted, a job ID is returned.
     * This job ID can be used to poll for the job's status, and when complete, the results download link,
     * using the associated operation under "Job Status".
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetThirdPartyDataJobResponse getThirdPartyDataJob(
            Optional<? extends ThirdPartyDataInput> request,
            Optional<Options> options) throws Exception {
        RequestOperation<Optional<? extends ThirdPartyDataInput>, GetThirdPartyDataJobResponse> operation
              = new GetThirdPartyDataJobOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
