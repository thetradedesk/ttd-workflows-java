/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.thetradedesk.workflows.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.thetradedesk.workflows.utils.Utils;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class CampaignWorkflow {

    @JsonInclude(Include.ALWAYS)
    @JsonProperty("id")
    private Optional<String> id;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    private JsonNullable<String> name;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    private JsonNullable<String> description;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startDate")
    private JsonNullable<OffsetDateTime> startDate;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endDate")
    private JsonNullable<OffsetDateTime> endDate;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeZone")
    private JsonNullable<String> timeZone;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customCPAClickWeight")
    private JsonNullable<Double> customCPAClickWeight;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customCPAViewthroughWeight")
    private JsonNullable<Double> customCPAViewthroughWeight;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customCPAType")
    private Optional<? extends CustomCPAType> customCPAType;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("impressionsOnlyBudgetingCpm")
    private JsonNullable<Double> impressionsOnlyBudgetingCpm;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryChannel")
    private Optional<? extends CampaignChannelType> primaryChannel;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryGoal")
    private JsonNullable<String> primaryGoal;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("seedId")
    private JsonNullable<String> seedId;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conversionReportingColumnsCount")
    private JsonNullable<Integer> conversionReportingColumnsCount;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("flights")
    private JsonNullable<? extends List<CampaignFlightWorkflow>> flights;

    @JsonCreator
    public CampaignWorkflow(
            @JsonProperty("id") Optional<String> id,
            @JsonProperty("name") JsonNullable<String> name,
            @JsonProperty("description") JsonNullable<String> description,
            @JsonProperty("startDate") JsonNullable<OffsetDateTime> startDate,
            @JsonProperty("endDate") JsonNullable<OffsetDateTime> endDate,
            @JsonProperty("timeZone") JsonNullable<String> timeZone,
            @JsonProperty("customCPAClickWeight") JsonNullable<Double> customCPAClickWeight,
            @JsonProperty("customCPAViewthroughWeight") JsonNullable<Double> customCPAViewthroughWeight,
            @JsonProperty("customCPAType") Optional<? extends CustomCPAType> customCPAType,
            @JsonProperty("impressionsOnlyBudgetingCpm") JsonNullable<Double> impressionsOnlyBudgetingCpm,
            @JsonProperty("primaryChannel") Optional<? extends CampaignChannelType> primaryChannel,
            @JsonProperty("primaryGoal") JsonNullable<String> primaryGoal,
            @JsonProperty("seedId") JsonNullable<String> seedId,
            @JsonProperty("conversionReportingColumnsCount") JsonNullable<Integer> conversionReportingColumnsCount,
            @JsonProperty("flights") JsonNullable<? extends List<CampaignFlightWorkflow>> flights) {
        Utils.checkNotNull(id, "id");
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(description, "description");
        Utils.checkNotNull(startDate, "startDate");
        Utils.checkNotNull(endDate, "endDate");
        Utils.checkNotNull(timeZone, "timeZone");
        Utils.checkNotNull(customCPAClickWeight, "customCPAClickWeight");
        Utils.checkNotNull(customCPAViewthroughWeight, "customCPAViewthroughWeight");
        Utils.checkNotNull(customCPAType, "customCPAType");
        Utils.checkNotNull(impressionsOnlyBudgetingCpm, "impressionsOnlyBudgetingCpm");
        Utils.checkNotNull(primaryChannel, "primaryChannel");
        Utils.checkNotNull(primaryGoal, "primaryGoal");
        Utils.checkNotNull(seedId, "seedId");
        Utils.checkNotNull(conversionReportingColumnsCount, "conversionReportingColumnsCount");
        Utils.checkNotNull(flights, "flights");
        this.id = id;
        this.name = name;
        this.description = description;
        this.startDate = startDate;
        this.endDate = endDate;
        this.timeZone = timeZone;
        this.customCPAClickWeight = customCPAClickWeight;
        this.customCPAViewthroughWeight = customCPAViewthroughWeight;
        this.customCPAType = customCPAType;
        this.impressionsOnlyBudgetingCpm = impressionsOnlyBudgetingCpm;
        this.primaryChannel = primaryChannel;
        this.primaryGoal = primaryGoal;
        this.seedId = seedId;
        this.conversionReportingColumnsCount = conversionReportingColumnsCount;
        this.flights = flights;
    }
    
    public CampaignWorkflow() {
        this(Optional.empty(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), Optional.empty(), JsonNullable.undefined(), Optional.empty(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    @JsonIgnore
    public Optional<String> id() {
        return id;
    }

    @JsonIgnore
    public JsonNullable<String> name() {
        return name;
    }

    @JsonIgnore
    public JsonNullable<String> description() {
        return description;
    }

    @JsonIgnore
    public JsonNullable<OffsetDateTime> startDate() {
        return startDate;
    }

    @JsonIgnore
    public JsonNullable<OffsetDateTime> endDate() {
        return endDate;
    }

    @JsonIgnore
    public JsonNullable<String> timeZone() {
        return timeZone;
    }

    @JsonIgnore
    public JsonNullable<Double> customCPAClickWeight() {
        return customCPAClickWeight;
    }

    @JsonIgnore
    public JsonNullable<Double> customCPAViewthroughWeight() {
        return customCPAViewthroughWeight;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<CustomCPAType> customCPAType() {
        return (Optional<CustomCPAType>) customCPAType;
    }

    @JsonIgnore
    public JsonNullable<Double> impressionsOnlyBudgetingCpm() {
        return impressionsOnlyBudgetingCpm;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<CampaignChannelType> primaryChannel() {
        return (Optional<CampaignChannelType>) primaryChannel;
    }

    @JsonIgnore
    public JsonNullable<String> primaryGoal() {
        return primaryGoal;
    }

    @JsonIgnore
    public JsonNullable<String> seedId() {
        return seedId;
    }

    @JsonIgnore
    public JsonNullable<Integer> conversionReportingColumnsCount() {
        return conversionReportingColumnsCount;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<CampaignFlightWorkflow>> flights() {
        return (JsonNullable<List<CampaignFlightWorkflow>>) flights;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public CampaignWorkflow withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = Optional.ofNullable(id);
        return this;
    }

    public CampaignWorkflow withId(Optional<String> id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    public CampaignWorkflow withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = JsonNullable.of(name);
        return this;
    }

    public CampaignWorkflow withName(JsonNullable<String> name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    public CampaignWorkflow withDescription(String description) {
        Utils.checkNotNull(description, "description");
        this.description = JsonNullable.of(description);
        return this;
    }

    public CampaignWorkflow withDescription(JsonNullable<String> description) {
        Utils.checkNotNull(description, "description");
        this.description = description;
        return this;
    }

    public CampaignWorkflow withStartDate(OffsetDateTime startDate) {
        Utils.checkNotNull(startDate, "startDate");
        this.startDate = JsonNullable.of(startDate);
        return this;
    }

    public CampaignWorkflow withStartDate(JsonNullable<OffsetDateTime> startDate) {
        Utils.checkNotNull(startDate, "startDate");
        this.startDate = startDate;
        return this;
    }

    public CampaignWorkflow withEndDate(OffsetDateTime endDate) {
        Utils.checkNotNull(endDate, "endDate");
        this.endDate = JsonNullable.of(endDate);
        return this;
    }

    public CampaignWorkflow withEndDate(JsonNullable<OffsetDateTime> endDate) {
        Utils.checkNotNull(endDate, "endDate");
        this.endDate = endDate;
        return this;
    }

    public CampaignWorkflow withTimeZone(String timeZone) {
        Utils.checkNotNull(timeZone, "timeZone");
        this.timeZone = JsonNullable.of(timeZone);
        return this;
    }

    public CampaignWorkflow withTimeZone(JsonNullable<String> timeZone) {
        Utils.checkNotNull(timeZone, "timeZone");
        this.timeZone = timeZone;
        return this;
    }

    public CampaignWorkflow withCustomCPAClickWeight(double customCPAClickWeight) {
        Utils.checkNotNull(customCPAClickWeight, "customCPAClickWeight");
        this.customCPAClickWeight = JsonNullable.of(customCPAClickWeight);
        return this;
    }

    public CampaignWorkflow withCustomCPAClickWeight(JsonNullable<Double> customCPAClickWeight) {
        Utils.checkNotNull(customCPAClickWeight, "customCPAClickWeight");
        this.customCPAClickWeight = customCPAClickWeight;
        return this;
    }

    public CampaignWorkflow withCustomCPAViewthroughWeight(double customCPAViewthroughWeight) {
        Utils.checkNotNull(customCPAViewthroughWeight, "customCPAViewthroughWeight");
        this.customCPAViewthroughWeight = JsonNullable.of(customCPAViewthroughWeight);
        return this;
    }

    public CampaignWorkflow withCustomCPAViewthroughWeight(JsonNullable<Double> customCPAViewthroughWeight) {
        Utils.checkNotNull(customCPAViewthroughWeight, "customCPAViewthroughWeight");
        this.customCPAViewthroughWeight = customCPAViewthroughWeight;
        return this;
    }

    public CampaignWorkflow withCustomCPAType(CustomCPAType customCPAType) {
        Utils.checkNotNull(customCPAType, "customCPAType");
        this.customCPAType = Optional.ofNullable(customCPAType);
        return this;
    }

    public CampaignWorkflow withCustomCPAType(Optional<? extends CustomCPAType> customCPAType) {
        Utils.checkNotNull(customCPAType, "customCPAType");
        this.customCPAType = customCPAType;
        return this;
    }

    public CampaignWorkflow withImpressionsOnlyBudgetingCpm(double impressionsOnlyBudgetingCpm) {
        Utils.checkNotNull(impressionsOnlyBudgetingCpm, "impressionsOnlyBudgetingCpm");
        this.impressionsOnlyBudgetingCpm = JsonNullable.of(impressionsOnlyBudgetingCpm);
        return this;
    }

    public CampaignWorkflow withImpressionsOnlyBudgetingCpm(JsonNullable<Double> impressionsOnlyBudgetingCpm) {
        Utils.checkNotNull(impressionsOnlyBudgetingCpm, "impressionsOnlyBudgetingCpm");
        this.impressionsOnlyBudgetingCpm = impressionsOnlyBudgetingCpm;
        return this;
    }

    public CampaignWorkflow withPrimaryChannel(CampaignChannelType primaryChannel) {
        Utils.checkNotNull(primaryChannel, "primaryChannel");
        this.primaryChannel = Optional.ofNullable(primaryChannel);
        return this;
    }

    public CampaignWorkflow withPrimaryChannel(Optional<? extends CampaignChannelType> primaryChannel) {
        Utils.checkNotNull(primaryChannel, "primaryChannel");
        this.primaryChannel = primaryChannel;
        return this;
    }

    public CampaignWorkflow withPrimaryGoal(String primaryGoal) {
        Utils.checkNotNull(primaryGoal, "primaryGoal");
        this.primaryGoal = JsonNullable.of(primaryGoal);
        return this;
    }

    public CampaignWorkflow withPrimaryGoal(JsonNullable<String> primaryGoal) {
        Utils.checkNotNull(primaryGoal, "primaryGoal");
        this.primaryGoal = primaryGoal;
        return this;
    }

    public CampaignWorkflow withSeedId(String seedId) {
        Utils.checkNotNull(seedId, "seedId");
        this.seedId = JsonNullable.of(seedId);
        return this;
    }

    public CampaignWorkflow withSeedId(JsonNullable<String> seedId) {
        Utils.checkNotNull(seedId, "seedId");
        this.seedId = seedId;
        return this;
    }

    public CampaignWorkflow withConversionReportingColumnsCount(int conversionReportingColumnsCount) {
        Utils.checkNotNull(conversionReportingColumnsCount, "conversionReportingColumnsCount");
        this.conversionReportingColumnsCount = JsonNullable.of(conversionReportingColumnsCount);
        return this;
    }

    public CampaignWorkflow withConversionReportingColumnsCount(JsonNullable<Integer> conversionReportingColumnsCount) {
        Utils.checkNotNull(conversionReportingColumnsCount, "conversionReportingColumnsCount");
        this.conversionReportingColumnsCount = conversionReportingColumnsCount;
        return this;
    }

    public CampaignWorkflow withFlights(List<CampaignFlightWorkflow> flights) {
        Utils.checkNotNull(flights, "flights");
        this.flights = JsonNullable.of(flights);
        return this;
    }

    public CampaignWorkflow withFlights(JsonNullable<? extends List<CampaignFlightWorkflow>> flights) {
        Utils.checkNotNull(flights, "flights");
        this.flights = flights;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CampaignWorkflow other = (CampaignWorkflow) o;
        return 
            Objects.deepEquals(this.id, other.id) &&
            Objects.deepEquals(this.name, other.name) &&
            Objects.deepEquals(this.description, other.description) &&
            Objects.deepEquals(this.startDate, other.startDate) &&
            Objects.deepEquals(this.endDate, other.endDate) &&
            Objects.deepEquals(this.timeZone, other.timeZone) &&
            Objects.deepEquals(this.customCPAClickWeight, other.customCPAClickWeight) &&
            Objects.deepEquals(this.customCPAViewthroughWeight, other.customCPAViewthroughWeight) &&
            Objects.deepEquals(this.customCPAType, other.customCPAType) &&
            Objects.deepEquals(this.impressionsOnlyBudgetingCpm, other.impressionsOnlyBudgetingCpm) &&
            Objects.deepEquals(this.primaryChannel, other.primaryChannel) &&
            Objects.deepEquals(this.primaryGoal, other.primaryGoal) &&
            Objects.deepEquals(this.seedId, other.seedId) &&
            Objects.deepEquals(this.conversionReportingColumnsCount, other.conversionReportingColumnsCount) &&
            Objects.deepEquals(this.flights, other.flights);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            id,
            name,
            description,
            startDate,
            endDate,
            timeZone,
            customCPAClickWeight,
            customCPAViewthroughWeight,
            customCPAType,
            impressionsOnlyBudgetingCpm,
            primaryChannel,
            primaryGoal,
            seedId,
            conversionReportingColumnsCount,
            flights);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CampaignWorkflow.class,
                "id", id,
                "name", name,
                "description", description,
                "startDate", startDate,
                "endDate", endDate,
                "timeZone", timeZone,
                "customCPAClickWeight", customCPAClickWeight,
                "customCPAViewthroughWeight", customCPAViewthroughWeight,
                "customCPAType", customCPAType,
                "impressionsOnlyBudgetingCpm", impressionsOnlyBudgetingCpm,
                "primaryChannel", primaryChannel,
                "primaryGoal", primaryGoal,
                "seedId", seedId,
                "conversionReportingColumnsCount", conversionReportingColumnsCount,
                "flights", flights);
    }
    
    public final static class Builder {
 
        private Optional<String> id = Optional.empty();
 
        private JsonNullable<String> name = JsonNullable.undefined();
 
        private JsonNullable<String> description = JsonNullable.undefined();
 
        private JsonNullable<OffsetDateTime> startDate = JsonNullable.undefined();
 
        private JsonNullable<OffsetDateTime> endDate = JsonNullable.undefined();
 
        private JsonNullable<String> timeZone = JsonNullable.undefined();
 
        private JsonNullable<Double> customCPAClickWeight = JsonNullable.undefined();
 
        private JsonNullable<Double> customCPAViewthroughWeight = JsonNullable.undefined();
 
        private Optional<? extends CustomCPAType> customCPAType = Optional.empty();
 
        private JsonNullable<Double> impressionsOnlyBudgetingCpm = JsonNullable.undefined();
 
        private Optional<? extends CampaignChannelType> primaryChannel = Optional.empty();
 
        private JsonNullable<String> primaryGoal = JsonNullable.undefined();
 
        private JsonNullable<String> seedId = JsonNullable.undefined();
 
        private JsonNullable<Integer> conversionReportingColumnsCount = JsonNullable.undefined();
 
        private JsonNullable<? extends List<CampaignFlightWorkflow>> flights = JsonNullable.undefined();
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = Optional.ofNullable(id);
            return this;
        }

        public Builder id(Optional<String> id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }

        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = JsonNullable.of(name);
            return this;
        }

        public Builder name(JsonNullable<String> name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }

        public Builder description(String description) {
            Utils.checkNotNull(description, "description");
            this.description = JsonNullable.of(description);
            return this;
        }

        public Builder description(JsonNullable<String> description) {
            Utils.checkNotNull(description, "description");
            this.description = description;
            return this;
        }

        public Builder startDate(OffsetDateTime startDate) {
            Utils.checkNotNull(startDate, "startDate");
            this.startDate = JsonNullable.of(startDate);
            return this;
        }

        public Builder startDate(JsonNullable<OffsetDateTime> startDate) {
            Utils.checkNotNull(startDate, "startDate");
            this.startDate = startDate;
            return this;
        }

        public Builder endDate(OffsetDateTime endDate) {
            Utils.checkNotNull(endDate, "endDate");
            this.endDate = JsonNullable.of(endDate);
            return this;
        }

        public Builder endDate(JsonNullable<OffsetDateTime> endDate) {
            Utils.checkNotNull(endDate, "endDate");
            this.endDate = endDate;
            return this;
        }

        public Builder timeZone(String timeZone) {
            Utils.checkNotNull(timeZone, "timeZone");
            this.timeZone = JsonNullable.of(timeZone);
            return this;
        }

        public Builder timeZone(JsonNullable<String> timeZone) {
            Utils.checkNotNull(timeZone, "timeZone");
            this.timeZone = timeZone;
            return this;
        }

        public Builder customCPAClickWeight(double customCPAClickWeight) {
            Utils.checkNotNull(customCPAClickWeight, "customCPAClickWeight");
            this.customCPAClickWeight = JsonNullable.of(customCPAClickWeight);
            return this;
        }

        public Builder customCPAClickWeight(JsonNullable<Double> customCPAClickWeight) {
            Utils.checkNotNull(customCPAClickWeight, "customCPAClickWeight");
            this.customCPAClickWeight = customCPAClickWeight;
            return this;
        }

        public Builder customCPAViewthroughWeight(double customCPAViewthroughWeight) {
            Utils.checkNotNull(customCPAViewthroughWeight, "customCPAViewthroughWeight");
            this.customCPAViewthroughWeight = JsonNullable.of(customCPAViewthroughWeight);
            return this;
        }

        public Builder customCPAViewthroughWeight(JsonNullable<Double> customCPAViewthroughWeight) {
            Utils.checkNotNull(customCPAViewthroughWeight, "customCPAViewthroughWeight");
            this.customCPAViewthroughWeight = customCPAViewthroughWeight;
            return this;
        }

        public Builder customCPAType(CustomCPAType customCPAType) {
            Utils.checkNotNull(customCPAType, "customCPAType");
            this.customCPAType = Optional.ofNullable(customCPAType);
            return this;
        }

        public Builder customCPAType(Optional<? extends CustomCPAType> customCPAType) {
            Utils.checkNotNull(customCPAType, "customCPAType");
            this.customCPAType = customCPAType;
            return this;
        }

        public Builder impressionsOnlyBudgetingCpm(double impressionsOnlyBudgetingCpm) {
            Utils.checkNotNull(impressionsOnlyBudgetingCpm, "impressionsOnlyBudgetingCpm");
            this.impressionsOnlyBudgetingCpm = JsonNullable.of(impressionsOnlyBudgetingCpm);
            return this;
        }

        public Builder impressionsOnlyBudgetingCpm(JsonNullable<Double> impressionsOnlyBudgetingCpm) {
            Utils.checkNotNull(impressionsOnlyBudgetingCpm, "impressionsOnlyBudgetingCpm");
            this.impressionsOnlyBudgetingCpm = impressionsOnlyBudgetingCpm;
            return this;
        }

        public Builder primaryChannel(CampaignChannelType primaryChannel) {
            Utils.checkNotNull(primaryChannel, "primaryChannel");
            this.primaryChannel = Optional.ofNullable(primaryChannel);
            return this;
        }

        public Builder primaryChannel(Optional<? extends CampaignChannelType> primaryChannel) {
            Utils.checkNotNull(primaryChannel, "primaryChannel");
            this.primaryChannel = primaryChannel;
            return this;
        }

        public Builder primaryGoal(String primaryGoal) {
            Utils.checkNotNull(primaryGoal, "primaryGoal");
            this.primaryGoal = JsonNullable.of(primaryGoal);
            return this;
        }

        public Builder primaryGoal(JsonNullable<String> primaryGoal) {
            Utils.checkNotNull(primaryGoal, "primaryGoal");
            this.primaryGoal = primaryGoal;
            return this;
        }

        public Builder seedId(String seedId) {
            Utils.checkNotNull(seedId, "seedId");
            this.seedId = JsonNullable.of(seedId);
            return this;
        }

        public Builder seedId(JsonNullable<String> seedId) {
            Utils.checkNotNull(seedId, "seedId");
            this.seedId = seedId;
            return this;
        }

        public Builder conversionReportingColumnsCount(int conversionReportingColumnsCount) {
            Utils.checkNotNull(conversionReportingColumnsCount, "conversionReportingColumnsCount");
            this.conversionReportingColumnsCount = JsonNullable.of(conversionReportingColumnsCount);
            return this;
        }

        public Builder conversionReportingColumnsCount(JsonNullable<Integer> conversionReportingColumnsCount) {
            Utils.checkNotNull(conversionReportingColumnsCount, "conversionReportingColumnsCount");
            this.conversionReportingColumnsCount = conversionReportingColumnsCount;
            return this;
        }

        public Builder flights(List<CampaignFlightWorkflow> flights) {
            Utils.checkNotNull(flights, "flights");
            this.flights = JsonNullable.of(flights);
            return this;
        }

        public Builder flights(JsonNullable<? extends List<CampaignFlightWorkflow>> flights) {
            Utils.checkNotNull(flights, "flights");
            this.flights = flights;
            return this;
        }
        
        public CampaignWorkflow build() {
            return new CampaignWorkflow(
                id,
                name,
                description,
                startDate,
                endDate,
                timeZone,
                customCPAClickWeight,
                customCPAViewthroughWeight,
                customCPAType,
                impressionsOnlyBudgetingCpm,
                primaryChannel,
                primaryGoal,
                seedId,
                conversionReportingColumnsCount,
                flights);
        }
    }
}
