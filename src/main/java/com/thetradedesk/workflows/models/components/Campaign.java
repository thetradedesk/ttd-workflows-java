/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.thetradedesk.workflows.models.components;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.thetradedesk.workflows.utils.Utils;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
/**
 * Campaign - This is a campaign response
 */

public class Campaign {

    /**
     * This is a campaign ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    private Optional<Integer> id;

    /**
     * The platform ID of the advertiser that owns this Campaign.
     */
    @JsonProperty("advertiserId")
    private String advertiserId;

    /**
     * The name of the Campaign.
     */
    @JsonProperty("campaignName")
    private String campaignName;

    @JsonCreator
    public Campaign(
            @JsonProperty("id") Optional<Integer> id,
            @JsonProperty("advertiserId") String advertiserId,
            @JsonProperty("campaignName") String campaignName) {
        Utils.checkNotNull(id, "id");
        Utils.checkNotNull(advertiserId, "advertiserId");
        Utils.checkNotNull(campaignName, "campaignName");
        this.id = id;
        this.advertiserId = advertiserId;
        this.campaignName = campaignName;
    }
    
    public Campaign(
            String advertiserId,
            String campaignName) {
        this(Optional.empty(), advertiserId, campaignName);
    }

    /**
     * This is a campaign ID
     */
    @JsonIgnore
    public Optional<Integer> id() {
        return id;
    }

    /**
     * The platform ID of the advertiser that owns this Campaign.
     */
    @JsonIgnore
    public String advertiserId() {
        return advertiserId;
    }

    /**
     * The name of the Campaign.
     */
    @JsonIgnore
    public String campaignName() {
        return campaignName;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * This is a campaign ID
     */
    public Campaign withId(int id) {
        Utils.checkNotNull(id, "id");
        this.id = Optional.ofNullable(id);
        return this;
    }

    /**
     * This is a campaign ID
     */
    public Campaign withId(Optional<Integer> id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    /**
     * The platform ID of the advertiser that owns this Campaign.
     */
    public Campaign withAdvertiserId(String advertiserId) {
        Utils.checkNotNull(advertiserId, "advertiserId");
        this.advertiserId = advertiserId;
        return this;
    }

    /**
     * The name of the Campaign.
     */
    public Campaign withCampaignName(String campaignName) {
        Utils.checkNotNull(campaignName, "campaignName");
        this.campaignName = campaignName;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Campaign other = (Campaign) o;
        return 
            Objects.deepEquals(this.id, other.id) &&
            Objects.deepEquals(this.advertiserId, other.advertiserId) &&
            Objects.deepEquals(this.campaignName, other.campaignName);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            id,
            advertiserId,
            campaignName);
    }
    
    @Override
    public String toString() {
        return Utils.toString(Campaign.class,
                "id", id,
                "advertiserId", advertiserId,
                "campaignName", campaignName);
    }
    
    public final static class Builder {
 
        private Optional<Integer> id = Optional.empty();
 
        private String advertiserId;
 
        private String campaignName;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * This is a campaign ID
         */
        public Builder id(int id) {
            Utils.checkNotNull(id, "id");
            this.id = Optional.ofNullable(id);
            return this;
        }

        /**
         * This is a campaign ID
         */
        public Builder id(Optional<Integer> id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }

        /**
         * The platform ID of the advertiser that owns this Campaign.
         */
        public Builder advertiserId(String advertiserId) {
            Utils.checkNotNull(advertiserId, "advertiserId");
            this.advertiserId = advertiserId;
            return this;
        }

        /**
         * The name of the Campaign.
         */
        public Builder campaignName(String campaignName) {
            Utils.checkNotNull(campaignName, "campaignName");
            this.campaignName = campaignName;
            return this;
        }
        
        public Campaign build() {
            return new Campaign(
                id,
                advertiserId,
                campaignName);
        }
    }
}

