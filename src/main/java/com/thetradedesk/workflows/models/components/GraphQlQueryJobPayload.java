/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.thetradedesk.workflows.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.thetradedesk.workflows.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class GraphQlQueryJobPayload {
    /**
     * This is the response model that mirrors the GQL bulkjob
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data")
    private Optional<? extends GraphQlQueryJob> data;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errors")
    private JsonNullable<? extends List<GraphQLQueryJobError>> errors;

    @JsonCreator
    public GraphQlQueryJobPayload(
            @JsonProperty("data") Optional<? extends GraphQlQueryJob> data,
            @JsonProperty("errors") JsonNullable<? extends List<GraphQLQueryJobError>> errors) {
        Utils.checkNotNull(data, "data");
        Utils.checkNotNull(errors, "errors");
        this.data = data;
        this.errors = errors;
    }
    
    public GraphQlQueryJobPayload() {
        this(Optional.empty(), JsonNullable.undefined());
    }

    /**
     * This is the response model that mirrors the GQL bulkjob
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GraphQlQueryJob> data() {
        return (Optional<GraphQlQueryJob>) data;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<GraphQLQueryJobError>> errors() {
        return (JsonNullable<List<GraphQLQueryJobError>>) errors;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * This is the response model that mirrors the GQL bulkjob
     */
    public GraphQlQueryJobPayload withData(GraphQlQueryJob data) {
        Utils.checkNotNull(data, "data");
        this.data = Optional.ofNullable(data);
        return this;
    }


    /**
     * This is the response model that mirrors the GQL bulkjob
     */
    public GraphQlQueryJobPayload withData(Optional<? extends GraphQlQueryJob> data) {
        Utils.checkNotNull(data, "data");
        this.data = data;
        return this;
    }

    public GraphQlQueryJobPayload withErrors(List<GraphQLQueryJobError> errors) {
        Utils.checkNotNull(errors, "errors");
        this.errors = JsonNullable.of(errors);
        return this;
    }

    public GraphQlQueryJobPayload withErrors(JsonNullable<? extends List<GraphQLQueryJobError>> errors) {
        Utils.checkNotNull(errors, "errors");
        this.errors = errors;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GraphQlQueryJobPayload other = (GraphQlQueryJobPayload) o;
        return 
            Utils.enhancedDeepEquals(this.data, other.data) &&
            Utils.enhancedDeepEquals(this.errors, other.errors);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            data, errors);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GraphQlQueryJobPayload.class,
                "data", data,
                "errors", errors);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Optional<? extends GraphQlQueryJob> data = Optional.empty();

        private JsonNullable<? extends List<GraphQLQueryJobError>> errors = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * This is the response model that mirrors the GQL bulkjob
         */
        public Builder data(GraphQlQueryJob data) {
            Utils.checkNotNull(data, "data");
            this.data = Optional.ofNullable(data);
            return this;
        }

        /**
         * This is the response model that mirrors the GQL bulkjob
         */
        public Builder data(Optional<? extends GraphQlQueryJob> data) {
            Utils.checkNotNull(data, "data");
            this.data = data;
            return this;
        }


        public Builder errors(List<GraphQLQueryJobError> errors) {
            Utils.checkNotNull(errors, "errors");
            this.errors = JsonNullable.of(errors);
            return this;
        }

        public Builder errors(JsonNullable<? extends List<GraphQLQueryJobError>> errors) {
            Utils.checkNotNull(errors, "errors");
            this.errors = errors;
            return this;
        }

        public GraphQlQueryJobPayload build() {

            return new GraphQlQueryJobPayload(
                data, errors);
        }

    }
}
