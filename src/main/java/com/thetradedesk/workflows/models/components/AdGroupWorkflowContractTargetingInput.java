/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.thetradedesk.workflows.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.thetradedesk.workflows.utils.Utils;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import org.openapitools.jackson.nullable.JsonNullable;


public class AdGroupWorkflowContractTargetingInput {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowOpenMarketBiddingWhenTargetingContracts")
    private JsonNullable<Boolean> allowOpenMarketBiddingWhenTargetingContracts;

    @JsonCreator
    public AdGroupWorkflowContractTargetingInput(
            @JsonProperty("allowOpenMarketBiddingWhenTargetingContracts") JsonNullable<Boolean> allowOpenMarketBiddingWhenTargetingContracts) {
        Utils.checkNotNull(allowOpenMarketBiddingWhenTargetingContracts, "allowOpenMarketBiddingWhenTargetingContracts");
        this.allowOpenMarketBiddingWhenTargetingContracts = allowOpenMarketBiddingWhenTargetingContracts;
    }
    
    public AdGroupWorkflowContractTargetingInput() {
        this(JsonNullable.undefined());
    }

    @JsonIgnore
    public JsonNullable<Boolean> allowOpenMarketBiddingWhenTargetingContracts() {
        return allowOpenMarketBiddingWhenTargetingContracts;
    }

    public static Builder builder() {
        return new Builder();
    }


    public AdGroupWorkflowContractTargetingInput withAllowOpenMarketBiddingWhenTargetingContracts(boolean allowOpenMarketBiddingWhenTargetingContracts) {
        Utils.checkNotNull(allowOpenMarketBiddingWhenTargetingContracts, "allowOpenMarketBiddingWhenTargetingContracts");
        this.allowOpenMarketBiddingWhenTargetingContracts = JsonNullable.of(allowOpenMarketBiddingWhenTargetingContracts);
        return this;
    }

    public AdGroupWorkflowContractTargetingInput withAllowOpenMarketBiddingWhenTargetingContracts(JsonNullable<Boolean> allowOpenMarketBiddingWhenTargetingContracts) {
        Utils.checkNotNull(allowOpenMarketBiddingWhenTargetingContracts, "allowOpenMarketBiddingWhenTargetingContracts");
        this.allowOpenMarketBiddingWhenTargetingContracts = allowOpenMarketBiddingWhenTargetingContracts;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AdGroupWorkflowContractTargetingInput other = (AdGroupWorkflowContractTargetingInput) o;
        return 
            Utils.enhancedDeepEquals(this.allowOpenMarketBiddingWhenTargetingContracts, other.allowOpenMarketBiddingWhenTargetingContracts);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            allowOpenMarketBiddingWhenTargetingContracts);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AdGroupWorkflowContractTargetingInput.class,
                "allowOpenMarketBiddingWhenTargetingContracts", allowOpenMarketBiddingWhenTargetingContracts);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<Boolean> allowOpenMarketBiddingWhenTargetingContracts = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        public Builder allowOpenMarketBiddingWhenTargetingContracts(boolean allowOpenMarketBiddingWhenTargetingContracts) {
            Utils.checkNotNull(allowOpenMarketBiddingWhenTargetingContracts, "allowOpenMarketBiddingWhenTargetingContracts");
            this.allowOpenMarketBiddingWhenTargetingContracts = JsonNullable.of(allowOpenMarketBiddingWhenTargetingContracts);
            return this;
        }

        public Builder allowOpenMarketBiddingWhenTargetingContracts(JsonNullable<Boolean> allowOpenMarketBiddingWhenTargetingContracts) {
            Utils.checkNotNull(allowOpenMarketBiddingWhenTargetingContracts, "allowOpenMarketBiddingWhenTargetingContracts");
            this.allowOpenMarketBiddingWhenTargetingContracts = allowOpenMarketBiddingWhenTargetingContracts;
            return this;
        }

        public AdGroupWorkflowContractTargetingInput build() {

            return new AdGroupWorkflowContractTargetingInput(
                allowOpenMarketBiddingWhenTargetingContracts);
        }

    }
}
