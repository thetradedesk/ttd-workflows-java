/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.thetradedesk.workflows.models.components;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.thetradedesk.workflows.utils.Utils;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class SeedTargetingDataInput {

    /**
     * These are the AdvertiserTargetingDataIds for first party data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firstPartyDataInclusionIds")
    private JsonNullable<? extends List<Long>> firstPartyDataInclusionIds;

    /**
     * RetailDataInclusion
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retailDataInclusion")
    private JsonNullable<? extends List<ThirdPartyDataInput>> retailDataInclusion;

    /**
     * ThirdPartyDataInclusion
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thirdPartyDataInclusion")
    private JsonNullable<? extends List<ThirdPartyDataInput>> thirdPartyDataInclusion;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contextualInclusion")
    private Optional<? extends ContextualDataInput> contextualInclusion;

    /**
     * CountryFilterIds
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("countryFilterIds")
    private JsonNullable<? extends List<String>> countryFilterIds;

    @JsonCreator
    public SeedTargetingDataInput(
            @JsonProperty("firstPartyDataInclusionIds") JsonNullable<? extends List<Long>> firstPartyDataInclusionIds,
            @JsonProperty("retailDataInclusion") JsonNullable<? extends List<ThirdPartyDataInput>> retailDataInclusion,
            @JsonProperty("thirdPartyDataInclusion") JsonNullable<? extends List<ThirdPartyDataInput>> thirdPartyDataInclusion,
            @JsonProperty("contextualInclusion") Optional<? extends ContextualDataInput> contextualInclusion,
            @JsonProperty("countryFilterIds") JsonNullable<? extends List<String>> countryFilterIds) {
        Utils.checkNotNull(firstPartyDataInclusionIds, "firstPartyDataInclusionIds");
        Utils.checkNotNull(retailDataInclusion, "retailDataInclusion");
        Utils.checkNotNull(thirdPartyDataInclusion, "thirdPartyDataInclusion");
        Utils.checkNotNull(contextualInclusion, "contextualInclusion");
        Utils.checkNotNull(countryFilterIds, "countryFilterIds");
        this.firstPartyDataInclusionIds = firstPartyDataInclusionIds;
        this.retailDataInclusion = retailDataInclusion;
        this.thirdPartyDataInclusion = thirdPartyDataInclusion;
        this.contextualInclusion = contextualInclusion;
        this.countryFilterIds = countryFilterIds;
    }
    
    public SeedTargetingDataInput() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), Optional.empty(), JsonNullable.undefined());
    }

    /**
     * These are the AdvertiserTargetingDataIds for first party data.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<Long>> firstPartyDataInclusionIds() {
        return (JsonNullable<List<Long>>) firstPartyDataInclusionIds;
    }

    /**
     * RetailDataInclusion
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<ThirdPartyDataInput>> retailDataInclusion() {
        return (JsonNullable<List<ThirdPartyDataInput>>) retailDataInclusion;
    }

    /**
     * ThirdPartyDataInclusion
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<ThirdPartyDataInput>> thirdPartyDataInclusion() {
        return (JsonNullable<List<ThirdPartyDataInput>>) thirdPartyDataInclusion;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<ContextualDataInput> contextualInclusion() {
        return (Optional<ContextualDataInput>) contextualInclusion;
    }

    /**
     * CountryFilterIds
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<String>> countryFilterIds() {
        return (JsonNullable<List<String>>) countryFilterIds;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * These are the AdvertiserTargetingDataIds for first party data.
     */
    public SeedTargetingDataInput withFirstPartyDataInclusionIds(List<Long> firstPartyDataInclusionIds) {
        Utils.checkNotNull(firstPartyDataInclusionIds, "firstPartyDataInclusionIds");
        this.firstPartyDataInclusionIds = JsonNullable.of(firstPartyDataInclusionIds);
        return this;
    }

    /**
     * These are the AdvertiserTargetingDataIds for first party data.
     */
    public SeedTargetingDataInput withFirstPartyDataInclusionIds(JsonNullable<? extends List<Long>> firstPartyDataInclusionIds) {
        Utils.checkNotNull(firstPartyDataInclusionIds, "firstPartyDataInclusionIds");
        this.firstPartyDataInclusionIds = firstPartyDataInclusionIds;
        return this;
    }

    /**
     * RetailDataInclusion
     */
    public SeedTargetingDataInput withRetailDataInclusion(List<ThirdPartyDataInput> retailDataInclusion) {
        Utils.checkNotNull(retailDataInclusion, "retailDataInclusion");
        this.retailDataInclusion = JsonNullable.of(retailDataInclusion);
        return this;
    }

    /**
     * RetailDataInclusion
     */
    public SeedTargetingDataInput withRetailDataInclusion(JsonNullable<? extends List<ThirdPartyDataInput>> retailDataInclusion) {
        Utils.checkNotNull(retailDataInclusion, "retailDataInclusion");
        this.retailDataInclusion = retailDataInclusion;
        return this;
    }

    /**
     * ThirdPartyDataInclusion
     */
    public SeedTargetingDataInput withThirdPartyDataInclusion(List<ThirdPartyDataInput> thirdPartyDataInclusion) {
        Utils.checkNotNull(thirdPartyDataInclusion, "thirdPartyDataInclusion");
        this.thirdPartyDataInclusion = JsonNullable.of(thirdPartyDataInclusion);
        return this;
    }

    /**
     * ThirdPartyDataInclusion
     */
    public SeedTargetingDataInput withThirdPartyDataInclusion(JsonNullable<? extends List<ThirdPartyDataInput>> thirdPartyDataInclusion) {
        Utils.checkNotNull(thirdPartyDataInclusion, "thirdPartyDataInclusion");
        this.thirdPartyDataInclusion = thirdPartyDataInclusion;
        return this;
    }

    public SeedTargetingDataInput withContextualInclusion(ContextualDataInput contextualInclusion) {
        Utils.checkNotNull(contextualInclusion, "contextualInclusion");
        this.contextualInclusion = Optional.ofNullable(contextualInclusion);
        return this;
    }

    public SeedTargetingDataInput withContextualInclusion(Optional<? extends ContextualDataInput> contextualInclusion) {
        Utils.checkNotNull(contextualInclusion, "contextualInclusion");
        this.contextualInclusion = contextualInclusion;
        return this;
    }

    /**
     * CountryFilterIds
     */
    public SeedTargetingDataInput withCountryFilterIds(List<String> countryFilterIds) {
        Utils.checkNotNull(countryFilterIds, "countryFilterIds");
        this.countryFilterIds = JsonNullable.of(countryFilterIds);
        return this;
    }

    /**
     * CountryFilterIds
     */
    public SeedTargetingDataInput withCountryFilterIds(JsonNullable<? extends List<String>> countryFilterIds) {
        Utils.checkNotNull(countryFilterIds, "countryFilterIds");
        this.countryFilterIds = countryFilterIds;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SeedTargetingDataInput other = (SeedTargetingDataInput) o;
        return 
            Objects.deepEquals(this.firstPartyDataInclusionIds, other.firstPartyDataInclusionIds) &&
            Objects.deepEquals(this.retailDataInclusion, other.retailDataInclusion) &&
            Objects.deepEquals(this.thirdPartyDataInclusion, other.thirdPartyDataInclusion) &&
            Objects.deepEquals(this.contextualInclusion, other.contextualInclusion) &&
            Objects.deepEquals(this.countryFilterIds, other.countryFilterIds);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            firstPartyDataInclusionIds,
            retailDataInclusion,
            thirdPartyDataInclusion,
            contextualInclusion,
            countryFilterIds);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SeedTargetingDataInput.class,
                "firstPartyDataInclusionIds", firstPartyDataInclusionIds,
                "retailDataInclusion", retailDataInclusion,
                "thirdPartyDataInclusion", thirdPartyDataInclusion,
                "contextualInclusion", contextualInclusion,
                "countryFilterIds", countryFilterIds);
    }
    
    public final static class Builder {
 
        private JsonNullable<? extends List<Long>> firstPartyDataInclusionIds = JsonNullable.undefined();
 
        private JsonNullable<? extends List<ThirdPartyDataInput>> retailDataInclusion = JsonNullable.undefined();
 
        private JsonNullable<? extends List<ThirdPartyDataInput>> thirdPartyDataInclusion = JsonNullable.undefined();
 
        private Optional<? extends ContextualDataInput> contextualInclusion = Optional.empty();
 
        private JsonNullable<? extends List<String>> countryFilterIds = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * These are the AdvertiserTargetingDataIds for first party data.
         */
        public Builder firstPartyDataInclusionIds(List<Long> firstPartyDataInclusionIds) {
            Utils.checkNotNull(firstPartyDataInclusionIds, "firstPartyDataInclusionIds");
            this.firstPartyDataInclusionIds = JsonNullable.of(firstPartyDataInclusionIds);
            return this;
        }

        /**
         * These are the AdvertiserTargetingDataIds for first party data.
         */
        public Builder firstPartyDataInclusionIds(JsonNullable<? extends List<Long>> firstPartyDataInclusionIds) {
            Utils.checkNotNull(firstPartyDataInclusionIds, "firstPartyDataInclusionIds");
            this.firstPartyDataInclusionIds = firstPartyDataInclusionIds;
            return this;
        }

        /**
         * RetailDataInclusion
         */
        public Builder retailDataInclusion(List<ThirdPartyDataInput> retailDataInclusion) {
            Utils.checkNotNull(retailDataInclusion, "retailDataInclusion");
            this.retailDataInclusion = JsonNullable.of(retailDataInclusion);
            return this;
        }

        /**
         * RetailDataInclusion
         */
        public Builder retailDataInclusion(JsonNullable<? extends List<ThirdPartyDataInput>> retailDataInclusion) {
            Utils.checkNotNull(retailDataInclusion, "retailDataInclusion");
            this.retailDataInclusion = retailDataInclusion;
            return this;
        }

        /**
         * ThirdPartyDataInclusion
         */
        public Builder thirdPartyDataInclusion(List<ThirdPartyDataInput> thirdPartyDataInclusion) {
            Utils.checkNotNull(thirdPartyDataInclusion, "thirdPartyDataInclusion");
            this.thirdPartyDataInclusion = JsonNullable.of(thirdPartyDataInclusion);
            return this;
        }

        /**
         * ThirdPartyDataInclusion
         */
        public Builder thirdPartyDataInclusion(JsonNullable<? extends List<ThirdPartyDataInput>> thirdPartyDataInclusion) {
            Utils.checkNotNull(thirdPartyDataInclusion, "thirdPartyDataInclusion");
            this.thirdPartyDataInclusion = thirdPartyDataInclusion;
            return this;
        }

        public Builder contextualInclusion(ContextualDataInput contextualInclusion) {
            Utils.checkNotNull(contextualInclusion, "contextualInclusion");
            this.contextualInclusion = Optional.ofNullable(contextualInclusion);
            return this;
        }

        public Builder contextualInclusion(Optional<? extends ContextualDataInput> contextualInclusion) {
            Utils.checkNotNull(contextualInclusion, "contextualInclusion");
            this.contextualInclusion = contextualInclusion;
            return this;
        }

        /**
         * CountryFilterIds
         */
        public Builder countryFilterIds(List<String> countryFilterIds) {
            Utils.checkNotNull(countryFilterIds, "countryFilterIds");
            this.countryFilterIds = JsonNullable.of(countryFilterIds);
            return this;
        }

        /**
         * CountryFilterIds
         */
        public Builder countryFilterIds(JsonNullable<? extends List<String>> countryFilterIds) {
            Utils.checkNotNull(countryFilterIds, "countryFilterIds");
            this.countryFilterIds = countryFilterIds;
            return this;
        }
        
        public SeedTargetingDataInput build() {
            return new SeedTargetingDataInput(
                firstPartyDataInclusionIds,
                retailDataInclusion,
                thirdPartyDataInclusion,
                contextualInclusion,
                countryFilterIds);
        }
    }
}

