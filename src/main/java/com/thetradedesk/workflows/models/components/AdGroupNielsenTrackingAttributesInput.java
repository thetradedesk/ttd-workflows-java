/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.thetradedesk.workflows.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.thetradedesk.workflows.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;

public class AdGroupNielsenTrackingAttributesInput {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enhancedReportingOption")
    private Optional<? extends EnhancedNielsenReportingOptions> enhancedReportingOption;

    @JsonProperty("gender")
    private TargetingGender gender;

    @JsonProperty("startAge")
    private TargetingStartAge startAge;

    @JsonProperty("endAge")
    private TargetingEndAge endAge;

    @JsonInclude(Include.ALWAYS)
    @JsonProperty("countries")
    private Optional<? extends List<String>> countries;

    @JsonCreator
    public AdGroupNielsenTrackingAttributesInput(
            @JsonProperty("enhancedReportingOption") Optional<? extends EnhancedNielsenReportingOptions> enhancedReportingOption,
            @JsonProperty("gender") TargetingGender gender,
            @JsonProperty("startAge") TargetingStartAge startAge,
            @JsonProperty("endAge") TargetingEndAge endAge,
            @JsonProperty("countries") Optional<? extends List<String>> countries) {
        Utils.checkNotNull(enhancedReportingOption, "enhancedReportingOption");
        Utils.checkNotNull(gender, "gender");
        Utils.checkNotNull(startAge, "startAge");
        Utils.checkNotNull(endAge, "endAge");
        Utils.checkNotNull(countries, "countries");
        this.enhancedReportingOption = enhancedReportingOption;
        this.gender = gender;
        this.startAge = startAge;
        this.endAge = endAge;
        this.countries = countries;
    }
    
    public AdGroupNielsenTrackingAttributesInput(
            TargetingGender gender,
            TargetingStartAge startAge,
            TargetingEndAge endAge) {
        this(Optional.empty(), gender, startAge, endAge, Optional.empty());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<EnhancedNielsenReportingOptions> enhancedReportingOption() {
        return (Optional<EnhancedNielsenReportingOptions>) enhancedReportingOption;
    }

    @JsonIgnore
    public TargetingGender gender() {
        return gender;
    }

    @JsonIgnore
    public TargetingStartAge startAge() {
        return startAge;
    }

    @JsonIgnore
    public TargetingEndAge endAge() {
        return endAge;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<String>> countries() {
        return (Optional<List<String>>) countries;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public AdGroupNielsenTrackingAttributesInput withEnhancedReportingOption(EnhancedNielsenReportingOptions enhancedReportingOption) {
        Utils.checkNotNull(enhancedReportingOption, "enhancedReportingOption");
        this.enhancedReportingOption = Optional.ofNullable(enhancedReportingOption);
        return this;
    }

    public AdGroupNielsenTrackingAttributesInput withEnhancedReportingOption(Optional<? extends EnhancedNielsenReportingOptions> enhancedReportingOption) {
        Utils.checkNotNull(enhancedReportingOption, "enhancedReportingOption");
        this.enhancedReportingOption = enhancedReportingOption;
        return this;
    }

    public AdGroupNielsenTrackingAttributesInput withGender(TargetingGender gender) {
        Utils.checkNotNull(gender, "gender");
        this.gender = gender;
        return this;
    }

    public AdGroupNielsenTrackingAttributesInput withStartAge(TargetingStartAge startAge) {
        Utils.checkNotNull(startAge, "startAge");
        this.startAge = startAge;
        return this;
    }

    public AdGroupNielsenTrackingAttributesInput withEndAge(TargetingEndAge endAge) {
        Utils.checkNotNull(endAge, "endAge");
        this.endAge = endAge;
        return this;
    }

    public AdGroupNielsenTrackingAttributesInput withCountries(List<String> countries) {
        Utils.checkNotNull(countries, "countries");
        this.countries = Optional.ofNullable(countries);
        return this;
    }

    public AdGroupNielsenTrackingAttributesInput withCountries(Optional<? extends List<String>> countries) {
        Utils.checkNotNull(countries, "countries");
        this.countries = countries;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AdGroupNielsenTrackingAttributesInput other = (AdGroupNielsenTrackingAttributesInput) o;
        return 
            Objects.deepEquals(this.enhancedReportingOption, other.enhancedReportingOption) &&
            Objects.deepEquals(this.gender, other.gender) &&
            Objects.deepEquals(this.startAge, other.startAge) &&
            Objects.deepEquals(this.endAge, other.endAge) &&
            Objects.deepEquals(this.countries, other.countries);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            enhancedReportingOption,
            gender,
            startAge,
            endAge,
            countries);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AdGroupNielsenTrackingAttributesInput.class,
                "enhancedReportingOption", enhancedReportingOption,
                "gender", gender,
                "startAge", startAge,
                "endAge", endAge,
                "countries", countries);
    }
    
    public final static class Builder {
 
        private Optional<? extends EnhancedNielsenReportingOptions> enhancedReportingOption = Optional.empty();
 
        private TargetingGender gender;
 
        private TargetingStartAge startAge;
 
        private TargetingEndAge endAge;
 
        private Optional<? extends List<String>> countries = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder enhancedReportingOption(EnhancedNielsenReportingOptions enhancedReportingOption) {
            Utils.checkNotNull(enhancedReportingOption, "enhancedReportingOption");
            this.enhancedReportingOption = Optional.ofNullable(enhancedReportingOption);
            return this;
        }

        public Builder enhancedReportingOption(Optional<? extends EnhancedNielsenReportingOptions> enhancedReportingOption) {
            Utils.checkNotNull(enhancedReportingOption, "enhancedReportingOption");
            this.enhancedReportingOption = enhancedReportingOption;
            return this;
        }

        public Builder gender(TargetingGender gender) {
            Utils.checkNotNull(gender, "gender");
            this.gender = gender;
            return this;
        }

        public Builder startAge(TargetingStartAge startAge) {
            Utils.checkNotNull(startAge, "startAge");
            this.startAge = startAge;
            return this;
        }

        public Builder endAge(TargetingEndAge endAge) {
            Utils.checkNotNull(endAge, "endAge");
            this.endAge = endAge;
            return this;
        }

        public Builder countries(List<String> countries) {
            Utils.checkNotNull(countries, "countries");
            this.countries = Optional.ofNullable(countries);
            return this;
        }

        public Builder countries(Optional<? extends List<String>> countries) {
            Utils.checkNotNull(countries, "countries");
            this.countries = countries;
            return this;
        }
        
        public AdGroupNielsenTrackingAttributesInput build() {
            return new AdGroupNielsenTrackingAttributesInput(
                enhancedReportingOption,
                gender,
                startAge,
                endAge,
                countries);
        }
    }
}
