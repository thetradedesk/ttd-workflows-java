/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.thetradedesk.workflows.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.thetradedesk.workflows.utils.Utils;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class CampaignCreateWorkflowInput {

    @JsonProperty("primaryInput")
    private CampaignCreateWorkflowPrimaryInput primaryInput;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advancedInput")
    private Optional<? extends CampaignWorkflowAdvancedInput> advancedInput;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adGroups")
    private JsonNullable<? extends List<CampaignCreateWorkflowAdGroupInput>> adGroups;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("validationOnly")
    private JsonNullable<Boolean> validationOnly;

    @JsonCreator
    public CampaignCreateWorkflowInput(
            @JsonProperty("primaryInput") CampaignCreateWorkflowPrimaryInput primaryInput,
            @JsonProperty("advancedInput") Optional<? extends CampaignWorkflowAdvancedInput> advancedInput,
            @JsonProperty("adGroups") JsonNullable<? extends List<CampaignCreateWorkflowAdGroupInput>> adGroups,
            @JsonProperty("validationOnly") JsonNullable<Boolean> validationOnly) {
        Utils.checkNotNull(primaryInput, "primaryInput");
        Utils.checkNotNull(advancedInput, "advancedInput");
        Utils.checkNotNull(adGroups, "adGroups");
        Utils.checkNotNull(validationOnly, "validationOnly");
        this.primaryInput = primaryInput;
        this.advancedInput = advancedInput;
        this.adGroups = adGroups;
        this.validationOnly = validationOnly;
    }
    
    public CampaignCreateWorkflowInput(
            CampaignCreateWorkflowPrimaryInput primaryInput) {
        this(primaryInput, Optional.empty(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    @JsonIgnore
    public CampaignCreateWorkflowPrimaryInput primaryInput() {
        return primaryInput;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<CampaignWorkflowAdvancedInput> advancedInput() {
        return (Optional<CampaignWorkflowAdvancedInput>) advancedInput;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<CampaignCreateWorkflowAdGroupInput>> adGroups() {
        return (JsonNullable<List<CampaignCreateWorkflowAdGroupInput>>) adGroups;
    }

    @JsonIgnore
    public JsonNullable<Boolean> validationOnly() {
        return validationOnly;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public CampaignCreateWorkflowInput withPrimaryInput(CampaignCreateWorkflowPrimaryInput primaryInput) {
        Utils.checkNotNull(primaryInput, "primaryInput");
        this.primaryInput = primaryInput;
        return this;
    }

    public CampaignCreateWorkflowInput withAdvancedInput(CampaignWorkflowAdvancedInput advancedInput) {
        Utils.checkNotNull(advancedInput, "advancedInput");
        this.advancedInput = Optional.ofNullable(advancedInput);
        return this;
    }

    public CampaignCreateWorkflowInput withAdvancedInput(Optional<? extends CampaignWorkflowAdvancedInput> advancedInput) {
        Utils.checkNotNull(advancedInput, "advancedInput");
        this.advancedInput = advancedInput;
        return this;
    }

    public CampaignCreateWorkflowInput withAdGroups(List<CampaignCreateWorkflowAdGroupInput> adGroups) {
        Utils.checkNotNull(adGroups, "adGroups");
        this.adGroups = JsonNullable.of(adGroups);
        return this;
    }

    public CampaignCreateWorkflowInput withAdGroups(JsonNullable<? extends List<CampaignCreateWorkflowAdGroupInput>> adGroups) {
        Utils.checkNotNull(adGroups, "adGroups");
        this.adGroups = adGroups;
        return this;
    }

    public CampaignCreateWorkflowInput withValidationOnly(boolean validationOnly) {
        Utils.checkNotNull(validationOnly, "validationOnly");
        this.validationOnly = JsonNullable.of(validationOnly);
        return this;
    }

    public CampaignCreateWorkflowInput withValidationOnly(JsonNullable<Boolean> validationOnly) {
        Utils.checkNotNull(validationOnly, "validationOnly");
        this.validationOnly = validationOnly;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CampaignCreateWorkflowInput other = (CampaignCreateWorkflowInput) o;
        return 
            Objects.deepEquals(this.primaryInput, other.primaryInput) &&
            Objects.deepEquals(this.advancedInput, other.advancedInput) &&
            Objects.deepEquals(this.adGroups, other.adGroups) &&
            Objects.deepEquals(this.validationOnly, other.validationOnly);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            primaryInput,
            advancedInput,
            adGroups,
            validationOnly);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CampaignCreateWorkflowInput.class,
                "primaryInput", primaryInput,
                "advancedInput", advancedInput,
                "adGroups", adGroups,
                "validationOnly", validationOnly);
    }
    
    public final static class Builder {
 
        private CampaignCreateWorkflowPrimaryInput primaryInput;
 
        private Optional<? extends CampaignWorkflowAdvancedInput> advancedInput = Optional.empty();
 
        private JsonNullable<? extends List<CampaignCreateWorkflowAdGroupInput>> adGroups = JsonNullable.undefined();
 
        private JsonNullable<Boolean> validationOnly = JsonNullable.undefined();
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder primaryInput(CampaignCreateWorkflowPrimaryInput primaryInput) {
            Utils.checkNotNull(primaryInput, "primaryInput");
            this.primaryInput = primaryInput;
            return this;
        }

        public Builder advancedInput(CampaignWorkflowAdvancedInput advancedInput) {
            Utils.checkNotNull(advancedInput, "advancedInput");
            this.advancedInput = Optional.ofNullable(advancedInput);
            return this;
        }

        public Builder advancedInput(Optional<? extends CampaignWorkflowAdvancedInput> advancedInput) {
            Utils.checkNotNull(advancedInput, "advancedInput");
            this.advancedInput = advancedInput;
            return this;
        }

        public Builder adGroups(List<CampaignCreateWorkflowAdGroupInput> adGroups) {
            Utils.checkNotNull(adGroups, "adGroups");
            this.adGroups = JsonNullable.of(adGroups);
            return this;
        }

        public Builder adGroups(JsonNullable<? extends List<CampaignCreateWorkflowAdGroupInput>> adGroups) {
            Utils.checkNotNull(adGroups, "adGroups");
            this.adGroups = adGroups;
            return this;
        }

        public Builder validationOnly(boolean validationOnly) {
            Utils.checkNotNull(validationOnly, "validationOnly");
            this.validationOnly = JsonNullable.of(validationOnly);
            return this;
        }

        public Builder validationOnly(JsonNullable<Boolean> validationOnly) {
            Utils.checkNotNull(validationOnly, "validationOnly");
            this.validationOnly = validationOnly;
            return this;
        }
        
        public CampaignCreateWorkflowInput build() {
            return new CampaignCreateWorkflowInput(
                primaryInput,
                advancedInput,
                adGroups,
                validationOnly);
        }
    }
}
