/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.thetradedesk.workflows.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.thetradedesk.workflows.utils.Utils;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class AdGroupWorkflow {

    @JsonProperty("id")
    private String id;

    @JsonProperty("name")
    private String name;

    @JsonProperty("campaignId")
    private String campaignId;

    @JsonProperty("isEnabled")
    private boolean isEnabled;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    private JsonNullable<String> description;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("programmaticGuaranteedPrivateContractId")
    private JsonNullable<String> programmaticGuaranteedPrivateContractId;

    @JsonProperty("channel")
    private AdGroupChannel channel;

    @JsonProperty("funnelLocation")
    private AdGroupFunnelLocation funnelLocation;

    @JsonProperty("budget")
    private AdGroupBudget budget;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("baseBidCpmInAdvertiserCurrency")
    private JsonNullable<Double> baseBidCpmInAdvertiserCurrency;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxBidCpmInAdvertiserCurrency")
    private JsonNullable<Double> maxBidCpmInAdvertiserCurrency;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audienceTargeting")
    private Optional<? extends AdGroupAudienceTargeting> audienceTargeting;

    @JsonProperty("roiGoal")
    private AdGroupRoiGoal roiGoal;

    @JsonInclude(Include.ALWAYS)
    @JsonProperty("creativeIds")
    private Optional<? extends List<String>> creativeIds;

    @JsonInclude(Include.ALWAYS)
    @JsonProperty("associatedBidLists")
    private Optional<? extends List<AdGroupAssociateBidList>> associatedBidLists;

    @JsonInclude(Include.ALWAYS)
    @JsonProperty("flights")
    private Optional<? extends List<AdGroupFlight>> flights;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("koaOptimizationSettings")
    private Optional<? extends AdGroupKoaOptimizationSettings> koaOptimizationSettings;

    @JsonProperty("comscoreSettings")
    private AdGroupComscoreSettings comscoreSettings;

    @JsonProperty("contractTargeting")
    private AdGroupContractTargeting contractTargeting;

    @JsonInclude(Include.ALWAYS)
    @JsonProperty("dimensionalBiddingAutoOptimizationSettings")
    private Optional<? extends List<List<DimensionalBiddingDimensions>>> dimensionalBiddingAutoOptimizationSettings;

    @JsonProperty("isUseClicksAsConversionsEnabled")
    private boolean isUseClicksAsConversionsEnabled;

    @JsonProperty("isUseSecondaryConversionsEnabled")
    private boolean isUseSecondaryConversionsEnabled;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nielsenTrackingAttributes")
    private Optional<? extends AdGroupNielsenTrackingAttributes> nielsenTrackingAttributes;

    @JsonCreator
    public AdGroupWorkflow(
            @JsonProperty("id") String id,
            @JsonProperty("name") String name,
            @JsonProperty("campaignId") String campaignId,
            @JsonProperty("isEnabled") boolean isEnabled,
            @JsonProperty("description") JsonNullable<String> description,
            @JsonProperty("programmaticGuaranteedPrivateContractId") JsonNullable<String> programmaticGuaranteedPrivateContractId,
            @JsonProperty("channel") AdGroupChannel channel,
            @JsonProperty("funnelLocation") AdGroupFunnelLocation funnelLocation,
            @JsonProperty("budget") AdGroupBudget budget,
            @JsonProperty("baseBidCpmInAdvertiserCurrency") JsonNullable<Double> baseBidCpmInAdvertiserCurrency,
            @JsonProperty("maxBidCpmInAdvertiserCurrency") JsonNullable<Double> maxBidCpmInAdvertiserCurrency,
            @JsonProperty("audienceTargeting") Optional<? extends AdGroupAudienceTargeting> audienceTargeting,
            @JsonProperty("roiGoal") AdGroupRoiGoal roiGoal,
            @JsonProperty("creativeIds") Optional<? extends List<String>> creativeIds,
            @JsonProperty("associatedBidLists") Optional<? extends List<AdGroupAssociateBidList>> associatedBidLists,
            @JsonProperty("flights") Optional<? extends List<AdGroupFlight>> flights,
            @JsonProperty("koaOptimizationSettings") Optional<? extends AdGroupKoaOptimizationSettings> koaOptimizationSettings,
            @JsonProperty("comscoreSettings") AdGroupComscoreSettings comscoreSettings,
            @JsonProperty("contractTargeting") AdGroupContractTargeting contractTargeting,
            @JsonProperty("dimensionalBiddingAutoOptimizationSettings") Optional<? extends List<List<DimensionalBiddingDimensions>>> dimensionalBiddingAutoOptimizationSettings,
            @JsonProperty("isUseClicksAsConversionsEnabled") boolean isUseClicksAsConversionsEnabled,
            @JsonProperty("isUseSecondaryConversionsEnabled") boolean isUseSecondaryConversionsEnabled,
            @JsonProperty("nielsenTrackingAttributes") Optional<? extends AdGroupNielsenTrackingAttributes> nielsenTrackingAttributes) {
        Utils.checkNotNull(id, "id");
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(campaignId, "campaignId");
        Utils.checkNotNull(isEnabled, "isEnabled");
        Utils.checkNotNull(description, "description");
        Utils.checkNotNull(programmaticGuaranteedPrivateContractId, "programmaticGuaranteedPrivateContractId");
        Utils.checkNotNull(channel, "channel");
        Utils.checkNotNull(funnelLocation, "funnelLocation");
        Utils.checkNotNull(budget, "budget");
        Utils.checkNotNull(baseBidCpmInAdvertiserCurrency, "baseBidCpmInAdvertiserCurrency");
        Utils.checkNotNull(maxBidCpmInAdvertiserCurrency, "maxBidCpmInAdvertiserCurrency");
        Utils.checkNotNull(audienceTargeting, "audienceTargeting");
        Utils.checkNotNull(roiGoal, "roiGoal");
        Utils.checkNotNull(creativeIds, "creativeIds");
        Utils.checkNotNull(associatedBidLists, "associatedBidLists");
        Utils.checkNotNull(flights, "flights");
        Utils.checkNotNull(koaOptimizationSettings, "koaOptimizationSettings");
        Utils.checkNotNull(comscoreSettings, "comscoreSettings");
        Utils.checkNotNull(contractTargeting, "contractTargeting");
        Utils.checkNotNull(dimensionalBiddingAutoOptimizationSettings, "dimensionalBiddingAutoOptimizationSettings");
        Utils.checkNotNull(isUseClicksAsConversionsEnabled, "isUseClicksAsConversionsEnabled");
        Utils.checkNotNull(isUseSecondaryConversionsEnabled, "isUseSecondaryConversionsEnabled");
        Utils.checkNotNull(nielsenTrackingAttributes, "nielsenTrackingAttributes");
        this.id = id;
        this.name = name;
        this.campaignId = campaignId;
        this.isEnabled = isEnabled;
        this.description = description;
        this.programmaticGuaranteedPrivateContractId = programmaticGuaranteedPrivateContractId;
        this.channel = channel;
        this.funnelLocation = funnelLocation;
        this.budget = budget;
        this.baseBidCpmInAdvertiserCurrency = baseBidCpmInAdvertiserCurrency;
        this.maxBidCpmInAdvertiserCurrency = maxBidCpmInAdvertiserCurrency;
        this.audienceTargeting = audienceTargeting;
        this.roiGoal = roiGoal;
        this.creativeIds = creativeIds;
        this.associatedBidLists = associatedBidLists;
        this.flights = flights;
        this.koaOptimizationSettings = koaOptimizationSettings;
        this.comscoreSettings = comscoreSettings;
        this.contractTargeting = contractTargeting;
        this.dimensionalBiddingAutoOptimizationSettings = dimensionalBiddingAutoOptimizationSettings;
        this.isUseClicksAsConversionsEnabled = isUseClicksAsConversionsEnabled;
        this.isUseSecondaryConversionsEnabled = isUseSecondaryConversionsEnabled;
        this.nielsenTrackingAttributes = nielsenTrackingAttributes;
    }
    
    public AdGroupWorkflow(
            String id,
            String name,
            String campaignId,
            boolean isEnabled,
            AdGroupChannel channel,
            AdGroupFunnelLocation funnelLocation,
            AdGroupBudget budget,
            AdGroupRoiGoal roiGoal,
            AdGroupComscoreSettings comscoreSettings,
            AdGroupContractTargeting contractTargeting,
            boolean isUseClicksAsConversionsEnabled,
            boolean isUseSecondaryConversionsEnabled) {
        this(id, name, campaignId, isEnabled, JsonNullable.undefined(), JsonNullable.undefined(), channel, funnelLocation, budget, JsonNullable.undefined(), JsonNullable.undefined(), Optional.empty(), roiGoal, Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), comscoreSettings, contractTargeting, Optional.empty(), isUseClicksAsConversionsEnabled, isUseSecondaryConversionsEnabled, Optional.empty());
    }

    @JsonIgnore
    public String id() {
        return id;
    }

    @JsonIgnore
    public String name() {
        return name;
    }

    @JsonIgnore
    public String campaignId() {
        return campaignId;
    }

    @JsonIgnore
    public boolean isEnabled() {
        return isEnabled;
    }

    @JsonIgnore
    public JsonNullable<String> description() {
        return description;
    }

    @JsonIgnore
    public JsonNullable<String> programmaticGuaranteedPrivateContractId() {
        return programmaticGuaranteedPrivateContractId;
    }

    @JsonIgnore
    public AdGroupChannel channel() {
        return channel;
    }

    @JsonIgnore
    public AdGroupFunnelLocation funnelLocation() {
        return funnelLocation;
    }

    @JsonIgnore
    public AdGroupBudget budget() {
        return budget;
    }

    @JsonIgnore
    public JsonNullable<Double> baseBidCpmInAdvertiserCurrency() {
        return baseBidCpmInAdvertiserCurrency;
    }

    @JsonIgnore
    public JsonNullable<Double> maxBidCpmInAdvertiserCurrency() {
        return maxBidCpmInAdvertiserCurrency;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<AdGroupAudienceTargeting> audienceTargeting() {
        return (Optional<AdGroupAudienceTargeting>) audienceTargeting;
    }

    @JsonIgnore
    public AdGroupRoiGoal roiGoal() {
        return roiGoal;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<String>> creativeIds() {
        return (Optional<List<String>>) creativeIds;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<AdGroupAssociateBidList>> associatedBidLists() {
        return (Optional<List<AdGroupAssociateBidList>>) associatedBidLists;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<AdGroupFlight>> flights() {
        return (Optional<List<AdGroupFlight>>) flights;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<AdGroupKoaOptimizationSettings> koaOptimizationSettings() {
        return (Optional<AdGroupKoaOptimizationSettings>) koaOptimizationSettings;
    }

    @JsonIgnore
    public AdGroupComscoreSettings comscoreSettings() {
        return comscoreSettings;
    }

    @JsonIgnore
    public AdGroupContractTargeting contractTargeting() {
        return contractTargeting;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<List<DimensionalBiddingDimensions>>> dimensionalBiddingAutoOptimizationSettings() {
        return (Optional<List<List<DimensionalBiddingDimensions>>>) dimensionalBiddingAutoOptimizationSettings;
    }

    @JsonIgnore
    public boolean isUseClicksAsConversionsEnabled() {
        return isUseClicksAsConversionsEnabled;
    }

    @JsonIgnore
    public boolean isUseSecondaryConversionsEnabled() {
        return isUseSecondaryConversionsEnabled;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<AdGroupNielsenTrackingAttributes> nielsenTrackingAttributes() {
        return (Optional<AdGroupNielsenTrackingAttributes>) nielsenTrackingAttributes;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public AdGroupWorkflow withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    public AdGroupWorkflow withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    public AdGroupWorkflow withCampaignId(String campaignId) {
        Utils.checkNotNull(campaignId, "campaignId");
        this.campaignId = campaignId;
        return this;
    }

    public AdGroupWorkflow withIsEnabled(boolean isEnabled) {
        Utils.checkNotNull(isEnabled, "isEnabled");
        this.isEnabled = isEnabled;
        return this;
    }

    public AdGroupWorkflow withDescription(String description) {
        Utils.checkNotNull(description, "description");
        this.description = JsonNullable.of(description);
        return this;
    }

    public AdGroupWorkflow withDescription(JsonNullable<String> description) {
        Utils.checkNotNull(description, "description");
        this.description = description;
        return this;
    }

    public AdGroupWorkflow withProgrammaticGuaranteedPrivateContractId(String programmaticGuaranteedPrivateContractId) {
        Utils.checkNotNull(programmaticGuaranteedPrivateContractId, "programmaticGuaranteedPrivateContractId");
        this.programmaticGuaranteedPrivateContractId = JsonNullable.of(programmaticGuaranteedPrivateContractId);
        return this;
    }

    public AdGroupWorkflow withProgrammaticGuaranteedPrivateContractId(JsonNullable<String> programmaticGuaranteedPrivateContractId) {
        Utils.checkNotNull(programmaticGuaranteedPrivateContractId, "programmaticGuaranteedPrivateContractId");
        this.programmaticGuaranteedPrivateContractId = programmaticGuaranteedPrivateContractId;
        return this;
    }

    public AdGroupWorkflow withChannel(AdGroupChannel channel) {
        Utils.checkNotNull(channel, "channel");
        this.channel = channel;
        return this;
    }

    public AdGroupWorkflow withFunnelLocation(AdGroupFunnelLocation funnelLocation) {
        Utils.checkNotNull(funnelLocation, "funnelLocation");
        this.funnelLocation = funnelLocation;
        return this;
    }

    public AdGroupWorkflow withBudget(AdGroupBudget budget) {
        Utils.checkNotNull(budget, "budget");
        this.budget = budget;
        return this;
    }

    public AdGroupWorkflow withBaseBidCpmInAdvertiserCurrency(double baseBidCpmInAdvertiserCurrency) {
        Utils.checkNotNull(baseBidCpmInAdvertiserCurrency, "baseBidCpmInAdvertiserCurrency");
        this.baseBidCpmInAdvertiserCurrency = JsonNullable.of(baseBidCpmInAdvertiserCurrency);
        return this;
    }

    public AdGroupWorkflow withBaseBidCpmInAdvertiserCurrency(JsonNullable<Double> baseBidCpmInAdvertiserCurrency) {
        Utils.checkNotNull(baseBidCpmInAdvertiserCurrency, "baseBidCpmInAdvertiserCurrency");
        this.baseBidCpmInAdvertiserCurrency = baseBidCpmInAdvertiserCurrency;
        return this;
    }

    public AdGroupWorkflow withMaxBidCpmInAdvertiserCurrency(double maxBidCpmInAdvertiserCurrency) {
        Utils.checkNotNull(maxBidCpmInAdvertiserCurrency, "maxBidCpmInAdvertiserCurrency");
        this.maxBidCpmInAdvertiserCurrency = JsonNullable.of(maxBidCpmInAdvertiserCurrency);
        return this;
    }

    public AdGroupWorkflow withMaxBidCpmInAdvertiserCurrency(JsonNullable<Double> maxBidCpmInAdvertiserCurrency) {
        Utils.checkNotNull(maxBidCpmInAdvertiserCurrency, "maxBidCpmInAdvertiserCurrency");
        this.maxBidCpmInAdvertiserCurrency = maxBidCpmInAdvertiserCurrency;
        return this;
    }

    public AdGroupWorkflow withAudienceTargeting(AdGroupAudienceTargeting audienceTargeting) {
        Utils.checkNotNull(audienceTargeting, "audienceTargeting");
        this.audienceTargeting = Optional.ofNullable(audienceTargeting);
        return this;
    }

    public AdGroupWorkflow withAudienceTargeting(Optional<? extends AdGroupAudienceTargeting> audienceTargeting) {
        Utils.checkNotNull(audienceTargeting, "audienceTargeting");
        this.audienceTargeting = audienceTargeting;
        return this;
    }

    public AdGroupWorkflow withRoiGoal(AdGroupRoiGoal roiGoal) {
        Utils.checkNotNull(roiGoal, "roiGoal");
        this.roiGoal = roiGoal;
        return this;
    }

    public AdGroupWorkflow withCreativeIds(List<String> creativeIds) {
        Utils.checkNotNull(creativeIds, "creativeIds");
        this.creativeIds = Optional.ofNullable(creativeIds);
        return this;
    }

    public AdGroupWorkflow withCreativeIds(Optional<? extends List<String>> creativeIds) {
        Utils.checkNotNull(creativeIds, "creativeIds");
        this.creativeIds = creativeIds;
        return this;
    }

    public AdGroupWorkflow withAssociatedBidLists(List<AdGroupAssociateBidList> associatedBidLists) {
        Utils.checkNotNull(associatedBidLists, "associatedBidLists");
        this.associatedBidLists = Optional.ofNullable(associatedBidLists);
        return this;
    }

    public AdGroupWorkflow withAssociatedBidLists(Optional<? extends List<AdGroupAssociateBidList>> associatedBidLists) {
        Utils.checkNotNull(associatedBidLists, "associatedBidLists");
        this.associatedBidLists = associatedBidLists;
        return this;
    }

    public AdGroupWorkflow withFlights(List<AdGroupFlight> flights) {
        Utils.checkNotNull(flights, "flights");
        this.flights = Optional.ofNullable(flights);
        return this;
    }

    public AdGroupWorkflow withFlights(Optional<? extends List<AdGroupFlight>> flights) {
        Utils.checkNotNull(flights, "flights");
        this.flights = flights;
        return this;
    }

    public AdGroupWorkflow withKoaOptimizationSettings(AdGroupKoaOptimizationSettings koaOptimizationSettings) {
        Utils.checkNotNull(koaOptimizationSettings, "koaOptimizationSettings");
        this.koaOptimizationSettings = Optional.ofNullable(koaOptimizationSettings);
        return this;
    }

    public AdGroupWorkflow withKoaOptimizationSettings(Optional<? extends AdGroupKoaOptimizationSettings> koaOptimizationSettings) {
        Utils.checkNotNull(koaOptimizationSettings, "koaOptimizationSettings");
        this.koaOptimizationSettings = koaOptimizationSettings;
        return this;
    }

    public AdGroupWorkflow withComscoreSettings(AdGroupComscoreSettings comscoreSettings) {
        Utils.checkNotNull(comscoreSettings, "comscoreSettings");
        this.comscoreSettings = comscoreSettings;
        return this;
    }

    public AdGroupWorkflow withContractTargeting(AdGroupContractTargeting contractTargeting) {
        Utils.checkNotNull(contractTargeting, "contractTargeting");
        this.contractTargeting = contractTargeting;
        return this;
    }

    public AdGroupWorkflow withDimensionalBiddingAutoOptimizationSettings(List<List<DimensionalBiddingDimensions>> dimensionalBiddingAutoOptimizationSettings) {
        Utils.checkNotNull(dimensionalBiddingAutoOptimizationSettings, "dimensionalBiddingAutoOptimizationSettings");
        this.dimensionalBiddingAutoOptimizationSettings = Optional.ofNullable(dimensionalBiddingAutoOptimizationSettings);
        return this;
    }

    public AdGroupWorkflow withDimensionalBiddingAutoOptimizationSettings(Optional<? extends List<List<DimensionalBiddingDimensions>>> dimensionalBiddingAutoOptimizationSettings) {
        Utils.checkNotNull(dimensionalBiddingAutoOptimizationSettings, "dimensionalBiddingAutoOptimizationSettings");
        this.dimensionalBiddingAutoOptimizationSettings = dimensionalBiddingAutoOptimizationSettings;
        return this;
    }

    public AdGroupWorkflow withIsUseClicksAsConversionsEnabled(boolean isUseClicksAsConversionsEnabled) {
        Utils.checkNotNull(isUseClicksAsConversionsEnabled, "isUseClicksAsConversionsEnabled");
        this.isUseClicksAsConversionsEnabled = isUseClicksAsConversionsEnabled;
        return this;
    }

    public AdGroupWorkflow withIsUseSecondaryConversionsEnabled(boolean isUseSecondaryConversionsEnabled) {
        Utils.checkNotNull(isUseSecondaryConversionsEnabled, "isUseSecondaryConversionsEnabled");
        this.isUseSecondaryConversionsEnabled = isUseSecondaryConversionsEnabled;
        return this;
    }

    public AdGroupWorkflow withNielsenTrackingAttributes(AdGroupNielsenTrackingAttributes nielsenTrackingAttributes) {
        Utils.checkNotNull(nielsenTrackingAttributes, "nielsenTrackingAttributes");
        this.nielsenTrackingAttributes = Optional.ofNullable(nielsenTrackingAttributes);
        return this;
    }

    public AdGroupWorkflow withNielsenTrackingAttributes(Optional<? extends AdGroupNielsenTrackingAttributes> nielsenTrackingAttributes) {
        Utils.checkNotNull(nielsenTrackingAttributes, "nielsenTrackingAttributes");
        this.nielsenTrackingAttributes = nielsenTrackingAttributes;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AdGroupWorkflow other = (AdGroupWorkflow) o;
        return 
            Objects.deepEquals(this.id, other.id) &&
            Objects.deepEquals(this.name, other.name) &&
            Objects.deepEquals(this.campaignId, other.campaignId) &&
            Objects.deepEquals(this.isEnabled, other.isEnabled) &&
            Objects.deepEquals(this.description, other.description) &&
            Objects.deepEquals(this.programmaticGuaranteedPrivateContractId, other.programmaticGuaranteedPrivateContractId) &&
            Objects.deepEquals(this.channel, other.channel) &&
            Objects.deepEquals(this.funnelLocation, other.funnelLocation) &&
            Objects.deepEquals(this.budget, other.budget) &&
            Objects.deepEquals(this.baseBidCpmInAdvertiserCurrency, other.baseBidCpmInAdvertiserCurrency) &&
            Objects.deepEquals(this.maxBidCpmInAdvertiserCurrency, other.maxBidCpmInAdvertiserCurrency) &&
            Objects.deepEquals(this.audienceTargeting, other.audienceTargeting) &&
            Objects.deepEquals(this.roiGoal, other.roiGoal) &&
            Objects.deepEquals(this.creativeIds, other.creativeIds) &&
            Objects.deepEquals(this.associatedBidLists, other.associatedBidLists) &&
            Objects.deepEquals(this.flights, other.flights) &&
            Objects.deepEquals(this.koaOptimizationSettings, other.koaOptimizationSettings) &&
            Objects.deepEquals(this.comscoreSettings, other.comscoreSettings) &&
            Objects.deepEquals(this.contractTargeting, other.contractTargeting) &&
            Objects.deepEquals(this.dimensionalBiddingAutoOptimizationSettings, other.dimensionalBiddingAutoOptimizationSettings) &&
            Objects.deepEquals(this.isUseClicksAsConversionsEnabled, other.isUseClicksAsConversionsEnabled) &&
            Objects.deepEquals(this.isUseSecondaryConversionsEnabled, other.isUseSecondaryConversionsEnabled) &&
            Objects.deepEquals(this.nielsenTrackingAttributes, other.nielsenTrackingAttributes);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            id,
            name,
            campaignId,
            isEnabled,
            description,
            programmaticGuaranteedPrivateContractId,
            channel,
            funnelLocation,
            budget,
            baseBidCpmInAdvertiserCurrency,
            maxBidCpmInAdvertiserCurrency,
            audienceTargeting,
            roiGoal,
            creativeIds,
            associatedBidLists,
            flights,
            koaOptimizationSettings,
            comscoreSettings,
            contractTargeting,
            dimensionalBiddingAutoOptimizationSettings,
            isUseClicksAsConversionsEnabled,
            isUseSecondaryConversionsEnabled,
            nielsenTrackingAttributes);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AdGroupWorkflow.class,
                "id", id,
                "name", name,
                "campaignId", campaignId,
                "isEnabled", isEnabled,
                "description", description,
                "programmaticGuaranteedPrivateContractId", programmaticGuaranteedPrivateContractId,
                "channel", channel,
                "funnelLocation", funnelLocation,
                "budget", budget,
                "baseBidCpmInAdvertiserCurrency", baseBidCpmInAdvertiserCurrency,
                "maxBidCpmInAdvertiserCurrency", maxBidCpmInAdvertiserCurrency,
                "audienceTargeting", audienceTargeting,
                "roiGoal", roiGoal,
                "creativeIds", creativeIds,
                "associatedBidLists", associatedBidLists,
                "flights", flights,
                "koaOptimizationSettings", koaOptimizationSettings,
                "comscoreSettings", comscoreSettings,
                "contractTargeting", contractTargeting,
                "dimensionalBiddingAutoOptimizationSettings", dimensionalBiddingAutoOptimizationSettings,
                "isUseClicksAsConversionsEnabled", isUseClicksAsConversionsEnabled,
                "isUseSecondaryConversionsEnabled", isUseSecondaryConversionsEnabled,
                "nielsenTrackingAttributes", nielsenTrackingAttributes);
    }
    
    public final static class Builder {
 
        private String id;
 
        private String name;
 
        private String campaignId;
 
        private Boolean isEnabled;
 
        private JsonNullable<String> description = JsonNullable.undefined();
 
        private JsonNullable<String> programmaticGuaranteedPrivateContractId = JsonNullable.undefined();
 
        private AdGroupChannel channel;
 
        private AdGroupFunnelLocation funnelLocation;
 
        private AdGroupBudget budget;
 
        private JsonNullable<Double> baseBidCpmInAdvertiserCurrency = JsonNullable.undefined();
 
        private JsonNullable<Double> maxBidCpmInAdvertiserCurrency = JsonNullable.undefined();
 
        private Optional<? extends AdGroupAudienceTargeting> audienceTargeting = Optional.empty();
 
        private AdGroupRoiGoal roiGoal;
 
        private Optional<? extends List<String>> creativeIds = Optional.empty();
 
        private Optional<? extends List<AdGroupAssociateBidList>> associatedBidLists = Optional.empty();
 
        private Optional<? extends List<AdGroupFlight>> flights = Optional.empty();
 
        private Optional<? extends AdGroupKoaOptimizationSettings> koaOptimizationSettings = Optional.empty();
 
        private AdGroupComscoreSettings comscoreSettings;
 
        private AdGroupContractTargeting contractTargeting;
 
        private Optional<? extends List<List<DimensionalBiddingDimensions>>> dimensionalBiddingAutoOptimizationSettings = Optional.empty();
 
        private Boolean isUseClicksAsConversionsEnabled;
 
        private Boolean isUseSecondaryConversionsEnabled;
 
        private Optional<? extends AdGroupNielsenTrackingAttributes> nielsenTrackingAttributes = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }

        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }

        public Builder campaignId(String campaignId) {
            Utils.checkNotNull(campaignId, "campaignId");
            this.campaignId = campaignId;
            return this;
        }

        public Builder isEnabled(boolean isEnabled) {
            Utils.checkNotNull(isEnabled, "isEnabled");
            this.isEnabled = isEnabled;
            return this;
        }

        public Builder description(String description) {
            Utils.checkNotNull(description, "description");
            this.description = JsonNullable.of(description);
            return this;
        }

        public Builder description(JsonNullable<String> description) {
            Utils.checkNotNull(description, "description");
            this.description = description;
            return this;
        }

        public Builder programmaticGuaranteedPrivateContractId(String programmaticGuaranteedPrivateContractId) {
            Utils.checkNotNull(programmaticGuaranteedPrivateContractId, "programmaticGuaranteedPrivateContractId");
            this.programmaticGuaranteedPrivateContractId = JsonNullable.of(programmaticGuaranteedPrivateContractId);
            return this;
        }

        public Builder programmaticGuaranteedPrivateContractId(JsonNullable<String> programmaticGuaranteedPrivateContractId) {
            Utils.checkNotNull(programmaticGuaranteedPrivateContractId, "programmaticGuaranteedPrivateContractId");
            this.programmaticGuaranteedPrivateContractId = programmaticGuaranteedPrivateContractId;
            return this;
        }

        public Builder channel(AdGroupChannel channel) {
            Utils.checkNotNull(channel, "channel");
            this.channel = channel;
            return this;
        }

        public Builder funnelLocation(AdGroupFunnelLocation funnelLocation) {
            Utils.checkNotNull(funnelLocation, "funnelLocation");
            this.funnelLocation = funnelLocation;
            return this;
        }

        public Builder budget(AdGroupBudget budget) {
            Utils.checkNotNull(budget, "budget");
            this.budget = budget;
            return this;
        }

        public Builder baseBidCpmInAdvertiserCurrency(double baseBidCpmInAdvertiserCurrency) {
            Utils.checkNotNull(baseBidCpmInAdvertiserCurrency, "baseBidCpmInAdvertiserCurrency");
            this.baseBidCpmInAdvertiserCurrency = JsonNullable.of(baseBidCpmInAdvertiserCurrency);
            return this;
        }

        public Builder baseBidCpmInAdvertiserCurrency(JsonNullable<Double> baseBidCpmInAdvertiserCurrency) {
            Utils.checkNotNull(baseBidCpmInAdvertiserCurrency, "baseBidCpmInAdvertiserCurrency");
            this.baseBidCpmInAdvertiserCurrency = baseBidCpmInAdvertiserCurrency;
            return this;
        }

        public Builder maxBidCpmInAdvertiserCurrency(double maxBidCpmInAdvertiserCurrency) {
            Utils.checkNotNull(maxBidCpmInAdvertiserCurrency, "maxBidCpmInAdvertiserCurrency");
            this.maxBidCpmInAdvertiserCurrency = JsonNullable.of(maxBidCpmInAdvertiserCurrency);
            return this;
        }

        public Builder maxBidCpmInAdvertiserCurrency(JsonNullable<Double> maxBidCpmInAdvertiserCurrency) {
            Utils.checkNotNull(maxBidCpmInAdvertiserCurrency, "maxBidCpmInAdvertiserCurrency");
            this.maxBidCpmInAdvertiserCurrency = maxBidCpmInAdvertiserCurrency;
            return this;
        }

        public Builder audienceTargeting(AdGroupAudienceTargeting audienceTargeting) {
            Utils.checkNotNull(audienceTargeting, "audienceTargeting");
            this.audienceTargeting = Optional.ofNullable(audienceTargeting);
            return this;
        }

        public Builder audienceTargeting(Optional<? extends AdGroupAudienceTargeting> audienceTargeting) {
            Utils.checkNotNull(audienceTargeting, "audienceTargeting");
            this.audienceTargeting = audienceTargeting;
            return this;
        }

        public Builder roiGoal(AdGroupRoiGoal roiGoal) {
            Utils.checkNotNull(roiGoal, "roiGoal");
            this.roiGoal = roiGoal;
            return this;
        }

        public Builder creativeIds(List<String> creativeIds) {
            Utils.checkNotNull(creativeIds, "creativeIds");
            this.creativeIds = Optional.ofNullable(creativeIds);
            return this;
        }

        public Builder creativeIds(Optional<? extends List<String>> creativeIds) {
            Utils.checkNotNull(creativeIds, "creativeIds");
            this.creativeIds = creativeIds;
            return this;
        }

        public Builder associatedBidLists(List<AdGroupAssociateBidList> associatedBidLists) {
            Utils.checkNotNull(associatedBidLists, "associatedBidLists");
            this.associatedBidLists = Optional.ofNullable(associatedBidLists);
            return this;
        }

        public Builder associatedBidLists(Optional<? extends List<AdGroupAssociateBidList>> associatedBidLists) {
            Utils.checkNotNull(associatedBidLists, "associatedBidLists");
            this.associatedBidLists = associatedBidLists;
            return this;
        }

        public Builder flights(List<AdGroupFlight> flights) {
            Utils.checkNotNull(flights, "flights");
            this.flights = Optional.ofNullable(flights);
            return this;
        }

        public Builder flights(Optional<? extends List<AdGroupFlight>> flights) {
            Utils.checkNotNull(flights, "flights");
            this.flights = flights;
            return this;
        }

        public Builder koaOptimizationSettings(AdGroupKoaOptimizationSettings koaOptimizationSettings) {
            Utils.checkNotNull(koaOptimizationSettings, "koaOptimizationSettings");
            this.koaOptimizationSettings = Optional.ofNullable(koaOptimizationSettings);
            return this;
        }

        public Builder koaOptimizationSettings(Optional<? extends AdGroupKoaOptimizationSettings> koaOptimizationSettings) {
            Utils.checkNotNull(koaOptimizationSettings, "koaOptimizationSettings");
            this.koaOptimizationSettings = koaOptimizationSettings;
            return this;
        }

        public Builder comscoreSettings(AdGroupComscoreSettings comscoreSettings) {
            Utils.checkNotNull(comscoreSettings, "comscoreSettings");
            this.comscoreSettings = comscoreSettings;
            return this;
        }

        public Builder contractTargeting(AdGroupContractTargeting contractTargeting) {
            Utils.checkNotNull(contractTargeting, "contractTargeting");
            this.contractTargeting = contractTargeting;
            return this;
        }

        public Builder dimensionalBiddingAutoOptimizationSettings(List<List<DimensionalBiddingDimensions>> dimensionalBiddingAutoOptimizationSettings) {
            Utils.checkNotNull(dimensionalBiddingAutoOptimizationSettings, "dimensionalBiddingAutoOptimizationSettings");
            this.dimensionalBiddingAutoOptimizationSettings = Optional.ofNullable(dimensionalBiddingAutoOptimizationSettings);
            return this;
        }

        public Builder dimensionalBiddingAutoOptimizationSettings(Optional<? extends List<List<DimensionalBiddingDimensions>>> dimensionalBiddingAutoOptimizationSettings) {
            Utils.checkNotNull(dimensionalBiddingAutoOptimizationSettings, "dimensionalBiddingAutoOptimizationSettings");
            this.dimensionalBiddingAutoOptimizationSettings = dimensionalBiddingAutoOptimizationSettings;
            return this;
        }

        public Builder isUseClicksAsConversionsEnabled(boolean isUseClicksAsConversionsEnabled) {
            Utils.checkNotNull(isUseClicksAsConversionsEnabled, "isUseClicksAsConversionsEnabled");
            this.isUseClicksAsConversionsEnabled = isUseClicksAsConversionsEnabled;
            return this;
        }

        public Builder isUseSecondaryConversionsEnabled(boolean isUseSecondaryConversionsEnabled) {
            Utils.checkNotNull(isUseSecondaryConversionsEnabled, "isUseSecondaryConversionsEnabled");
            this.isUseSecondaryConversionsEnabled = isUseSecondaryConversionsEnabled;
            return this;
        }

        public Builder nielsenTrackingAttributes(AdGroupNielsenTrackingAttributes nielsenTrackingAttributes) {
            Utils.checkNotNull(nielsenTrackingAttributes, "nielsenTrackingAttributes");
            this.nielsenTrackingAttributes = Optional.ofNullable(nielsenTrackingAttributes);
            return this;
        }

        public Builder nielsenTrackingAttributes(Optional<? extends AdGroupNielsenTrackingAttributes> nielsenTrackingAttributes) {
            Utils.checkNotNull(nielsenTrackingAttributes, "nielsenTrackingAttributes");
            this.nielsenTrackingAttributes = nielsenTrackingAttributes;
            return this;
        }
        
        public AdGroupWorkflow build() {
            return new AdGroupWorkflow(
                id,
                name,
                campaignId,
                isEnabled,
                description,
                programmaticGuaranteedPrivateContractId,
                channel,
                funnelLocation,
                budget,
                baseBidCpmInAdvertiserCurrency,
                maxBidCpmInAdvertiserCurrency,
                audienceTargeting,
                roiGoal,
                creativeIds,
                associatedBidLists,
                flights,
                koaOptimizationSettings,
                comscoreSettings,
                contractTargeting,
                dimensionalBiddingAutoOptimizationSettings,
                isUseClicksAsConversionsEnabled,
                isUseSecondaryConversionsEnabled,
                nielsenTrackingAttributes);
        }
    }
}
