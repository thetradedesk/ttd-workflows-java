/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.thetradedesk.workflows.models.components;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.thetradedesk.workflows.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Objects;
/**
 * CampaignCreationInput - Schema with required fields for creating a new campaign
 */

public class CampaignCreationInput {

    /**
     * The platform ID of the advertiser that owns this Campaign.
     */
    @JsonProperty("advertiserId")
    private String advertiserId;

    /**
     * The name of the Campaign.
     */
    @JsonProperty("campaignName")
    private String campaignName;

    @JsonProperty("primaryChannel")
    private CampaignChannel primaryChannel;

    @JsonProperty("primaryGoal")
    private CampaignCreateROIGoalInput primaryGoal;

    /**
     * The List of flights associated with the Campaign.
     */
    @JsonProperty("campaignFlights")
    private List<CampaignFlightCreationInput> campaignFlights;

    @JsonCreator
    public CampaignCreationInput(
            @JsonProperty("advertiserId") String advertiserId,
            @JsonProperty("campaignName") String campaignName,
            @JsonProperty("primaryChannel") CampaignChannel primaryChannel,
            @JsonProperty("primaryGoal") CampaignCreateROIGoalInput primaryGoal,
            @JsonProperty("campaignFlights") List<CampaignFlightCreationInput> campaignFlights) {
        Utils.checkNotNull(advertiserId, "advertiserId");
        Utils.checkNotNull(campaignName, "campaignName");
        Utils.checkNotNull(primaryChannel, "primaryChannel");
        Utils.checkNotNull(primaryGoal, "primaryGoal");
        Utils.checkNotNull(campaignFlights, "campaignFlights");
        this.advertiserId = advertiserId;
        this.campaignName = campaignName;
        this.primaryChannel = primaryChannel;
        this.primaryGoal = primaryGoal;
        this.campaignFlights = campaignFlights;
    }

    /**
     * The platform ID of the advertiser that owns this Campaign.
     */
    @JsonIgnore
    public String advertiserId() {
        return advertiserId;
    }

    /**
     * The name of the Campaign.
     */
    @JsonIgnore
    public String campaignName() {
        return campaignName;
    }

    @JsonIgnore
    public CampaignChannel primaryChannel() {
        return primaryChannel;
    }

    @JsonIgnore
    public CampaignCreateROIGoalInput primaryGoal() {
        return primaryGoal;
    }

    /**
     * The List of flights associated with the Campaign.
     */
    @JsonIgnore
    public List<CampaignFlightCreationInput> campaignFlights() {
        return campaignFlights;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The platform ID of the advertiser that owns this Campaign.
     */
    public CampaignCreationInput withAdvertiserId(String advertiserId) {
        Utils.checkNotNull(advertiserId, "advertiserId");
        this.advertiserId = advertiserId;
        return this;
    }

    /**
     * The name of the Campaign.
     */
    public CampaignCreationInput withCampaignName(String campaignName) {
        Utils.checkNotNull(campaignName, "campaignName");
        this.campaignName = campaignName;
        return this;
    }

    public CampaignCreationInput withPrimaryChannel(CampaignChannel primaryChannel) {
        Utils.checkNotNull(primaryChannel, "primaryChannel");
        this.primaryChannel = primaryChannel;
        return this;
    }

    public CampaignCreationInput withPrimaryGoal(CampaignCreateROIGoalInput primaryGoal) {
        Utils.checkNotNull(primaryGoal, "primaryGoal");
        this.primaryGoal = primaryGoal;
        return this;
    }

    /**
     * The List of flights associated with the Campaign.
     */
    public CampaignCreationInput withCampaignFlights(List<CampaignFlightCreationInput> campaignFlights) {
        Utils.checkNotNull(campaignFlights, "campaignFlights");
        this.campaignFlights = campaignFlights;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CampaignCreationInput other = (CampaignCreationInput) o;
        return 
            Objects.deepEquals(this.advertiserId, other.advertiserId) &&
            Objects.deepEquals(this.campaignName, other.campaignName) &&
            Objects.deepEquals(this.primaryChannel, other.primaryChannel) &&
            Objects.deepEquals(this.primaryGoal, other.primaryGoal) &&
            Objects.deepEquals(this.campaignFlights, other.campaignFlights);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            advertiserId,
            campaignName,
            primaryChannel,
            primaryGoal,
            campaignFlights);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CampaignCreationInput.class,
                "advertiserId", advertiserId,
                "campaignName", campaignName,
                "primaryChannel", primaryChannel,
                "primaryGoal", primaryGoal,
                "campaignFlights", campaignFlights);
    }
    
    public final static class Builder {
 
        private String advertiserId;
 
        private String campaignName;
 
        private CampaignChannel primaryChannel;
 
        private CampaignCreateROIGoalInput primaryGoal;
 
        private List<CampaignFlightCreationInput> campaignFlights;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The platform ID of the advertiser that owns this Campaign.
         */
        public Builder advertiserId(String advertiserId) {
            Utils.checkNotNull(advertiserId, "advertiserId");
            this.advertiserId = advertiserId;
            return this;
        }

        /**
         * The name of the Campaign.
         */
        public Builder campaignName(String campaignName) {
            Utils.checkNotNull(campaignName, "campaignName");
            this.campaignName = campaignName;
            return this;
        }

        public Builder primaryChannel(CampaignChannel primaryChannel) {
            Utils.checkNotNull(primaryChannel, "primaryChannel");
            this.primaryChannel = primaryChannel;
            return this;
        }

        public Builder primaryGoal(CampaignCreateROIGoalInput primaryGoal) {
            Utils.checkNotNull(primaryGoal, "primaryGoal");
            this.primaryGoal = primaryGoal;
            return this;
        }

        /**
         * The List of flights associated with the Campaign.
         */
        public Builder campaignFlights(List<CampaignFlightCreationInput> campaignFlights) {
            Utils.checkNotNull(campaignFlights, "campaignFlights");
            this.campaignFlights = campaignFlights;
            return this;
        }
        
        public CampaignCreationInput build() {
            return new CampaignCreationInput(
                advertiserId,
                campaignName,
                primaryChannel,
                primaryGoal,
                campaignFlights);
        }
    }
}

