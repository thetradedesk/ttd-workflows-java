/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.thetradedesk.workflows.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.thetradedesk.workflows.utils.Utils;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class AdGroupUpdateWorkflowPrimaryInput {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isEnabled")
    private JsonNullable<Boolean> isEnabled;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    private JsonNullable<String> description;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("budget")
    private Optional<? extends AdGroupWorkflowBudgetInput> budget;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("baseBidCPMInAdvertiserCurrency")
    private JsonNullable<Double> baseBidCPMInAdvertiserCurrency;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxBidCPMInAdvertiserCurrency")
    private JsonNullable<Double> maxBidCPMInAdvertiserCurrency;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audienceTargeting")
    private Optional<? extends AdGroupWorkflowAudienceTargetingInput> audienceTargeting;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("roiGoal")
    private Optional<? extends AdGroupWorkflowROIGoalInput> roiGoal;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creativeIds")
    private JsonNullable<? extends List<String>> creativeIds;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("associatedBidLists")
    private JsonNullable<? extends List<AdGroupWorkflowAssociateBidListInput>> associatedBidLists;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    private JsonNullable<String> name;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channel")
    private Optional<? extends AdGroupChannel> channel;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("funnelLocation")
    private Optional<? extends AdGroupFunnelLocation> funnelLocation;

    @JsonCreator
    public AdGroupUpdateWorkflowPrimaryInput(
            @JsonProperty("isEnabled") JsonNullable<Boolean> isEnabled,
            @JsonProperty("description") JsonNullable<String> description,
            @JsonProperty("budget") Optional<? extends AdGroupWorkflowBudgetInput> budget,
            @JsonProperty("baseBidCPMInAdvertiserCurrency") JsonNullable<Double> baseBidCPMInAdvertiserCurrency,
            @JsonProperty("maxBidCPMInAdvertiserCurrency") JsonNullable<Double> maxBidCPMInAdvertiserCurrency,
            @JsonProperty("audienceTargeting") Optional<? extends AdGroupWorkflowAudienceTargetingInput> audienceTargeting,
            @JsonProperty("roiGoal") Optional<? extends AdGroupWorkflowROIGoalInput> roiGoal,
            @JsonProperty("creativeIds") JsonNullable<? extends List<String>> creativeIds,
            @JsonProperty("associatedBidLists") JsonNullable<? extends List<AdGroupWorkflowAssociateBidListInput>> associatedBidLists,
            @JsonProperty("name") JsonNullable<String> name,
            @JsonProperty("channel") Optional<? extends AdGroupChannel> channel,
            @JsonProperty("funnelLocation") Optional<? extends AdGroupFunnelLocation> funnelLocation) {
        Utils.checkNotNull(isEnabled, "isEnabled");
        Utils.checkNotNull(description, "description");
        Utils.checkNotNull(budget, "budget");
        Utils.checkNotNull(baseBidCPMInAdvertiserCurrency, "baseBidCPMInAdvertiserCurrency");
        Utils.checkNotNull(maxBidCPMInAdvertiserCurrency, "maxBidCPMInAdvertiserCurrency");
        Utils.checkNotNull(audienceTargeting, "audienceTargeting");
        Utils.checkNotNull(roiGoal, "roiGoal");
        Utils.checkNotNull(creativeIds, "creativeIds");
        Utils.checkNotNull(associatedBidLists, "associatedBidLists");
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(channel, "channel");
        Utils.checkNotNull(funnelLocation, "funnelLocation");
        this.isEnabled = isEnabled;
        this.description = description;
        this.budget = budget;
        this.baseBidCPMInAdvertiserCurrency = baseBidCPMInAdvertiserCurrency;
        this.maxBidCPMInAdvertiserCurrency = maxBidCPMInAdvertiserCurrency;
        this.audienceTargeting = audienceTargeting;
        this.roiGoal = roiGoal;
        this.creativeIds = creativeIds;
        this.associatedBidLists = associatedBidLists;
        this.name = name;
        this.channel = channel;
        this.funnelLocation = funnelLocation;
    }
    
    public AdGroupUpdateWorkflowPrimaryInput() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), Optional.empty(),
            JsonNullable.undefined(), JsonNullable.undefined(), Optional.empty(),
            Optional.empty(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), Optional.empty(), Optional.empty());
    }

    @JsonIgnore
    public JsonNullable<Boolean> isEnabled() {
        return isEnabled;
    }

    @JsonIgnore
    public JsonNullable<String> description() {
        return description;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<AdGroupWorkflowBudgetInput> budget() {
        return (Optional<AdGroupWorkflowBudgetInput>) budget;
    }

    @JsonIgnore
    public JsonNullable<Double> baseBidCPMInAdvertiserCurrency() {
        return baseBidCPMInAdvertiserCurrency;
    }

    @JsonIgnore
    public JsonNullable<Double> maxBidCPMInAdvertiserCurrency() {
        return maxBidCPMInAdvertiserCurrency;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<AdGroupWorkflowAudienceTargetingInput> audienceTargeting() {
        return (Optional<AdGroupWorkflowAudienceTargetingInput>) audienceTargeting;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<AdGroupWorkflowROIGoalInput> roiGoal() {
        return (Optional<AdGroupWorkflowROIGoalInput>) roiGoal;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<String>> creativeIds() {
        return (JsonNullable<List<String>>) creativeIds;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<AdGroupWorkflowAssociateBidListInput>> associatedBidLists() {
        return (JsonNullable<List<AdGroupWorkflowAssociateBidListInput>>) associatedBidLists;
    }

    @JsonIgnore
    public JsonNullable<String> name() {
        return name;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<AdGroupChannel> channel() {
        return (Optional<AdGroupChannel>) channel;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<AdGroupFunnelLocation> funnelLocation() {
        return (Optional<AdGroupFunnelLocation>) funnelLocation;
    }

    public static Builder builder() {
        return new Builder();
    }


    public AdGroupUpdateWorkflowPrimaryInput withIsEnabled(boolean isEnabled) {
        Utils.checkNotNull(isEnabled, "isEnabled");
        this.isEnabled = JsonNullable.of(isEnabled);
        return this;
    }

    public AdGroupUpdateWorkflowPrimaryInput withIsEnabled(JsonNullable<Boolean> isEnabled) {
        Utils.checkNotNull(isEnabled, "isEnabled");
        this.isEnabled = isEnabled;
        return this;
    }

    public AdGroupUpdateWorkflowPrimaryInput withDescription(String description) {
        Utils.checkNotNull(description, "description");
        this.description = JsonNullable.of(description);
        return this;
    }

    public AdGroupUpdateWorkflowPrimaryInput withDescription(JsonNullable<String> description) {
        Utils.checkNotNull(description, "description");
        this.description = description;
        return this;
    }

    public AdGroupUpdateWorkflowPrimaryInput withBudget(AdGroupWorkflowBudgetInput budget) {
        Utils.checkNotNull(budget, "budget");
        this.budget = Optional.ofNullable(budget);
        return this;
    }


    public AdGroupUpdateWorkflowPrimaryInput withBudget(Optional<? extends AdGroupWorkflowBudgetInput> budget) {
        Utils.checkNotNull(budget, "budget");
        this.budget = budget;
        return this;
    }

    public AdGroupUpdateWorkflowPrimaryInput withBaseBidCPMInAdvertiserCurrency(double baseBidCPMInAdvertiserCurrency) {
        Utils.checkNotNull(baseBidCPMInAdvertiserCurrency, "baseBidCPMInAdvertiserCurrency");
        this.baseBidCPMInAdvertiserCurrency = JsonNullable.of(baseBidCPMInAdvertiserCurrency);
        return this;
    }

    public AdGroupUpdateWorkflowPrimaryInput withBaseBidCPMInAdvertiserCurrency(JsonNullable<Double> baseBidCPMInAdvertiserCurrency) {
        Utils.checkNotNull(baseBidCPMInAdvertiserCurrency, "baseBidCPMInAdvertiserCurrency");
        this.baseBidCPMInAdvertiserCurrency = baseBidCPMInAdvertiserCurrency;
        return this;
    }

    public AdGroupUpdateWorkflowPrimaryInput withMaxBidCPMInAdvertiserCurrency(double maxBidCPMInAdvertiserCurrency) {
        Utils.checkNotNull(maxBidCPMInAdvertiserCurrency, "maxBidCPMInAdvertiserCurrency");
        this.maxBidCPMInAdvertiserCurrency = JsonNullable.of(maxBidCPMInAdvertiserCurrency);
        return this;
    }

    public AdGroupUpdateWorkflowPrimaryInput withMaxBidCPMInAdvertiserCurrency(JsonNullable<Double> maxBidCPMInAdvertiserCurrency) {
        Utils.checkNotNull(maxBidCPMInAdvertiserCurrency, "maxBidCPMInAdvertiserCurrency");
        this.maxBidCPMInAdvertiserCurrency = maxBidCPMInAdvertiserCurrency;
        return this;
    }

    public AdGroupUpdateWorkflowPrimaryInput withAudienceTargeting(AdGroupWorkflowAudienceTargetingInput audienceTargeting) {
        Utils.checkNotNull(audienceTargeting, "audienceTargeting");
        this.audienceTargeting = Optional.ofNullable(audienceTargeting);
        return this;
    }


    public AdGroupUpdateWorkflowPrimaryInput withAudienceTargeting(Optional<? extends AdGroupWorkflowAudienceTargetingInput> audienceTargeting) {
        Utils.checkNotNull(audienceTargeting, "audienceTargeting");
        this.audienceTargeting = audienceTargeting;
        return this;
    }

    public AdGroupUpdateWorkflowPrimaryInput withRoiGoal(AdGroupWorkflowROIGoalInput roiGoal) {
        Utils.checkNotNull(roiGoal, "roiGoal");
        this.roiGoal = Optional.ofNullable(roiGoal);
        return this;
    }


    public AdGroupUpdateWorkflowPrimaryInput withRoiGoal(Optional<? extends AdGroupWorkflowROIGoalInput> roiGoal) {
        Utils.checkNotNull(roiGoal, "roiGoal");
        this.roiGoal = roiGoal;
        return this;
    }

    public AdGroupUpdateWorkflowPrimaryInput withCreativeIds(List<String> creativeIds) {
        Utils.checkNotNull(creativeIds, "creativeIds");
        this.creativeIds = JsonNullable.of(creativeIds);
        return this;
    }

    public AdGroupUpdateWorkflowPrimaryInput withCreativeIds(JsonNullable<? extends List<String>> creativeIds) {
        Utils.checkNotNull(creativeIds, "creativeIds");
        this.creativeIds = creativeIds;
        return this;
    }

    public AdGroupUpdateWorkflowPrimaryInput withAssociatedBidLists(List<AdGroupWorkflowAssociateBidListInput> associatedBidLists) {
        Utils.checkNotNull(associatedBidLists, "associatedBidLists");
        this.associatedBidLists = JsonNullable.of(associatedBidLists);
        return this;
    }

    public AdGroupUpdateWorkflowPrimaryInput withAssociatedBidLists(JsonNullable<? extends List<AdGroupWorkflowAssociateBidListInput>> associatedBidLists) {
        Utils.checkNotNull(associatedBidLists, "associatedBidLists");
        this.associatedBidLists = associatedBidLists;
        return this;
    }

    public AdGroupUpdateWorkflowPrimaryInput withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = JsonNullable.of(name);
        return this;
    }

    public AdGroupUpdateWorkflowPrimaryInput withName(JsonNullable<String> name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    public AdGroupUpdateWorkflowPrimaryInput withChannel(AdGroupChannel channel) {
        Utils.checkNotNull(channel, "channel");
        this.channel = Optional.ofNullable(channel);
        return this;
    }


    public AdGroupUpdateWorkflowPrimaryInput withChannel(Optional<? extends AdGroupChannel> channel) {
        Utils.checkNotNull(channel, "channel");
        this.channel = channel;
        return this;
    }

    public AdGroupUpdateWorkflowPrimaryInput withFunnelLocation(AdGroupFunnelLocation funnelLocation) {
        Utils.checkNotNull(funnelLocation, "funnelLocation");
        this.funnelLocation = Optional.ofNullable(funnelLocation);
        return this;
    }


    public AdGroupUpdateWorkflowPrimaryInput withFunnelLocation(Optional<? extends AdGroupFunnelLocation> funnelLocation) {
        Utils.checkNotNull(funnelLocation, "funnelLocation");
        this.funnelLocation = funnelLocation;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AdGroupUpdateWorkflowPrimaryInput other = (AdGroupUpdateWorkflowPrimaryInput) o;
        return 
            Utils.enhancedDeepEquals(this.isEnabled, other.isEnabled) &&
            Utils.enhancedDeepEquals(this.description, other.description) &&
            Utils.enhancedDeepEquals(this.budget, other.budget) &&
            Utils.enhancedDeepEquals(this.baseBidCPMInAdvertiserCurrency, other.baseBidCPMInAdvertiserCurrency) &&
            Utils.enhancedDeepEquals(this.maxBidCPMInAdvertiserCurrency, other.maxBidCPMInAdvertiserCurrency) &&
            Utils.enhancedDeepEquals(this.audienceTargeting, other.audienceTargeting) &&
            Utils.enhancedDeepEquals(this.roiGoal, other.roiGoal) &&
            Utils.enhancedDeepEquals(this.creativeIds, other.creativeIds) &&
            Utils.enhancedDeepEquals(this.associatedBidLists, other.associatedBidLists) &&
            Utils.enhancedDeepEquals(this.name, other.name) &&
            Utils.enhancedDeepEquals(this.channel, other.channel) &&
            Utils.enhancedDeepEquals(this.funnelLocation, other.funnelLocation);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            isEnabled, description, budget,
            baseBidCPMInAdvertiserCurrency, maxBidCPMInAdvertiserCurrency, audienceTargeting,
            roiGoal, creativeIds, associatedBidLists,
            name, channel, funnelLocation);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AdGroupUpdateWorkflowPrimaryInput.class,
                "isEnabled", isEnabled,
                "description", description,
                "budget", budget,
                "baseBidCPMInAdvertiserCurrency", baseBidCPMInAdvertiserCurrency,
                "maxBidCPMInAdvertiserCurrency", maxBidCPMInAdvertiserCurrency,
                "audienceTargeting", audienceTargeting,
                "roiGoal", roiGoal,
                "creativeIds", creativeIds,
                "associatedBidLists", associatedBidLists,
                "name", name,
                "channel", channel,
                "funnelLocation", funnelLocation);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<Boolean> isEnabled = JsonNullable.undefined();

        private JsonNullable<String> description = JsonNullable.undefined();

        private Optional<? extends AdGroupWorkflowBudgetInput> budget = Optional.empty();

        private JsonNullable<Double> baseBidCPMInAdvertiserCurrency = JsonNullable.undefined();

        private JsonNullable<Double> maxBidCPMInAdvertiserCurrency = JsonNullable.undefined();

        private Optional<? extends AdGroupWorkflowAudienceTargetingInput> audienceTargeting = Optional.empty();

        private Optional<? extends AdGroupWorkflowROIGoalInput> roiGoal = Optional.empty();

        private JsonNullable<? extends List<String>> creativeIds = JsonNullable.undefined();

        private JsonNullable<? extends List<AdGroupWorkflowAssociateBidListInput>> associatedBidLists = JsonNullable.undefined();

        private JsonNullable<String> name = JsonNullable.undefined();

        private Optional<? extends AdGroupChannel> channel = Optional.empty();

        private Optional<? extends AdGroupFunnelLocation> funnelLocation = Optional.empty();

        private Builder() {
          // force use of static builder() method
        }


        public Builder isEnabled(boolean isEnabled) {
            Utils.checkNotNull(isEnabled, "isEnabled");
            this.isEnabled = JsonNullable.of(isEnabled);
            return this;
        }

        public Builder isEnabled(JsonNullable<Boolean> isEnabled) {
            Utils.checkNotNull(isEnabled, "isEnabled");
            this.isEnabled = isEnabled;
            return this;
        }


        public Builder description(String description) {
            Utils.checkNotNull(description, "description");
            this.description = JsonNullable.of(description);
            return this;
        }

        public Builder description(JsonNullable<String> description) {
            Utils.checkNotNull(description, "description");
            this.description = description;
            return this;
        }


        public Builder budget(AdGroupWorkflowBudgetInput budget) {
            Utils.checkNotNull(budget, "budget");
            this.budget = Optional.ofNullable(budget);
            return this;
        }

        public Builder budget(Optional<? extends AdGroupWorkflowBudgetInput> budget) {
            Utils.checkNotNull(budget, "budget");
            this.budget = budget;
            return this;
        }


        public Builder baseBidCPMInAdvertiserCurrency(double baseBidCPMInAdvertiserCurrency) {
            Utils.checkNotNull(baseBidCPMInAdvertiserCurrency, "baseBidCPMInAdvertiserCurrency");
            this.baseBidCPMInAdvertiserCurrency = JsonNullable.of(baseBidCPMInAdvertiserCurrency);
            return this;
        }

        public Builder baseBidCPMInAdvertiserCurrency(JsonNullable<Double> baseBidCPMInAdvertiserCurrency) {
            Utils.checkNotNull(baseBidCPMInAdvertiserCurrency, "baseBidCPMInAdvertiserCurrency");
            this.baseBidCPMInAdvertiserCurrency = baseBidCPMInAdvertiserCurrency;
            return this;
        }


        public Builder maxBidCPMInAdvertiserCurrency(double maxBidCPMInAdvertiserCurrency) {
            Utils.checkNotNull(maxBidCPMInAdvertiserCurrency, "maxBidCPMInAdvertiserCurrency");
            this.maxBidCPMInAdvertiserCurrency = JsonNullable.of(maxBidCPMInAdvertiserCurrency);
            return this;
        }

        public Builder maxBidCPMInAdvertiserCurrency(JsonNullable<Double> maxBidCPMInAdvertiserCurrency) {
            Utils.checkNotNull(maxBidCPMInAdvertiserCurrency, "maxBidCPMInAdvertiserCurrency");
            this.maxBidCPMInAdvertiserCurrency = maxBidCPMInAdvertiserCurrency;
            return this;
        }


        public Builder audienceTargeting(AdGroupWorkflowAudienceTargetingInput audienceTargeting) {
            Utils.checkNotNull(audienceTargeting, "audienceTargeting");
            this.audienceTargeting = Optional.ofNullable(audienceTargeting);
            return this;
        }

        public Builder audienceTargeting(Optional<? extends AdGroupWorkflowAudienceTargetingInput> audienceTargeting) {
            Utils.checkNotNull(audienceTargeting, "audienceTargeting");
            this.audienceTargeting = audienceTargeting;
            return this;
        }


        public Builder roiGoal(AdGroupWorkflowROIGoalInput roiGoal) {
            Utils.checkNotNull(roiGoal, "roiGoal");
            this.roiGoal = Optional.ofNullable(roiGoal);
            return this;
        }

        public Builder roiGoal(Optional<? extends AdGroupWorkflowROIGoalInput> roiGoal) {
            Utils.checkNotNull(roiGoal, "roiGoal");
            this.roiGoal = roiGoal;
            return this;
        }


        public Builder creativeIds(List<String> creativeIds) {
            Utils.checkNotNull(creativeIds, "creativeIds");
            this.creativeIds = JsonNullable.of(creativeIds);
            return this;
        }

        public Builder creativeIds(JsonNullable<? extends List<String>> creativeIds) {
            Utils.checkNotNull(creativeIds, "creativeIds");
            this.creativeIds = creativeIds;
            return this;
        }


        public Builder associatedBidLists(List<AdGroupWorkflowAssociateBidListInput> associatedBidLists) {
            Utils.checkNotNull(associatedBidLists, "associatedBidLists");
            this.associatedBidLists = JsonNullable.of(associatedBidLists);
            return this;
        }

        public Builder associatedBidLists(JsonNullable<? extends List<AdGroupWorkflowAssociateBidListInput>> associatedBidLists) {
            Utils.checkNotNull(associatedBidLists, "associatedBidLists");
            this.associatedBidLists = associatedBidLists;
            return this;
        }


        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = JsonNullable.of(name);
            return this;
        }

        public Builder name(JsonNullable<String> name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }


        public Builder channel(AdGroupChannel channel) {
            Utils.checkNotNull(channel, "channel");
            this.channel = Optional.ofNullable(channel);
            return this;
        }

        public Builder channel(Optional<? extends AdGroupChannel> channel) {
            Utils.checkNotNull(channel, "channel");
            this.channel = channel;
            return this;
        }


        public Builder funnelLocation(AdGroupFunnelLocation funnelLocation) {
            Utils.checkNotNull(funnelLocation, "funnelLocation");
            this.funnelLocation = Optional.ofNullable(funnelLocation);
            return this;
        }

        public Builder funnelLocation(Optional<? extends AdGroupFunnelLocation> funnelLocation) {
            Utils.checkNotNull(funnelLocation, "funnelLocation");
            this.funnelLocation = funnelLocation;
            return this;
        }

        public AdGroupUpdateWorkflowPrimaryInput build() {

            return new AdGroupUpdateWorkflowPrimaryInput(
                isEnabled, description, budget,
                baseBidCPMInAdvertiserCurrency, maxBidCPMInAdvertiserCurrency, audienceTargeting,
                roiGoal, creativeIds, associatedBidLists,
                name, channel, funnelLocation);
        }

    }
}
