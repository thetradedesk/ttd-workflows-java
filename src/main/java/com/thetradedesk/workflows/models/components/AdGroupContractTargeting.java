/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.thetradedesk.workflows.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.thetradedesk.workflows.utils.Utils;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

public class AdGroupContractTargeting {

    @JsonProperty("allowOpenMarketBiddingWhenTargetingContracts")
    private boolean allowOpenMarketBiddingWhenTargetingContracts;

    @JsonCreator
    public AdGroupContractTargeting(
            @JsonProperty("allowOpenMarketBiddingWhenTargetingContracts") boolean allowOpenMarketBiddingWhenTargetingContracts) {
        Utils.checkNotNull(allowOpenMarketBiddingWhenTargetingContracts, "allowOpenMarketBiddingWhenTargetingContracts");
        this.allowOpenMarketBiddingWhenTargetingContracts = allowOpenMarketBiddingWhenTargetingContracts;
    }

    @JsonIgnore
    public boolean allowOpenMarketBiddingWhenTargetingContracts() {
        return allowOpenMarketBiddingWhenTargetingContracts;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public AdGroupContractTargeting withAllowOpenMarketBiddingWhenTargetingContracts(boolean allowOpenMarketBiddingWhenTargetingContracts) {
        Utils.checkNotNull(allowOpenMarketBiddingWhenTargetingContracts, "allowOpenMarketBiddingWhenTargetingContracts");
        this.allowOpenMarketBiddingWhenTargetingContracts = allowOpenMarketBiddingWhenTargetingContracts;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AdGroupContractTargeting other = (AdGroupContractTargeting) o;
        return 
            Objects.deepEquals(this.allowOpenMarketBiddingWhenTargetingContracts, other.allowOpenMarketBiddingWhenTargetingContracts);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            allowOpenMarketBiddingWhenTargetingContracts);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AdGroupContractTargeting.class,
                "allowOpenMarketBiddingWhenTargetingContracts", allowOpenMarketBiddingWhenTargetingContracts);
    }
    
    public final static class Builder {
 
        private Boolean allowOpenMarketBiddingWhenTargetingContracts;
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder allowOpenMarketBiddingWhenTargetingContracts(boolean allowOpenMarketBiddingWhenTargetingContracts) {
            Utils.checkNotNull(allowOpenMarketBiddingWhenTargetingContracts, "allowOpenMarketBiddingWhenTargetingContracts");
            this.allowOpenMarketBiddingWhenTargetingContracts = allowOpenMarketBiddingWhenTargetingContracts;
            return this;
        }
        
        public AdGroupContractTargeting build() {
            return new AdGroupContractTargeting(
                allowOpenMarketBiddingWhenTargetingContracts);
        }
    }
}
