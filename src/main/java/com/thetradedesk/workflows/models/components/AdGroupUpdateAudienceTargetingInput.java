/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.thetradedesk.workflows.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.thetradedesk.workflows.utils.Utils;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class AdGroupUpdateAudienceTargetingInput {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audienceId")
    private Optional<? extends StringWorkflowsOptional> audienceId;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audienceAcceleratorExclusionsEnabled")
    private JsonNullable<Boolean> audienceAcceleratorExclusionsEnabled;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audienceBoosterEnabled")
    private JsonNullable<Boolean> audienceBoosterEnabled;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audienceExcluderEnabled")
    private JsonNullable<Boolean> audienceExcluderEnabled;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audiencePredictorEnabled")
    private JsonNullable<Boolean> audiencePredictorEnabled;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("crossDeviceVendorListForAudience")
    private JsonNullable<? extends List<Integer>> crossDeviceVendorListForAudience;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recencyExclusionWindowInMinutes")
    private JsonNullable<Integer> recencyExclusionWindowInMinutes;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetTrackableUsersEnabled")
    private JsonNullable<Boolean> targetTrackableUsersEnabled;

    @JsonCreator
    public AdGroupUpdateAudienceTargetingInput(
            @JsonProperty("audienceId") Optional<? extends StringWorkflowsOptional> audienceId,
            @JsonProperty("audienceAcceleratorExclusionsEnabled") JsonNullable<Boolean> audienceAcceleratorExclusionsEnabled,
            @JsonProperty("audienceBoosterEnabled") JsonNullable<Boolean> audienceBoosterEnabled,
            @JsonProperty("audienceExcluderEnabled") JsonNullable<Boolean> audienceExcluderEnabled,
            @JsonProperty("audiencePredictorEnabled") JsonNullable<Boolean> audiencePredictorEnabled,
            @JsonProperty("crossDeviceVendorListForAudience") JsonNullable<? extends List<Integer>> crossDeviceVendorListForAudience,
            @JsonProperty("recencyExclusionWindowInMinutes") JsonNullable<Integer> recencyExclusionWindowInMinutes,
            @JsonProperty("targetTrackableUsersEnabled") JsonNullable<Boolean> targetTrackableUsersEnabled) {
        Utils.checkNotNull(audienceId, "audienceId");
        Utils.checkNotNull(audienceAcceleratorExclusionsEnabled, "audienceAcceleratorExclusionsEnabled");
        Utils.checkNotNull(audienceBoosterEnabled, "audienceBoosterEnabled");
        Utils.checkNotNull(audienceExcluderEnabled, "audienceExcluderEnabled");
        Utils.checkNotNull(audiencePredictorEnabled, "audiencePredictorEnabled");
        Utils.checkNotNull(crossDeviceVendorListForAudience, "crossDeviceVendorListForAudience");
        Utils.checkNotNull(recencyExclusionWindowInMinutes, "recencyExclusionWindowInMinutes");
        Utils.checkNotNull(targetTrackableUsersEnabled, "targetTrackableUsersEnabled");
        this.audienceId = audienceId;
        this.audienceAcceleratorExclusionsEnabled = audienceAcceleratorExclusionsEnabled;
        this.audienceBoosterEnabled = audienceBoosterEnabled;
        this.audienceExcluderEnabled = audienceExcluderEnabled;
        this.audiencePredictorEnabled = audiencePredictorEnabled;
        this.crossDeviceVendorListForAudience = crossDeviceVendorListForAudience;
        this.recencyExclusionWindowInMinutes = recencyExclusionWindowInMinutes;
        this.targetTrackableUsersEnabled = targetTrackableUsersEnabled;
    }
    
    public AdGroupUpdateAudienceTargetingInput() {
        this(Optional.empty(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<StringWorkflowsOptional> audienceId() {
        return (Optional<StringWorkflowsOptional>) audienceId;
    }

    @JsonIgnore
    public JsonNullable<Boolean> audienceAcceleratorExclusionsEnabled() {
        return audienceAcceleratorExclusionsEnabled;
    }

    @JsonIgnore
    public JsonNullable<Boolean> audienceBoosterEnabled() {
        return audienceBoosterEnabled;
    }

    @JsonIgnore
    public JsonNullable<Boolean> audienceExcluderEnabled() {
        return audienceExcluderEnabled;
    }

    @JsonIgnore
    public JsonNullable<Boolean> audiencePredictorEnabled() {
        return audiencePredictorEnabled;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<Integer>> crossDeviceVendorListForAudience() {
        return (JsonNullable<List<Integer>>) crossDeviceVendorListForAudience;
    }

    @JsonIgnore
    public JsonNullable<Integer> recencyExclusionWindowInMinutes() {
        return recencyExclusionWindowInMinutes;
    }

    @JsonIgnore
    public JsonNullable<Boolean> targetTrackableUsersEnabled() {
        return targetTrackableUsersEnabled;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public AdGroupUpdateAudienceTargetingInput withAudienceId(StringWorkflowsOptional audienceId) {
        Utils.checkNotNull(audienceId, "audienceId");
        this.audienceId = Optional.ofNullable(audienceId);
        return this;
    }

    public AdGroupUpdateAudienceTargetingInput withAudienceId(Optional<? extends StringWorkflowsOptional> audienceId) {
        Utils.checkNotNull(audienceId, "audienceId");
        this.audienceId = audienceId;
        return this;
    }

    public AdGroupUpdateAudienceTargetingInput withAudienceAcceleratorExclusionsEnabled(boolean audienceAcceleratorExclusionsEnabled) {
        Utils.checkNotNull(audienceAcceleratorExclusionsEnabled, "audienceAcceleratorExclusionsEnabled");
        this.audienceAcceleratorExclusionsEnabled = JsonNullable.of(audienceAcceleratorExclusionsEnabled);
        return this;
    }

    public AdGroupUpdateAudienceTargetingInput withAudienceAcceleratorExclusionsEnabled(JsonNullable<Boolean> audienceAcceleratorExclusionsEnabled) {
        Utils.checkNotNull(audienceAcceleratorExclusionsEnabled, "audienceAcceleratorExclusionsEnabled");
        this.audienceAcceleratorExclusionsEnabled = audienceAcceleratorExclusionsEnabled;
        return this;
    }

    public AdGroupUpdateAudienceTargetingInput withAudienceBoosterEnabled(boolean audienceBoosterEnabled) {
        Utils.checkNotNull(audienceBoosterEnabled, "audienceBoosterEnabled");
        this.audienceBoosterEnabled = JsonNullable.of(audienceBoosterEnabled);
        return this;
    }

    public AdGroupUpdateAudienceTargetingInput withAudienceBoosterEnabled(JsonNullable<Boolean> audienceBoosterEnabled) {
        Utils.checkNotNull(audienceBoosterEnabled, "audienceBoosterEnabled");
        this.audienceBoosterEnabled = audienceBoosterEnabled;
        return this;
    }

    public AdGroupUpdateAudienceTargetingInput withAudienceExcluderEnabled(boolean audienceExcluderEnabled) {
        Utils.checkNotNull(audienceExcluderEnabled, "audienceExcluderEnabled");
        this.audienceExcluderEnabled = JsonNullable.of(audienceExcluderEnabled);
        return this;
    }

    public AdGroupUpdateAudienceTargetingInput withAudienceExcluderEnabled(JsonNullable<Boolean> audienceExcluderEnabled) {
        Utils.checkNotNull(audienceExcluderEnabled, "audienceExcluderEnabled");
        this.audienceExcluderEnabled = audienceExcluderEnabled;
        return this;
    }

    public AdGroupUpdateAudienceTargetingInput withAudiencePredictorEnabled(boolean audiencePredictorEnabled) {
        Utils.checkNotNull(audiencePredictorEnabled, "audiencePredictorEnabled");
        this.audiencePredictorEnabled = JsonNullable.of(audiencePredictorEnabled);
        return this;
    }

    public AdGroupUpdateAudienceTargetingInput withAudiencePredictorEnabled(JsonNullable<Boolean> audiencePredictorEnabled) {
        Utils.checkNotNull(audiencePredictorEnabled, "audiencePredictorEnabled");
        this.audiencePredictorEnabled = audiencePredictorEnabled;
        return this;
    }

    public AdGroupUpdateAudienceTargetingInput withCrossDeviceVendorListForAudience(List<Integer> crossDeviceVendorListForAudience) {
        Utils.checkNotNull(crossDeviceVendorListForAudience, "crossDeviceVendorListForAudience");
        this.crossDeviceVendorListForAudience = JsonNullable.of(crossDeviceVendorListForAudience);
        return this;
    }

    public AdGroupUpdateAudienceTargetingInput withCrossDeviceVendorListForAudience(JsonNullable<? extends List<Integer>> crossDeviceVendorListForAudience) {
        Utils.checkNotNull(crossDeviceVendorListForAudience, "crossDeviceVendorListForAudience");
        this.crossDeviceVendorListForAudience = crossDeviceVendorListForAudience;
        return this;
    }

    public AdGroupUpdateAudienceTargetingInput withRecencyExclusionWindowInMinutes(int recencyExclusionWindowInMinutes) {
        Utils.checkNotNull(recencyExclusionWindowInMinutes, "recencyExclusionWindowInMinutes");
        this.recencyExclusionWindowInMinutes = JsonNullable.of(recencyExclusionWindowInMinutes);
        return this;
    }

    public AdGroupUpdateAudienceTargetingInput withRecencyExclusionWindowInMinutes(JsonNullable<Integer> recencyExclusionWindowInMinutes) {
        Utils.checkNotNull(recencyExclusionWindowInMinutes, "recencyExclusionWindowInMinutes");
        this.recencyExclusionWindowInMinutes = recencyExclusionWindowInMinutes;
        return this;
    }

    public AdGroupUpdateAudienceTargetingInput withTargetTrackableUsersEnabled(boolean targetTrackableUsersEnabled) {
        Utils.checkNotNull(targetTrackableUsersEnabled, "targetTrackableUsersEnabled");
        this.targetTrackableUsersEnabled = JsonNullable.of(targetTrackableUsersEnabled);
        return this;
    }

    public AdGroupUpdateAudienceTargetingInput withTargetTrackableUsersEnabled(JsonNullable<Boolean> targetTrackableUsersEnabled) {
        Utils.checkNotNull(targetTrackableUsersEnabled, "targetTrackableUsersEnabled");
        this.targetTrackableUsersEnabled = targetTrackableUsersEnabled;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AdGroupUpdateAudienceTargetingInput other = (AdGroupUpdateAudienceTargetingInput) o;
        return 
            Objects.deepEquals(this.audienceId, other.audienceId) &&
            Objects.deepEquals(this.audienceAcceleratorExclusionsEnabled, other.audienceAcceleratorExclusionsEnabled) &&
            Objects.deepEquals(this.audienceBoosterEnabled, other.audienceBoosterEnabled) &&
            Objects.deepEquals(this.audienceExcluderEnabled, other.audienceExcluderEnabled) &&
            Objects.deepEquals(this.audiencePredictorEnabled, other.audiencePredictorEnabled) &&
            Objects.deepEquals(this.crossDeviceVendorListForAudience, other.crossDeviceVendorListForAudience) &&
            Objects.deepEquals(this.recencyExclusionWindowInMinutes, other.recencyExclusionWindowInMinutes) &&
            Objects.deepEquals(this.targetTrackableUsersEnabled, other.targetTrackableUsersEnabled);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            audienceId,
            audienceAcceleratorExclusionsEnabled,
            audienceBoosterEnabled,
            audienceExcluderEnabled,
            audiencePredictorEnabled,
            crossDeviceVendorListForAudience,
            recencyExclusionWindowInMinutes,
            targetTrackableUsersEnabled);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AdGroupUpdateAudienceTargetingInput.class,
                "audienceId", audienceId,
                "audienceAcceleratorExclusionsEnabled", audienceAcceleratorExclusionsEnabled,
                "audienceBoosterEnabled", audienceBoosterEnabled,
                "audienceExcluderEnabled", audienceExcluderEnabled,
                "audiencePredictorEnabled", audiencePredictorEnabled,
                "crossDeviceVendorListForAudience", crossDeviceVendorListForAudience,
                "recencyExclusionWindowInMinutes", recencyExclusionWindowInMinutes,
                "targetTrackableUsersEnabled", targetTrackableUsersEnabled);
    }
    
    public final static class Builder {
 
        private Optional<? extends StringWorkflowsOptional> audienceId = Optional.empty();
 
        private JsonNullable<Boolean> audienceAcceleratorExclusionsEnabled = JsonNullable.undefined();
 
        private JsonNullable<Boolean> audienceBoosterEnabled = JsonNullable.undefined();
 
        private JsonNullable<Boolean> audienceExcluderEnabled = JsonNullable.undefined();
 
        private JsonNullable<Boolean> audiencePredictorEnabled = JsonNullable.undefined();
 
        private JsonNullable<? extends List<Integer>> crossDeviceVendorListForAudience = JsonNullable.undefined();
 
        private JsonNullable<Integer> recencyExclusionWindowInMinutes = JsonNullable.undefined();
 
        private JsonNullable<Boolean> targetTrackableUsersEnabled = JsonNullable.undefined();
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder audienceId(StringWorkflowsOptional audienceId) {
            Utils.checkNotNull(audienceId, "audienceId");
            this.audienceId = Optional.ofNullable(audienceId);
            return this;
        }

        public Builder audienceId(Optional<? extends StringWorkflowsOptional> audienceId) {
            Utils.checkNotNull(audienceId, "audienceId");
            this.audienceId = audienceId;
            return this;
        }

        public Builder audienceAcceleratorExclusionsEnabled(boolean audienceAcceleratorExclusionsEnabled) {
            Utils.checkNotNull(audienceAcceleratorExclusionsEnabled, "audienceAcceleratorExclusionsEnabled");
            this.audienceAcceleratorExclusionsEnabled = JsonNullable.of(audienceAcceleratorExclusionsEnabled);
            return this;
        }

        public Builder audienceAcceleratorExclusionsEnabled(JsonNullable<Boolean> audienceAcceleratorExclusionsEnabled) {
            Utils.checkNotNull(audienceAcceleratorExclusionsEnabled, "audienceAcceleratorExclusionsEnabled");
            this.audienceAcceleratorExclusionsEnabled = audienceAcceleratorExclusionsEnabled;
            return this;
        }

        public Builder audienceBoosterEnabled(boolean audienceBoosterEnabled) {
            Utils.checkNotNull(audienceBoosterEnabled, "audienceBoosterEnabled");
            this.audienceBoosterEnabled = JsonNullable.of(audienceBoosterEnabled);
            return this;
        }

        public Builder audienceBoosterEnabled(JsonNullable<Boolean> audienceBoosterEnabled) {
            Utils.checkNotNull(audienceBoosterEnabled, "audienceBoosterEnabled");
            this.audienceBoosterEnabled = audienceBoosterEnabled;
            return this;
        }

        public Builder audienceExcluderEnabled(boolean audienceExcluderEnabled) {
            Utils.checkNotNull(audienceExcluderEnabled, "audienceExcluderEnabled");
            this.audienceExcluderEnabled = JsonNullable.of(audienceExcluderEnabled);
            return this;
        }

        public Builder audienceExcluderEnabled(JsonNullable<Boolean> audienceExcluderEnabled) {
            Utils.checkNotNull(audienceExcluderEnabled, "audienceExcluderEnabled");
            this.audienceExcluderEnabled = audienceExcluderEnabled;
            return this;
        }

        public Builder audiencePredictorEnabled(boolean audiencePredictorEnabled) {
            Utils.checkNotNull(audiencePredictorEnabled, "audiencePredictorEnabled");
            this.audiencePredictorEnabled = JsonNullable.of(audiencePredictorEnabled);
            return this;
        }

        public Builder audiencePredictorEnabled(JsonNullable<Boolean> audiencePredictorEnabled) {
            Utils.checkNotNull(audiencePredictorEnabled, "audiencePredictorEnabled");
            this.audiencePredictorEnabled = audiencePredictorEnabled;
            return this;
        }

        public Builder crossDeviceVendorListForAudience(List<Integer> crossDeviceVendorListForAudience) {
            Utils.checkNotNull(crossDeviceVendorListForAudience, "crossDeviceVendorListForAudience");
            this.crossDeviceVendorListForAudience = JsonNullable.of(crossDeviceVendorListForAudience);
            return this;
        }

        public Builder crossDeviceVendorListForAudience(JsonNullable<? extends List<Integer>> crossDeviceVendorListForAudience) {
            Utils.checkNotNull(crossDeviceVendorListForAudience, "crossDeviceVendorListForAudience");
            this.crossDeviceVendorListForAudience = crossDeviceVendorListForAudience;
            return this;
        }

        public Builder recencyExclusionWindowInMinutes(int recencyExclusionWindowInMinutes) {
            Utils.checkNotNull(recencyExclusionWindowInMinutes, "recencyExclusionWindowInMinutes");
            this.recencyExclusionWindowInMinutes = JsonNullable.of(recencyExclusionWindowInMinutes);
            return this;
        }

        public Builder recencyExclusionWindowInMinutes(JsonNullable<Integer> recencyExclusionWindowInMinutes) {
            Utils.checkNotNull(recencyExclusionWindowInMinutes, "recencyExclusionWindowInMinutes");
            this.recencyExclusionWindowInMinutes = recencyExclusionWindowInMinutes;
            return this;
        }

        public Builder targetTrackableUsersEnabled(boolean targetTrackableUsersEnabled) {
            Utils.checkNotNull(targetTrackableUsersEnabled, "targetTrackableUsersEnabled");
            this.targetTrackableUsersEnabled = JsonNullable.of(targetTrackableUsersEnabled);
            return this;
        }

        public Builder targetTrackableUsersEnabled(JsonNullable<Boolean> targetTrackableUsersEnabled) {
            Utils.checkNotNull(targetTrackableUsersEnabled, "targetTrackableUsersEnabled");
            this.targetTrackableUsersEnabled = targetTrackableUsersEnabled;
            return this;
        }
        
        public AdGroupUpdateAudienceTargetingInput build() {
            return new AdGroupUpdateAudienceTargetingInput(
                audienceId,
                audienceAcceleratorExclusionsEnabled,
                audienceBoosterEnabled,
                audienceExcluderEnabled,
                audiencePredictorEnabled,
                crossDeviceVendorListForAudience,
                recencyExclusionWindowInMinutes,
                targetTrackableUsersEnabled);
        }
    }
}
