/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.thetradedesk.workflows.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.thetradedesk.workflows.utils.Utils;
import java.lang.Double;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;


public class CampaignWorkflowFlightInput {

    @JsonProperty("startDateInclusiveUTC")
    private OffsetDateTime startDateInclusiveUTC;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endDateExclusiveUTC")
    private JsonNullable<OffsetDateTime> endDateExclusiveUTC;


    @JsonProperty("budgetInAdvertiserCurrency")
    private double budgetInAdvertiserCurrency;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("budgetInImpressions")
    private JsonNullable<Long> budgetInImpressions;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dailyTargetInAdvertiserCurrency")
    private JsonNullable<Double> dailyTargetInAdvertiserCurrency;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dailyTargetInImpressions")
    private JsonNullable<Long> dailyTargetInImpressions;

    @JsonCreator
    public CampaignWorkflowFlightInput(
            @JsonProperty("startDateInclusiveUTC") OffsetDateTime startDateInclusiveUTC,
            @JsonProperty("endDateExclusiveUTC") JsonNullable<OffsetDateTime> endDateExclusiveUTC,
            @JsonProperty("budgetInAdvertiserCurrency") double budgetInAdvertiserCurrency,
            @JsonProperty("budgetInImpressions") JsonNullable<Long> budgetInImpressions,
            @JsonProperty("dailyTargetInAdvertiserCurrency") JsonNullable<Double> dailyTargetInAdvertiserCurrency,
            @JsonProperty("dailyTargetInImpressions") JsonNullable<Long> dailyTargetInImpressions) {
        Utils.checkNotNull(startDateInclusiveUTC, "startDateInclusiveUTC");
        Utils.checkNotNull(endDateExclusiveUTC, "endDateExclusiveUTC");
        Utils.checkNotNull(budgetInAdvertiserCurrency, "budgetInAdvertiserCurrency");
        Utils.checkNotNull(budgetInImpressions, "budgetInImpressions");
        Utils.checkNotNull(dailyTargetInAdvertiserCurrency, "dailyTargetInAdvertiserCurrency");
        Utils.checkNotNull(dailyTargetInImpressions, "dailyTargetInImpressions");
        this.startDateInclusiveUTC = startDateInclusiveUTC;
        this.endDateExclusiveUTC = endDateExclusiveUTC;
        this.budgetInAdvertiserCurrency = budgetInAdvertiserCurrency;
        this.budgetInImpressions = budgetInImpressions;
        this.dailyTargetInAdvertiserCurrency = dailyTargetInAdvertiserCurrency;
        this.dailyTargetInImpressions = dailyTargetInImpressions;
    }
    
    public CampaignWorkflowFlightInput(
            OffsetDateTime startDateInclusiveUTC,
            double budgetInAdvertiserCurrency) {
        this(startDateInclusiveUTC, JsonNullable.undefined(), budgetInAdvertiserCurrency,
            JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    @JsonIgnore
    public OffsetDateTime startDateInclusiveUTC() {
        return startDateInclusiveUTC;
    }

    @JsonIgnore
    public JsonNullable<OffsetDateTime> endDateExclusiveUTC() {
        return endDateExclusiveUTC;
    }

    @JsonIgnore
    public double budgetInAdvertiserCurrency() {
        return budgetInAdvertiserCurrency;
    }

    @JsonIgnore
    public JsonNullable<Long> budgetInImpressions() {
        return budgetInImpressions;
    }

    @JsonIgnore
    public JsonNullable<Double> dailyTargetInAdvertiserCurrency() {
        return dailyTargetInAdvertiserCurrency;
    }

    @JsonIgnore
    public JsonNullable<Long> dailyTargetInImpressions() {
        return dailyTargetInImpressions;
    }

    public static Builder builder() {
        return new Builder();
    }


    public CampaignWorkflowFlightInput withStartDateInclusiveUTC(OffsetDateTime startDateInclusiveUTC) {
        Utils.checkNotNull(startDateInclusiveUTC, "startDateInclusiveUTC");
        this.startDateInclusiveUTC = startDateInclusiveUTC;
        return this;
    }

    public CampaignWorkflowFlightInput withEndDateExclusiveUTC(OffsetDateTime endDateExclusiveUTC) {
        Utils.checkNotNull(endDateExclusiveUTC, "endDateExclusiveUTC");
        this.endDateExclusiveUTC = JsonNullable.of(endDateExclusiveUTC);
        return this;
    }

    public CampaignWorkflowFlightInput withEndDateExclusiveUTC(JsonNullable<OffsetDateTime> endDateExclusiveUTC) {
        Utils.checkNotNull(endDateExclusiveUTC, "endDateExclusiveUTC");
        this.endDateExclusiveUTC = endDateExclusiveUTC;
        return this;
    }

    public CampaignWorkflowFlightInput withBudgetInAdvertiserCurrency(double budgetInAdvertiserCurrency) {
        Utils.checkNotNull(budgetInAdvertiserCurrency, "budgetInAdvertiserCurrency");
        this.budgetInAdvertiserCurrency = budgetInAdvertiserCurrency;
        return this;
    }

    public CampaignWorkflowFlightInput withBudgetInImpressions(long budgetInImpressions) {
        Utils.checkNotNull(budgetInImpressions, "budgetInImpressions");
        this.budgetInImpressions = JsonNullable.of(budgetInImpressions);
        return this;
    }

    public CampaignWorkflowFlightInput withBudgetInImpressions(JsonNullable<Long> budgetInImpressions) {
        Utils.checkNotNull(budgetInImpressions, "budgetInImpressions");
        this.budgetInImpressions = budgetInImpressions;
        return this;
    }

    public CampaignWorkflowFlightInput withDailyTargetInAdvertiserCurrency(double dailyTargetInAdvertiserCurrency) {
        Utils.checkNotNull(dailyTargetInAdvertiserCurrency, "dailyTargetInAdvertiserCurrency");
        this.dailyTargetInAdvertiserCurrency = JsonNullable.of(dailyTargetInAdvertiserCurrency);
        return this;
    }

    public CampaignWorkflowFlightInput withDailyTargetInAdvertiserCurrency(JsonNullable<Double> dailyTargetInAdvertiserCurrency) {
        Utils.checkNotNull(dailyTargetInAdvertiserCurrency, "dailyTargetInAdvertiserCurrency");
        this.dailyTargetInAdvertiserCurrency = dailyTargetInAdvertiserCurrency;
        return this;
    }

    public CampaignWorkflowFlightInput withDailyTargetInImpressions(long dailyTargetInImpressions) {
        Utils.checkNotNull(dailyTargetInImpressions, "dailyTargetInImpressions");
        this.dailyTargetInImpressions = JsonNullable.of(dailyTargetInImpressions);
        return this;
    }

    public CampaignWorkflowFlightInput withDailyTargetInImpressions(JsonNullable<Long> dailyTargetInImpressions) {
        Utils.checkNotNull(dailyTargetInImpressions, "dailyTargetInImpressions");
        this.dailyTargetInImpressions = dailyTargetInImpressions;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CampaignWorkflowFlightInput other = (CampaignWorkflowFlightInput) o;
        return 
            Utils.enhancedDeepEquals(this.startDateInclusiveUTC, other.startDateInclusiveUTC) &&
            Utils.enhancedDeepEquals(this.endDateExclusiveUTC, other.endDateExclusiveUTC) &&
            Utils.enhancedDeepEquals(this.budgetInAdvertiserCurrency, other.budgetInAdvertiserCurrency) &&
            Utils.enhancedDeepEquals(this.budgetInImpressions, other.budgetInImpressions) &&
            Utils.enhancedDeepEquals(this.dailyTargetInAdvertiserCurrency, other.dailyTargetInAdvertiserCurrency) &&
            Utils.enhancedDeepEquals(this.dailyTargetInImpressions, other.dailyTargetInImpressions);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            startDateInclusiveUTC, endDateExclusiveUTC, budgetInAdvertiserCurrency,
            budgetInImpressions, dailyTargetInAdvertiserCurrency, dailyTargetInImpressions);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CampaignWorkflowFlightInput.class,
                "startDateInclusiveUTC", startDateInclusiveUTC,
                "endDateExclusiveUTC", endDateExclusiveUTC,
                "budgetInAdvertiserCurrency", budgetInAdvertiserCurrency,
                "budgetInImpressions", budgetInImpressions,
                "dailyTargetInAdvertiserCurrency", dailyTargetInAdvertiserCurrency,
                "dailyTargetInImpressions", dailyTargetInImpressions);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private OffsetDateTime startDateInclusiveUTC;

        private JsonNullable<OffsetDateTime> endDateExclusiveUTC = JsonNullable.undefined();

        private Double budgetInAdvertiserCurrency;

        private JsonNullable<Long> budgetInImpressions = JsonNullable.undefined();

        private JsonNullable<Double> dailyTargetInAdvertiserCurrency = JsonNullable.undefined();

        private JsonNullable<Long> dailyTargetInImpressions = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        public Builder startDateInclusiveUTC(OffsetDateTime startDateInclusiveUTC) {
            Utils.checkNotNull(startDateInclusiveUTC, "startDateInclusiveUTC");
            this.startDateInclusiveUTC = startDateInclusiveUTC;
            return this;
        }


        public Builder endDateExclusiveUTC(OffsetDateTime endDateExclusiveUTC) {
            Utils.checkNotNull(endDateExclusiveUTC, "endDateExclusiveUTC");
            this.endDateExclusiveUTC = JsonNullable.of(endDateExclusiveUTC);
            return this;
        }

        public Builder endDateExclusiveUTC(JsonNullable<OffsetDateTime> endDateExclusiveUTC) {
            Utils.checkNotNull(endDateExclusiveUTC, "endDateExclusiveUTC");
            this.endDateExclusiveUTC = endDateExclusiveUTC;
            return this;
        }


        public Builder budgetInAdvertiserCurrency(double budgetInAdvertiserCurrency) {
            Utils.checkNotNull(budgetInAdvertiserCurrency, "budgetInAdvertiserCurrency");
            this.budgetInAdvertiserCurrency = budgetInAdvertiserCurrency;
            return this;
        }


        public Builder budgetInImpressions(long budgetInImpressions) {
            Utils.checkNotNull(budgetInImpressions, "budgetInImpressions");
            this.budgetInImpressions = JsonNullable.of(budgetInImpressions);
            return this;
        }

        public Builder budgetInImpressions(JsonNullable<Long> budgetInImpressions) {
            Utils.checkNotNull(budgetInImpressions, "budgetInImpressions");
            this.budgetInImpressions = budgetInImpressions;
            return this;
        }


        public Builder dailyTargetInAdvertiserCurrency(double dailyTargetInAdvertiserCurrency) {
            Utils.checkNotNull(dailyTargetInAdvertiserCurrency, "dailyTargetInAdvertiserCurrency");
            this.dailyTargetInAdvertiserCurrency = JsonNullable.of(dailyTargetInAdvertiserCurrency);
            return this;
        }

        public Builder dailyTargetInAdvertiserCurrency(JsonNullable<Double> dailyTargetInAdvertiserCurrency) {
            Utils.checkNotNull(dailyTargetInAdvertiserCurrency, "dailyTargetInAdvertiserCurrency");
            this.dailyTargetInAdvertiserCurrency = dailyTargetInAdvertiserCurrency;
            return this;
        }


        public Builder dailyTargetInImpressions(long dailyTargetInImpressions) {
            Utils.checkNotNull(dailyTargetInImpressions, "dailyTargetInImpressions");
            this.dailyTargetInImpressions = JsonNullable.of(dailyTargetInImpressions);
            return this;
        }

        public Builder dailyTargetInImpressions(JsonNullable<Long> dailyTargetInImpressions) {
            Utils.checkNotNull(dailyTargetInImpressions, "dailyTargetInImpressions");
            this.dailyTargetInImpressions = dailyTargetInImpressions;
            return this;
        }

        public CampaignWorkflowFlightInput build() {

            return new CampaignWorkflowFlightInput(
                startDateInclusiveUTC, endDateExclusiveUTC, budgetInAdvertiserCurrency,
                budgetInImpressions, dailyTargetInAdvertiserCurrency, dailyTargetInImpressions);
        }

    }
}
