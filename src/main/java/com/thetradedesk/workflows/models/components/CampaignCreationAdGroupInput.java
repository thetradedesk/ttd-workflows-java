/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.thetradedesk.workflows.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.thetradedesk.workflows.utils.Utils;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class CampaignCreationAdGroupInput {

    @JsonProperty("name")
    private String name;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isEnabled")
    private JsonNullable<Boolean> isEnabled;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    private JsonNullable<String> description;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("programmaticGuaranteedPrivateContractId")
    private JsonNullable<String> programmaticGuaranteedPrivateContractId;

    @JsonProperty("channel")
    private AdGroupChannel channel;

    @JsonProperty("funnelLocation")
    private AdGroupFunnelLocation funnelLocation;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("budget")
    private Optional<? extends AdGroupBudgetInput> budget;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("baseBidCpmInAdvertiserCurrency")
    private JsonNullable<Double> baseBidCpmInAdvertiserCurrency;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxBidCpmInAdvertiserCurrency")
    private JsonNullable<Double> maxBidCpmInAdvertiserCurrency;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audienceTargeting")
    private Optional<? extends AdGroupAudienceTargetingInput> audienceTargeting;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("roiGoal")
    private Optional<? extends AdGroupRoiGoalInput> roiGoal;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creativeIds")
    private JsonNullable<? extends List<String>> creativeIds;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("associatedBidLists")
    private JsonNullable<? extends List<AdGroupAssociateBidListInput>> associatedBidLists;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advancedSettings")
    private Optional<? extends AdGroupAdvancedSettingsInput> advancedSettings;

    @JsonCreator
    public CampaignCreationAdGroupInput(
            @JsonProperty("name") String name,
            @JsonProperty("isEnabled") JsonNullable<Boolean> isEnabled,
            @JsonProperty("description") JsonNullable<String> description,
            @JsonProperty("programmaticGuaranteedPrivateContractId") JsonNullable<String> programmaticGuaranteedPrivateContractId,
            @JsonProperty("channel") AdGroupChannel channel,
            @JsonProperty("funnelLocation") AdGroupFunnelLocation funnelLocation,
            @JsonProperty("budget") Optional<? extends AdGroupBudgetInput> budget,
            @JsonProperty("baseBidCpmInAdvertiserCurrency") JsonNullable<Double> baseBidCpmInAdvertiserCurrency,
            @JsonProperty("maxBidCpmInAdvertiserCurrency") JsonNullable<Double> maxBidCpmInAdvertiserCurrency,
            @JsonProperty("audienceTargeting") Optional<? extends AdGroupAudienceTargetingInput> audienceTargeting,
            @JsonProperty("roiGoal") Optional<? extends AdGroupRoiGoalInput> roiGoal,
            @JsonProperty("creativeIds") JsonNullable<? extends List<String>> creativeIds,
            @JsonProperty("associatedBidLists") JsonNullable<? extends List<AdGroupAssociateBidListInput>> associatedBidLists,
            @JsonProperty("advancedSettings") Optional<? extends AdGroupAdvancedSettingsInput> advancedSettings) {
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(isEnabled, "isEnabled");
        Utils.checkNotNull(description, "description");
        Utils.checkNotNull(programmaticGuaranteedPrivateContractId, "programmaticGuaranteedPrivateContractId");
        Utils.checkNotNull(channel, "channel");
        Utils.checkNotNull(funnelLocation, "funnelLocation");
        Utils.checkNotNull(budget, "budget");
        Utils.checkNotNull(baseBidCpmInAdvertiserCurrency, "baseBidCpmInAdvertiserCurrency");
        Utils.checkNotNull(maxBidCpmInAdvertiserCurrency, "maxBidCpmInAdvertiserCurrency");
        Utils.checkNotNull(audienceTargeting, "audienceTargeting");
        Utils.checkNotNull(roiGoal, "roiGoal");
        Utils.checkNotNull(creativeIds, "creativeIds");
        Utils.checkNotNull(associatedBidLists, "associatedBidLists");
        Utils.checkNotNull(advancedSettings, "advancedSettings");
        this.name = name;
        this.isEnabled = isEnabled;
        this.description = description;
        this.programmaticGuaranteedPrivateContractId = programmaticGuaranteedPrivateContractId;
        this.channel = channel;
        this.funnelLocation = funnelLocation;
        this.budget = budget;
        this.baseBidCpmInAdvertiserCurrency = baseBidCpmInAdvertiserCurrency;
        this.maxBidCpmInAdvertiserCurrency = maxBidCpmInAdvertiserCurrency;
        this.audienceTargeting = audienceTargeting;
        this.roiGoal = roiGoal;
        this.creativeIds = creativeIds;
        this.associatedBidLists = associatedBidLists;
        this.advancedSettings = advancedSettings;
    }
    
    public CampaignCreationAdGroupInput(
            String name,
            AdGroupChannel channel,
            AdGroupFunnelLocation funnelLocation) {
        this(name, JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), channel, funnelLocation, Optional.empty(), JsonNullable.undefined(), JsonNullable.undefined(), Optional.empty(), Optional.empty(), JsonNullable.undefined(), JsonNullable.undefined(), Optional.empty());
    }

    @JsonIgnore
    public String name() {
        return name;
    }

    @JsonIgnore
    public JsonNullable<Boolean> isEnabled() {
        return isEnabled;
    }

    @JsonIgnore
    public JsonNullable<String> description() {
        return description;
    }

    @JsonIgnore
    public JsonNullable<String> programmaticGuaranteedPrivateContractId() {
        return programmaticGuaranteedPrivateContractId;
    }

    @JsonIgnore
    public AdGroupChannel channel() {
        return channel;
    }

    @JsonIgnore
    public AdGroupFunnelLocation funnelLocation() {
        return funnelLocation;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<AdGroupBudgetInput> budget() {
        return (Optional<AdGroupBudgetInput>) budget;
    }

    @JsonIgnore
    public JsonNullable<Double> baseBidCpmInAdvertiserCurrency() {
        return baseBidCpmInAdvertiserCurrency;
    }

    @JsonIgnore
    public JsonNullable<Double> maxBidCpmInAdvertiserCurrency() {
        return maxBidCpmInAdvertiserCurrency;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<AdGroupAudienceTargetingInput> audienceTargeting() {
        return (Optional<AdGroupAudienceTargetingInput>) audienceTargeting;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<AdGroupRoiGoalInput> roiGoal() {
        return (Optional<AdGroupRoiGoalInput>) roiGoal;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<String>> creativeIds() {
        return (JsonNullable<List<String>>) creativeIds;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<AdGroupAssociateBidListInput>> associatedBidLists() {
        return (JsonNullable<List<AdGroupAssociateBidListInput>>) associatedBidLists;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<AdGroupAdvancedSettingsInput> advancedSettings() {
        return (Optional<AdGroupAdvancedSettingsInput>) advancedSettings;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public CampaignCreationAdGroupInput withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    public CampaignCreationAdGroupInput withIsEnabled(boolean isEnabled) {
        Utils.checkNotNull(isEnabled, "isEnabled");
        this.isEnabled = JsonNullable.of(isEnabled);
        return this;
    }

    public CampaignCreationAdGroupInput withIsEnabled(JsonNullable<Boolean> isEnabled) {
        Utils.checkNotNull(isEnabled, "isEnabled");
        this.isEnabled = isEnabled;
        return this;
    }

    public CampaignCreationAdGroupInput withDescription(String description) {
        Utils.checkNotNull(description, "description");
        this.description = JsonNullable.of(description);
        return this;
    }

    public CampaignCreationAdGroupInput withDescription(JsonNullable<String> description) {
        Utils.checkNotNull(description, "description");
        this.description = description;
        return this;
    }

    public CampaignCreationAdGroupInput withProgrammaticGuaranteedPrivateContractId(String programmaticGuaranteedPrivateContractId) {
        Utils.checkNotNull(programmaticGuaranteedPrivateContractId, "programmaticGuaranteedPrivateContractId");
        this.programmaticGuaranteedPrivateContractId = JsonNullable.of(programmaticGuaranteedPrivateContractId);
        return this;
    }

    public CampaignCreationAdGroupInput withProgrammaticGuaranteedPrivateContractId(JsonNullable<String> programmaticGuaranteedPrivateContractId) {
        Utils.checkNotNull(programmaticGuaranteedPrivateContractId, "programmaticGuaranteedPrivateContractId");
        this.programmaticGuaranteedPrivateContractId = programmaticGuaranteedPrivateContractId;
        return this;
    }

    public CampaignCreationAdGroupInput withChannel(AdGroupChannel channel) {
        Utils.checkNotNull(channel, "channel");
        this.channel = channel;
        return this;
    }

    public CampaignCreationAdGroupInput withFunnelLocation(AdGroupFunnelLocation funnelLocation) {
        Utils.checkNotNull(funnelLocation, "funnelLocation");
        this.funnelLocation = funnelLocation;
        return this;
    }

    public CampaignCreationAdGroupInput withBudget(AdGroupBudgetInput budget) {
        Utils.checkNotNull(budget, "budget");
        this.budget = Optional.ofNullable(budget);
        return this;
    }

    public CampaignCreationAdGroupInput withBudget(Optional<? extends AdGroupBudgetInput> budget) {
        Utils.checkNotNull(budget, "budget");
        this.budget = budget;
        return this;
    }

    public CampaignCreationAdGroupInput withBaseBidCpmInAdvertiserCurrency(double baseBidCpmInAdvertiserCurrency) {
        Utils.checkNotNull(baseBidCpmInAdvertiserCurrency, "baseBidCpmInAdvertiserCurrency");
        this.baseBidCpmInAdvertiserCurrency = JsonNullable.of(baseBidCpmInAdvertiserCurrency);
        return this;
    }

    public CampaignCreationAdGroupInput withBaseBidCpmInAdvertiserCurrency(JsonNullable<Double> baseBidCpmInAdvertiserCurrency) {
        Utils.checkNotNull(baseBidCpmInAdvertiserCurrency, "baseBidCpmInAdvertiserCurrency");
        this.baseBidCpmInAdvertiserCurrency = baseBidCpmInAdvertiserCurrency;
        return this;
    }

    public CampaignCreationAdGroupInput withMaxBidCpmInAdvertiserCurrency(double maxBidCpmInAdvertiserCurrency) {
        Utils.checkNotNull(maxBidCpmInAdvertiserCurrency, "maxBidCpmInAdvertiserCurrency");
        this.maxBidCpmInAdvertiserCurrency = JsonNullable.of(maxBidCpmInAdvertiserCurrency);
        return this;
    }

    public CampaignCreationAdGroupInput withMaxBidCpmInAdvertiserCurrency(JsonNullable<Double> maxBidCpmInAdvertiserCurrency) {
        Utils.checkNotNull(maxBidCpmInAdvertiserCurrency, "maxBidCpmInAdvertiserCurrency");
        this.maxBidCpmInAdvertiserCurrency = maxBidCpmInAdvertiserCurrency;
        return this;
    }

    public CampaignCreationAdGroupInput withAudienceTargeting(AdGroupAudienceTargetingInput audienceTargeting) {
        Utils.checkNotNull(audienceTargeting, "audienceTargeting");
        this.audienceTargeting = Optional.ofNullable(audienceTargeting);
        return this;
    }

    public CampaignCreationAdGroupInput withAudienceTargeting(Optional<? extends AdGroupAudienceTargetingInput> audienceTargeting) {
        Utils.checkNotNull(audienceTargeting, "audienceTargeting");
        this.audienceTargeting = audienceTargeting;
        return this;
    }

    public CampaignCreationAdGroupInput withRoiGoal(AdGroupRoiGoalInput roiGoal) {
        Utils.checkNotNull(roiGoal, "roiGoal");
        this.roiGoal = Optional.ofNullable(roiGoal);
        return this;
    }

    public CampaignCreationAdGroupInput withRoiGoal(Optional<? extends AdGroupRoiGoalInput> roiGoal) {
        Utils.checkNotNull(roiGoal, "roiGoal");
        this.roiGoal = roiGoal;
        return this;
    }

    public CampaignCreationAdGroupInput withCreativeIds(List<String> creativeIds) {
        Utils.checkNotNull(creativeIds, "creativeIds");
        this.creativeIds = JsonNullable.of(creativeIds);
        return this;
    }

    public CampaignCreationAdGroupInput withCreativeIds(JsonNullable<? extends List<String>> creativeIds) {
        Utils.checkNotNull(creativeIds, "creativeIds");
        this.creativeIds = creativeIds;
        return this;
    }

    public CampaignCreationAdGroupInput withAssociatedBidLists(List<AdGroupAssociateBidListInput> associatedBidLists) {
        Utils.checkNotNull(associatedBidLists, "associatedBidLists");
        this.associatedBidLists = JsonNullable.of(associatedBidLists);
        return this;
    }

    public CampaignCreationAdGroupInput withAssociatedBidLists(JsonNullable<? extends List<AdGroupAssociateBidListInput>> associatedBidLists) {
        Utils.checkNotNull(associatedBidLists, "associatedBidLists");
        this.associatedBidLists = associatedBidLists;
        return this;
    }

    public CampaignCreationAdGroupInput withAdvancedSettings(AdGroupAdvancedSettingsInput advancedSettings) {
        Utils.checkNotNull(advancedSettings, "advancedSettings");
        this.advancedSettings = Optional.ofNullable(advancedSettings);
        return this;
    }

    public CampaignCreationAdGroupInput withAdvancedSettings(Optional<? extends AdGroupAdvancedSettingsInput> advancedSettings) {
        Utils.checkNotNull(advancedSettings, "advancedSettings");
        this.advancedSettings = advancedSettings;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CampaignCreationAdGroupInput other = (CampaignCreationAdGroupInput) o;
        return 
            Objects.deepEquals(this.name, other.name) &&
            Objects.deepEquals(this.isEnabled, other.isEnabled) &&
            Objects.deepEquals(this.description, other.description) &&
            Objects.deepEquals(this.programmaticGuaranteedPrivateContractId, other.programmaticGuaranteedPrivateContractId) &&
            Objects.deepEquals(this.channel, other.channel) &&
            Objects.deepEquals(this.funnelLocation, other.funnelLocation) &&
            Objects.deepEquals(this.budget, other.budget) &&
            Objects.deepEquals(this.baseBidCpmInAdvertiserCurrency, other.baseBidCpmInAdvertiserCurrency) &&
            Objects.deepEquals(this.maxBidCpmInAdvertiserCurrency, other.maxBidCpmInAdvertiserCurrency) &&
            Objects.deepEquals(this.audienceTargeting, other.audienceTargeting) &&
            Objects.deepEquals(this.roiGoal, other.roiGoal) &&
            Objects.deepEquals(this.creativeIds, other.creativeIds) &&
            Objects.deepEquals(this.associatedBidLists, other.associatedBidLists) &&
            Objects.deepEquals(this.advancedSettings, other.advancedSettings);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            name,
            isEnabled,
            description,
            programmaticGuaranteedPrivateContractId,
            channel,
            funnelLocation,
            budget,
            baseBidCpmInAdvertiserCurrency,
            maxBidCpmInAdvertiserCurrency,
            audienceTargeting,
            roiGoal,
            creativeIds,
            associatedBidLists,
            advancedSettings);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CampaignCreationAdGroupInput.class,
                "name", name,
                "isEnabled", isEnabled,
                "description", description,
                "programmaticGuaranteedPrivateContractId", programmaticGuaranteedPrivateContractId,
                "channel", channel,
                "funnelLocation", funnelLocation,
                "budget", budget,
                "baseBidCpmInAdvertiserCurrency", baseBidCpmInAdvertiserCurrency,
                "maxBidCpmInAdvertiserCurrency", maxBidCpmInAdvertiserCurrency,
                "audienceTargeting", audienceTargeting,
                "roiGoal", roiGoal,
                "creativeIds", creativeIds,
                "associatedBidLists", associatedBidLists,
                "advancedSettings", advancedSettings);
    }
    
    public final static class Builder {
 
        private String name;
 
        private JsonNullable<Boolean> isEnabled = JsonNullable.undefined();
 
        private JsonNullable<String> description = JsonNullable.undefined();
 
        private JsonNullable<String> programmaticGuaranteedPrivateContractId = JsonNullable.undefined();
 
        private AdGroupChannel channel;
 
        private AdGroupFunnelLocation funnelLocation;
 
        private Optional<? extends AdGroupBudgetInput> budget = Optional.empty();
 
        private JsonNullable<Double> baseBidCpmInAdvertiserCurrency = JsonNullable.undefined();
 
        private JsonNullable<Double> maxBidCpmInAdvertiserCurrency = JsonNullable.undefined();
 
        private Optional<? extends AdGroupAudienceTargetingInput> audienceTargeting = Optional.empty();
 
        private Optional<? extends AdGroupRoiGoalInput> roiGoal = Optional.empty();
 
        private JsonNullable<? extends List<String>> creativeIds = JsonNullable.undefined();
 
        private JsonNullable<? extends List<AdGroupAssociateBidListInput>> associatedBidLists = JsonNullable.undefined();
 
        private Optional<? extends AdGroupAdvancedSettingsInput> advancedSettings = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }

        public Builder isEnabled(boolean isEnabled) {
            Utils.checkNotNull(isEnabled, "isEnabled");
            this.isEnabled = JsonNullable.of(isEnabled);
            return this;
        }

        public Builder isEnabled(JsonNullable<Boolean> isEnabled) {
            Utils.checkNotNull(isEnabled, "isEnabled");
            this.isEnabled = isEnabled;
            return this;
        }

        public Builder description(String description) {
            Utils.checkNotNull(description, "description");
            this.description = JsonNullable.of(description);
            return this;
        }

        public Builder description(JsonNullable<String> description) {
            Utils.checkNotNull(description, "description");
            this.description = description;
            return this;
        }

        public Builder programmaticGuaranteedPrivateContractId(String programmaticGuaranteedPrivateContractId) {
            Utils.checkNotNull(programmaticGuaranteedPrivateContractId, "programmaticGuaranteedPrivateContractId");
            this.programmaticGuaranteedPrivateContractId = JsonNullable.of(programmaticGuaranteedPrivateContractId);
            return this;
        }

        public Builder programmaticGuaranteedPrivateContractId(JsonNullable<String> programmaticGuaranteedPrivateContractId) {
            Utils.checkNotNull(programmaticGuaranteedPrivateContractId, "programmaticGuaranteedPrivateContractId");
            this.programmaticGuaranteedPrivateContractId = programmaticGuaranteedPrivateContractId;
            return this;
        }

        public Builder channel(AdGroupChannel channel) {
            Utils.checkNotNull(channel, "channel");
            this.channel = channel;
            return this;
        }

        public Builder funnelLocation(AdGroupFunnelLocation funnelLocation) {
            Utils.checkNotNull(funnelLocation, "funnelLocation");
            this.funnelLocation = funnelLocation;
            return this;
        }

        public Builder budget(AdGroupBudgetInput budget) {
            Utils.checkNotNull(budget, "budget");
            this.budget = Optional.ofNullable(budget);
            return this;
        }

        public Builder budget(Optional<? extends AdGroupBudgetInput> budget) {
            Utils.checkNotNull(budget, "budget");
            this.budget = budget;
            return this;
        }

        public Builder baseBidCpmInAdvertiserCurrency(double baseBidCpmInAdvertiserCurrency) {
            Utils.checkNotNull(baseBidCpmInAdvertiserCurrency, "baseBidCpmInAdvertiserCurrency");
            this.baseBidCpmInAdvertiserCurrency = JsonNullable.of(baseBidCpmInAdvertiserCurrency);
            return this;
        }

        public Builder baseBidCpmInAdvertiserCurrency(JsonNullable<Double> baseBidCpmInAdvertiserCurrency) {
            Utils.checkNotNull(baseBidCpmInAdvertiserCurrency, "baseBidCpmInAdvertiserCurrency");
            this.baseBidCpmInAdvertiserCurrency = baseBidCpmInAdvertiserCurrency;
            return this;
        }

        public Builder maxBidCpmInAdvertiserCurrency(double maxBidCpmInAdvertiserCurrency) {
            Utils.checkNotNull(maxBidCpmInAdvertiserCurrency, "maxBidCpmInAdvertiserCurrency");
            this.maxBidCpmInAdvertiserCurrency = JsonNullable.of(maxBidCpmInAdvertiserCurrency);
            return this;
        }

        public Builder maxBidCpmInAdvertiserCurrency(JsonNullable<Double> maxBidCpmInAdvertiserCurrency) {
            Utils.checkNotNull(maxBidCpmInAdvertiserCurrency, "maxBidCpmInAdvertiserCurrency");
            this.maxBidCpmInAdvertiserCurrency = maxBidCpmInAdvertiserCurrency;
            return this;
        }

        public Builder audienceTargeting(AdGroupAudienceTargetingInput audienceTargeting) {
            Utils.checkNotNull(audienceTargeting, "audienceTargeting");
            this.audienceTargeting = Optional.ofNullable(audienceTargeting);
            return this;
        }

        public Builder audienceTargeting(Optional<? extends AdGroupAudienceTargetingInput> audienceTargeting) {
            Utils.checkNotNull(audienceTargeting, "audienceTargeting");
            this.audienceTargeting = audienceTargeting;
            return this;
        }

        public Builder roiGoal(AdGroupRoiGoalInput roiGoal) {
            Utils.checkNotNull(roiGoal, "roiGoal");
            this.roiGoal = Optional.ofNullable(roiGoal);
            return this;
        }

        public Builder roiGoal(Optional<? extends AdGroupRoiGoalInput> roiGoal) {
            Utils.checkNotNull(roiGoal, "roiGoal");
            this.roiGoal = roiGoal;
            return this;
        }

        public Builder creativeIds(List<String> creativeIds) {
            Utils.checkNotNull(creativeIds, "creativeIds");
            this.creativeIds = JsonNullable.of(creativeIds);
            return this;
        }

        public Builder creativeIds(JsonNullable<? extends List<String>> creativeIds) {
            Utils.checkNotNull(creativeIds, "creativeIds");
            this.creativeIds = creativeIds;
            return this;
        }

        public Builder associatedBidLists(List<AdGroupAssociateBidListInput> associatedBidLists) {
            Utils.checkNotNull(associatedBidLists, "associatedBidLists");
            this.associatedBidLists = JsonNullable.of(associatedBidLists);
            return this;
        }

        public Builder associatedBidLists(JsonNullable<? extends List<AdGroupAssociateBidListInput>> associatedBidLists) {
            Utils.checkNotNull(associatedBidLists, "associatedBidLists");
            this.associatedBidLists = associatedBidLists;
            return this;
        }

        public Builder advancedSettings(AdGroupAdvancedSettingsInput advancedSettings) {
            Utils.checkNotNull(advancedSettings, "advancedSettings");
            this.advancedSettings = Optional.ofNullable(advancedSettings);
            return this;
        }

        public Builder advancedSettings(Optional<? extends AdGroupAdvancedSettingsInput> advancedSettings) {
            Utils.checkNotNull(advancedSettings, "advancedSettings");
            this.advancedSettings = advancedSettings;
            return this;
        }
        
        public CampaignCreationAdGroupInput build() {
            return new CampaignCreationAdGroupInput(
                name,
                isEnabled,
                description,
                programmaticGuaranteedPrivateContractId,
                channel,
                funnelLocation,
                budget,
                baseBidCpmInAdvertiserCurrency,
                maxBidCpmInAdvertiserCurrency,
                audienceTargeting,
                roiGoal,
                creativeIds,
                associatedBidLists,
                advancedSettings);
        }
    }
}
