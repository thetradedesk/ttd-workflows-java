/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.thetradedesk.workflows.models.components;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.thetradedesk.workflows.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;

public class CampaignVersionResponse {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    private JsonNullable<String> id;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    private JsonNullable<String> version;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("budgetingVersion")
    private JsonNullable<String> budgetingVersion;

    @JsonCreator
    public CampaignVersionResponse(
            @JsonProperty("id") JsonNullable<String> id,
            @JsonProperty("version") JsonNullable<String> version,
            @JsonProperty("budgetingVersion") JsonNullable<String> budgetingVersion) {
        Utils.checkNotNull(id, "id");
        Utils.checkNotNull(version, "version");
        Utils.checkNotNull(budgetingVersion, "budgetingVersion");
        this.id = id;
        this.version = version;
        this.budgetingVersion = budgetingVersion;
    }
    
    public CampaignVersionResponse() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    @JsonIgnore
    public JsonNullable<String> id() {
        return id;
    }

    @JsonIgnore
    public JsonNullable<String> version() {
        return version;
    }

    @JsonIgnore
    public JsonNullable<String> budgetingVersion() {
        return budgetingVersion;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public CampaignVersionResponse withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = JsonNullable.of(id);
        return this;
    }

    public CampaignVersionResponse withId(JsonNullable<String> id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    public CampaignVersionResponse withVersion(String version) {
        Utils.checkNotNull(version, "version");
        this.version = JsonNullable.of(version);
        return this;
    }

    public CampaignVersionResponse withVersion(JsonNullable<String> version) {
        Utils.checkNotNull(version, "version");
        this.version = version;
        return this;
    }

    public CampaignVersionResponse withBudgetingVersion(String budgetingVersion) {
        Utils.checkNotNull(budgetingVersion, "budgetingVersion");
        this.budgetingVersion = JsonNullable.of(budgetingVersion);
        return this;
    }

    public CampaignVersionResponse withBudgetingVersion(JsonNullable<String> budgetingVersion) {
        Utils.checkNotNull(budgetingVersion, "budgetingVersion");
        this.budgetingVersion = budgetingVersion;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CampaignVersionResponse other = (CampaignVersionResponse) o;
        return 
            Objects.deepEquals(this.id, other.id) &&
            Objects.deepEquals(this.version, other.version) &&
            Objects.deepEquals(this.budgetingVersion, other.budgetingVersion);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            id,
            version,
            budgetingVersion);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CampaignVersionResponse.class,
                "id", id,
                "version", version,
                "budgetingVersion", budgetingVersion);
    }
    
    public final static class Builder {
 
        private JsonNullable<String> id = JsonNullable.undefined();
 
        private JsonNullable<String> version = JsonNullable.undefined();
 
        private JsonNullable<String> budgetingVersion = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = JsonNullable.of(id);
            return this;
        }

        public Builder id(JsonNullable<String> id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }

        public Builder version(String version) {
            Utils.checkNotNull(version, "version");
            this.version = JsonNullable.of(version);
            return this;
        }

        public Builder version(JsonNullable<String> version) {
            Utils.checkNotNull(version, "version");
            this.version = version;
            return this;
        }

        public Builder budgetingVersion(String budgetingVersion) {
            Utils.checkNotNull(budgetingVersion, "budgetingVersion");
            this.budgetingVersion = JsonNullable.of(budgetingVersion);
            return this;
        }

        public Builder budgetingVersion(JsonNullable<String> budgetingVersion) {
            Utils.checkNotNull(budgetingVersion, "budgetingVersion");
            this.budgetingVersion = budgetingVersion;
            return this;
        }
        
        public CampaignVersionResponse build() {
            return new CampaignVersionResponse(
                id,
                version,
                budgetingVersion);
        }
    }
}

