/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.thetradedesk.workflows.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.thetradedesk.workflows.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * GraphQlJobCallbackInput
 * 
 * <p>Input class for providing a callback's url and any headers needed for the callback.
 */
public class GraphQlJobCallbackInput {

    @JsonProperty("callbackUrl")
    private String callbackUrl;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("callbackHeaders")
    private JsonNullable<? extends List<KeyValuePairOfStringAndStringInput>> callbackHeaders;

    @JsonCreator
    public GraphQlJobCallbackInput(
            @JsonProperty("callbackUrl") String callbackUrl,
            @JsonProperty("callbackHeaders") JsonNullable<? extends List<KeyValuePairOfStringAndStringInput>> callbackHeaders) {
        Utils.checkNotNull(callbackUrl, "callbackUrl");
        Utils.checkNotNull(callbackHeaders, "callbackHeaders");
        this.callbackUrl = callbackUrl;
        this.callbackHeaders = callbackHeaders;
    }
    
    public GraphQlJobCallbackInput(
            String callbackUrl) {
        this(callbackUrl, JsonNullable.undefined());
    }

    @JsonIgnore
    public String callbackUrl() {
        return callbackUrl;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<KeyValuePairOfStringAndStringInput>> callbackHeaders() {
        return (JsonNullable<List<KeyValuePairOfStringAndStringInput>>) callbackHeaders;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public GraphQlJobCallbackInput withCallbackUrl(String callbackUrl) {
        Utils.checkNotNull(callbackUrl, "callbackUrl");
        this.callbackUrl = callbackUrl;
        return this;
    }

    public GraphQlJobCallbackInput withCallbackHeaders(List<KeyValuePairOfStringAndStringInput> callbackHeaders) {
        Utils.checkNotNull(callbackHeaders, "callbackHeaders");
        this.callbackHeaders = JsonNullable.of(callbackHeaders);
        return this;
    }

    public GraphQlJobCallbackInput withCallbackHeaders(JsonNullable<? extends List<KeyValuePairOfStringAndStringInput>> callbackHeaders) {
        Utils.checkNotNull(callbackHeaders, "callbackHeaders");
        this.callbackHeaders = callbackHeaders;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GraphQlJobCallbackInput other = (GraphQlJobCallbackInput) o;
        return 
            Objects.deepEquals(this.callbackUrl, other.callbackUrl) &&
            Objects.deepEquals(this.callbackHeaders, other.callbackHeaders);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            callbackUrl,
            callbackHeaders);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GraphQlJobCallbackInput.class,
                "callbackUrl", callbackUrl,
                "callbackHeaders", callbackHeaders);
    }
    
    public final static class Builder {
 
        private String callbackUrl;
 
        private JsonNullable<? extends List<KeyValuePairOfStringAndStringInput>> callbackHeaders = JsonNullable.undefined();
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder callbackUrl(String callbackUrl) {
            Utils.checkNotNull(callbackUrl, "callbackUrl");
            this.callbackUrl = callbackUrl;
            return this;
        }

        public Builder callbackHeaders(List<KeyValuePairOfStringAndStringInput> callbackHeaders) {
            Utils.checkNotNull(callbackHeaders, "callbackHeaders");
            this.callbackHeaders = JsonNullable.of(callbackHeaders);
            return this;
        }

        public Builder callbackHeaders(JsonNullable<? extends List<KeyValuePairOfStringAndStringInput>> callbackHeaders) {
            Utils.checkNotNull(callbackHeaders, "callbackHeaders");
            this.callbackHeaders = callbackHeaders;
            return this;
        }
        
        public GraphQlJobCallbackInput build() {
            return new GraphQlJobCallbackInput(
                callbackUrl,
                callbackHeaders);
        }
    }
}
