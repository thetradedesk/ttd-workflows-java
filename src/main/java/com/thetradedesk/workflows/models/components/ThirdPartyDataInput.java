/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.thetradedesk.workflows.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.thetradedesk.workflows.utils.Utils;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;

public class ThirdPartyDataInput {

    /**
     * ThirdPartyDataId
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thirdPartyDataId")
    private JsonNullable<Long> thirdPartyDataId;

    /**
     * ThirdPartyDataBrandId
     */
    @JsonProperty("thirdPartyDataBrandId")
    private String thirdPartyDataBrandId;

    @JsonCreator
    public ThirdPartyDataInput(
            @JsonProperty("thirdPartyDataId") JsonNullable<Long> thirdPartyDataId,
            @JsonProperty("thirdPartyDataBrandId") String thirdPartyDataBrandId) {
        Utils.checkNotNull(thirdPartyDataId, "thirdPartyDataId");
        Utils.checkNotNull(thirdPartyDataBrandId, "thirdPartyDataBrandId");
        this.thirdPartyDataId = thirdPartyDataId;
        this.thirdPartyDataBrandId = thirdPartyDataBrandId;
    }
    
    public ThirdPartyDataInput(
            String thirdPartyDataBrandId) {
        this(JsonNullable.undefined(), thirdPartyDataBrandId);
    }

    /**
     * ThirdPartyDataId
     */
    @JsonIgnore
    public JsonNullable<Long> thirdPartyDataId() {
        return thirdPartyDataId;
    }

    /**
     * ThirdPartyDataBrandId
     */
    @JsonIgnore
    public String thirdPartyDataBrandId() {
        return thirdPartyDataBrandId;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * ThirdPartyDataId
     */
    public ThirdPartyDataInput withThirdPartyDataId(long thirdPartyDataId) {
        Utils.checkNotNull(thirdPartyDataId, "thirdPartyDataId");
        this.thirdPartyDataId = JsonNullable.of(thirdPartyDataId);
        return this;
    }

    /**
     * ThirdPartyDataId
     */
    public ThirdPartyDataInput withThirdPartyDataId(JsonNullable<Long> thirdPartyDataId) {
        Utils.checkNotNull(thirdPartyDataId, "thirdPartyDataId");
        this.thirdPartyDataId = thirdPartyDataId;
        return this;
    }

    /**
     * ThirdPartyDataBrandId
     */
    public ThirdPartyDataInput withThirdPartyDataBrandId(String thirdPartyDataBrandId) {
        Utils.checkNotNull(thirdPartyDataBrandId, "thirdPartyDataBrandId");
        this.thirdPartyDataBrandId = thirdPartyDataBrandId;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ThirdPartyDataInput other = (ThirdPartyDataInput) o;
        return 
            Objects.deepEquals(this.thirdPartyDataId, other.thirdPartyDataId) &&
            Objects.deepEquals(this.thirdPartyDataBrandId, other.thirdPartyDataBrandId);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            thirdPartyDataId,
            thirdPartyDataBrandId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ThirdPartyDataInput.class,
                "thirdPartyDataId", thirdPartyDataId,
                "thirdPartyDataBrandId", thirdPartyDataBrandId);
    }
    
    public final static class Builder {
 
        private JsonNullable<Long> thirdPartyDataId = JsonNullable.undefined();
 
        private String thirdPartyDataBrandId;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * ThirdPartyDataId
         */
        public Builder thirdPartyDataId(long thirdPartyDataId) {
            Utils.checkNotNull(thirdPartyDataId, "thirdPartyDataId");
            this.thirdPartyDataId = JsonNullable.of(thirdPartyDataId);
            return this;
        }

        /**
         * ThirdPartyDataId
         */
        public Builder thirdPartyDataId(JsonNullable<Long> thirdPartyDataId) {
            Utils.checkNotNull(thirdPartyDataId, "thirdPartyDataId");
            this.thirdPartyDataId = thirdPartyDataId;
            return this;
        }

        /**
         * ThirdPartyDataBrandId
         */
        public Builder thirdPartyDataBrandId(String thirdPartyDataBrandId) {
            Utils.checkNotNull(thirdPartyDataBrandId, "thirdPartyDataBrandId");
            this.thirdPartyDataBrandId = thirdPartyDataBrandId;
            return this;
        }
        
        public ThirdPartyDataInput build() {
            return new ThirdPartyDataInput(
                thirdPartyDataId,
                thirdPartyDataBrandId);
        }
    }
}
