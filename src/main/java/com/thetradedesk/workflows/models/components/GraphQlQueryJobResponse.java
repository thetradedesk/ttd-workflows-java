/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.thetradedesk.workflows.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.thetradedesk.workflows.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * GraphQlQueryJobResponse
 * 
 * <p>This is the top level class returned to a user when a query job is created.
 */
public class GraphQlQueryJobResponse {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payload")
    private Optional<? extends GraphQlQueryJobPayload> payload;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errors")
    private JsonNullable<String> errors;

    @JsonCreator
    public GraphQlQueryJobResponse(
            @JsonProperty("payload") Optional<? extends GraphQlQueryJobPayload> payload,
            @JsonProperty("errors") JsonNullable<String> errors) {
        Utils.checkNotNull(payload, "payload");
        Utils.checkNotNull(errors, "errors");
        this.payload = payload;
        this.errors = errors;
    }
    
    public GraphQlQueryJobResponse() {
        this(Optional.empty(), JsonNullable.undefined());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GraphQlQueryJobPayload> payload() {
        return (Optional<GraphQlQueryJobPayload>) payload;
    }

    @JsonIgnore
    public JsonNullable<String> errors() {
        return errors;
    }

    public static Builder builder() {
        return new Builder();
    }


    public GraphQlQueryJobResponse withPayload(GraphQlQueryJobPayload payload) {
        Utils.checkNotNull(payload, "payload");
        this.payload = Optional.ofNullable(payload);
        return this;
    }


    public GraphQlQueryJobResponse withPayload(Optional<? extends GraphQlQueryJobPayload> payload) {
        Utils.checkNotNull(payload, "payload");
        this.payload = payload;
        return this;
    }

    public GraphQlQueryJobResponse withErrors(String errors) {
        Utils.checkNotNull(errors, "errors");
        this.errors = JsonNullable.of(errors);
        return this;
    }

    public GraphQlQueryJobResponse withErrors(JsonNullable<String> errors) {
        Utils.checkNotNull(errors, "errors");
        this.errors = errors;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GraphQlQueryJobResponse other = (GraphQlQueryJobResponse) o;
        return 
            Utils.enhancedDeepEquals(this.payload, other.payload) &&
            Utils.enhancedDeepEquals(this.errors, other.errors);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            payload, errors);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GraphQlQueryJobResponse.class,
                "payload", payload,
                "errors", errors);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Optional<? extends GraphQlQueryJobPayload> payload = Optional.empty();

        private JsonNullable<String> errors = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        public Builder payload(GraphQlQueryJobPayload payload) {
            Utils.checkNotNull(payload, "payload");
            this.payload = Optional.ofNullable(payload);
            return this;
        }

        public Builder payload(Optional<? extends GraphQlQueryJobPayload> payload) {
            Utils.checkNotNull(payload, "payload");
            this.payload = payload;
            return this;
        }


        public Builder errors(String errors) {
            Utils.checkNotNull(errors, "errors");
            this.errors = JsonNullable.of(errors);
            return this;
        }

        public Builder errors(JsonNullable<String> errors) {
            Utils.checkNotNull(errors, "errors");
            this.errors = errors;
            return this;
        }

        public GraphQlQueryJobResponse build() {

            return new GraphQlQueryJobResponse(
                payload, errors);
        }

    }
}
