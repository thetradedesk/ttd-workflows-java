/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.thetradedesk.workflows.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.thetradedesk.workflows.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class CallRestApiWorkflowInput {

    @JsonProperty("methodType")
    private RestApiMethodType methodType;

    @JsonInclude(Include.ALWAYS)
    @JsonProperty("endpoint")
    private Optional<String> endpoint;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataBody")
    private JsonNullable<String> dataBody;

    @JsonCreator
    public CallRestApiWorkflowInput(
            @JsonProperty("methodType") RestApiMethodType methodType,
            @JsonProperty("endpoint") Optional<String> endpoint,
            @JsonProperty("dataBody") JsonNullable<String> dataBody) {
        Utils.checkNotNull(methodType, "methodType");
        Utils.checkNotNull(endpoint, "endpoint");
        Utils.checkNotNull(dataBody, "dataBody");
        this.methodType = methodType;
        this.endpoint = endpoint;
        this.dataBody = dataBody;
    }
    
    public CallRestApiWorkflowInput(
            RestApiMethodType methodType) {
        this(methodType, Optional.empty(), JsonNullable.undefined());
    }

    @JsonIgnore
    public RestApiMethodType methodType() {
        return methodType;
    }

    @JsonIgnore
    public Optional<String> endpoint() {
        return endpoint;
    }

    @JsonIgnore
    public JsonNullable<String> dataBody() {
        return dataBody;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public CallRestApiWorkflowInput withMethodType(RestApiMethodType methodType) {
        Utils.checkNotNull(methodType, "methodType");
        this.methodType = methodType;
        return this;
    }

    public CallRestApiWorkflowInput withEndpoint(String endpoint) {
        Utils.checkNotNull(endpoint, "endpoint");
        this.endpoint = Optional.ofNullable(endpoint);
        return this;
    }

    public CallRestApiWorkflowInput withEndpoint(Optional<String> endpoint) {
        Utils.checkNotNull(endpoint, "endpoint");
        this.endpoint = endpoint;
        return this;
    }

    public CallRestApiWorkflowInput withDataBody(String dataBody) {
        Utils.checkNotNull(dataBody, "dataBody");
        this.dataBody = JsonNullable.of(dataBody);
        return this;
    }

    public CallRestApiWorkflowInput withDataBody(JsonNullable<String> dataBody) {
        Utils.checkNotNull(dataBody, "dataBody");
        this.dataBody = dataBody;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CallRestApiWorkflowInput other = (CallRestApiWorkflowInput) o;
        return 
            Objects.deepEquals(this.methodType, other.methodType) &&
            Objects.deepEquals(this.endpoint, other.endpoint) &&
            Objects.deepEquals(this.dataBody, other.dataBody);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            methodType,
            endpoint,
            dataBody);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CallRestApiWorkflowInput.class,
                "methodType", methodType,
                "endpoint", endpoint,
                "dataBody", dataBody);
    }
    
    public final static class Builder {
 
        private RestApiMethodType methodType;
 
        private Optional<String> endpoint = Optional.empty();
 
        private JsonNullable<String> dataBody = JsonNullable.undefined();
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder methodType(RestApiMethodType methodType) {
            Utils.checkNotNull(methodType, "methodType");
            this.methodType = methodType;
            return this;
        }

        public Builder endpoint(String endpoint) {
            Utils.checkNotNull(endpoint, "endpoint");
            this.endpoint = Optional.ofNullable(endpoint);
            return this;
        }

        public Builder endpoint(Optional<String> endpoint) {
            Utils.checkNotNull(endpoint, "endpoint");
            this.endpoint = endpoint;
            return this;
        }

        public Builder dataBody(String dataBody) {
            Utils.checkNotNull(dataBody, "dataBody");
            this.dataBody = JsonNullable.of(dataBody);
            return this;
        }

        public Builder dataBody(JsonNullable<String> dataBody) {
            Utils.checkNotNull(dataBody, "dataBody");
            this.dataBody = dataBody;
            return this;
        }
        
        public CallRestApiWorkflowInput build() {
            return new CallRestApiWorkflowInput(
                methodType,
                endpoint,
                dataBody);
        }
    }
}
