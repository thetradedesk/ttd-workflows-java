/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.thetradedesk.workflows.models.components;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.thetradedesk.workflows.utils.Utils;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
/**
 * SeedCreationInput - Required fields for creating a new seed
 */

public class SeedCreationInput {

    /**
     * The platform ID of the advertiser that owns this Seed.
     */
    @JsonProperty("advertiserId")
    private String advertiserId;

    /**
     * The name of the Seed.
     */
    @JsonProperty("seedName")
    private String seedName;

    /**
     * Whether this is the default seed for this advertiser
     */
    @JsonProperty("isDefault")
    private boolean isDefault;

    @JsonProperty("targetingData")
    private SeedTargetingDataInput targetingData;

    @JsonCreator
    public SeedCreationInput(
            @JsonProperty("advertiserId") String advertiserId,
            @JsonProperty("seedName") String seedName,
            @JsonProperty("isDefault") boolean isDefault,
            @JsonProperty("targetingData") SeedTargetingDataInput targetingData) {
        Utils.checkNotNull(advertiserId, "advertiserId");
        Utils.checkNotNull(seedName, "seedName");
        Utils.checkNotNull(isDefault, "isDefault");
        Utils.checkNotNull(targetingData, "targetingData");
        this.advertiserId = advertiserId;
        this.seedName = seedName;
        this.isDefault = isDefault;
        this.targetingData = targetingData;
    }

    /**
     * The platform ID of the advertiser that owns this Seed.
     */
    @JsonIgnore
    public String advertiserId() {
        return advertiserId;
    }

    /**
     * The name of the Seed.
     */
    @JsonIgnore
    public String seedName() {
        return seedName;
    }

    /**
     * Whether this is the default seed for this advertiser
     */
    @JsonIgnore
    public boolean isDefault() {
        return isDefault;
    }

    @JsonIgnore
    public SeedTargetingDataInput targetingData() {
        return targetingData;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The platform ID of the advertiser that owns this Seed.
     */
    public SeedCreationInput withAdvertiserId(String advertiserId) {
        Utils.checkNotNull(advertiserId, "advertiserId");
        this.advertiserId = advertiserId;
        return this;
    }

    /**
     * The name of the Seed.
     */
    public SeedCreationInput withSeedName(String seedName) {
        Utils.checkNotNull(seedName, "seedName");
        this.seedName = seedName;
        return this;
    }

    /**
     * Whether this is the default seed for this advertiser
     */
    public SeedCreationInput withIsDefault(boolean isDefault) {
        Utils.checkNotNull(isDefault, "isDefault");
        this.isDefault = isDefault;
        return this;
    }

    public SeedCreationInput withTargetingData(SeedTargetingDataInput targetingData) {
        Utils.checkNotNull(targetingData, "targetingData");
        this.targetingData = targetingData;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SeedCreationInput other = (SeedCreationInput) o;
        return 
            Objects.deepEquals(this.advertiserId, other.advertiserId) &&
            Objects.deepEquals(this.seedName, other.seedName) &&
            Objects.deepEquals(this.isDefault, other.isDefault) &&
            Objects.deepEquals(this.targetingData, other.targetingData);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            advertiserId,
            seedName,
            isDefault,
            targetingData);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SeedCreationInput.class,
                "advertiserId", advertiserId,
                "seedName", seedName,
                "isDefault", isDefault,
                "targetingData", targetingData);
    }
    
    public final static class Builder {
 
        private String advertiserId;
 
        private String seedName;
 
        private Boolean isDefault;
 
        private SeedTargetingDataInput targetingData;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The platform ID of the advertiser that owns this Seed.
         */
        public Builder advertiserId(String advertiserId) {
            Utils.checkNotNull(advertiserId, "advertiserId");
            this.advertiserId = advertiserId;
            return this;
        }

        /**
         * The name of the Seed.
         */
        public Builder seedName(String seedName) {
            Utils.checkNotNull(seedName, "seedName");
            this.seedName = seedName;
            return this;
        }

        /**
         * Whether this is the default seed for this advertiser
         */
        public Builder isDefault(boolean isDefault) {
            Utils.checkNotNull(isDefault, "isDefault");
            this.isDefault = isDefault;
            return this;
        }

        public Builder targetingData(SeedTargetingDataInput targetingData) {
            Utils.checkNotNull(targetingData, "targetingData");
            this.targetingData = targetingData;
            return this;
        }
        
        public SeedCreationInput build() {
            return new SeedCreationInput(
                advertiserId,
                seedName,
                isDefault,
                targetingData);
        }
    }
}

