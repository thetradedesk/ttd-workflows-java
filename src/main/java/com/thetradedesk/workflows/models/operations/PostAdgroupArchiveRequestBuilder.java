/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.thetradedesk.workflows.models.operations;

import com.fasterxml.jackson.core.type.TypeReference;
import com.thetradedesk.workflows.utils.LazySingletonValue;
import com.thetradedesk.workflows.utils.Options;
import com.thetradedesk.workflows.utils.RetryConfig;
import com.thetradedesk.workflows.utils.Utils;
import java.lang.Boolean;
import java.lang.Exception;
import java.lang.String;
import java.util.List;
import java.util.Optional;

public class PostAdgroupArchiveRequestBuilder {

    private Optional<Boolean> forceArchive = Utils.readDefaultOrConstValue(
                            "forceArchive",
                            "false",
                            new TypeReference<Optional<Boolean>>() {});
    private Optional<? extends List<String>> requestBody = Optional.empty();
    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKMethodInterfaces.MethodCallPostAdgroupArchive sdk;

    public PostAdgroupArchiveRequestBuilder(SDKMethodInterfaces.MethodCallPostAdgroupArchive sdk) {
        this.sdk = sdk;
    }
                
    public PostAdgroupArchiveRequestBuilder forceArchive(boolean forceArchive) {
        Utils.checkNotNull(forceArchive, "forceArchive");
        this.forceArchive = Optional.of(forceArchive);
        return this;
    }

    public PostAdgroupArchiveRequestBuilder forceArchive(Optional<Boolean> forceArchive) {
        Utils.checkNotNull(forceArchive, "forceArchive");
        this.forceArchive = forceArchive;
        return this;
    }
                
    public PostAdgroupArchiveRequestBuilder requestBody(List<String> requestBody) {
        Utils.checkNotNull(requestBody, "requestBody");
        this.requestBody = Optional.of(requestBody);
        return this;
    }

    public PostAdgroupArchiveRequestBuilder requestBody(Optional<? extends List<String>> requestBody) {
        Utils.checkNotNull(requestBody, "requestBody");
        this.requestBody = requestBody;
        return this;
    }
                
    public PostAdgroupArchiveRequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public PostAdgroupArchiveRequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }

    public PostAdgroupArchiveResponse call() throws Exception {
        if (forceArchive == null) {
            forceArchive = _SINGLETON_VALUE_ForceArchive.value();
        }        Optional<Options> options = Optional.of(Options.builder()
                                                    .retryConfig(retryConfig)
                                                    .build());
        return sdk.postAdgroupArchive(
            forceArchive,
            requestBody,
            options);
    }

    private static final LazySingletonValue<Optional<Boolean>> _SINGLETON_VALUE_ForceArchive =
            new LazySingletonValue<>(
                    "forceArchive",
                    "false",
                    new TypeReference<Optional<Boolean>>() {});
}
